{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/loading-http-interceptor/loading-http-interceptor.component.ts","webpack:///src/app/core/security/authenticated-http-interceptor.service.ts","webpack:///src/app/core/security/authentication-guard.service.ts","webpack:///src/app/core/security/authorization-guard.ts","webpack:///src/app/core/security/authorization.service.ts","webpack:///src/app/core/security/localstoragetoken.service.ts","webpack:///src/app/core/security/session-timeout.service.ts","webpack:///src/app/cts/app-constants.ts","webpack:///src/app/cts/home/components/about-us/about-us.component.ts","webpack:///src/app/cts/home/components/about-us/about-us.component.html","webpack:///src/app/cts/home/components/access-denied/access-denied.component.ts","webpack:///src/app/cts/home/components/access-denied/access-denied.component.html","webpack:///src/app/cts/home/components/achievements/achievements.component.ts","webpack:///src/app/cts/home/components/achievements/achievements.component.html","webpack:///src/app/cts/home/components/achievements/add-achievement/add-achievement.component.ts","webpack:///src/app/cts/home/components/achievements/add-achievement/add-achievement.component.html","webpack:///src/app/cts/home/components/auditlogs/add-auditlog/add-auditlog.component.ts","webpack:///src/app/cts/home/components/auditlogs/add-auditlog/add-auditlog.component.html","webpack:///src/app/cts/home/components/auditlogs/auditlogs.component.ts","webpack:///src/app/cts/home/components/auditlogs/auditlogs.component.html","webpack:///src/app/cts/home/components/branches/add-branch/add-branch.component.ts","webpack:///src/app/cts/home/components/branches/add-branch/add-branch.component.html","webpack:///src/app/cts/home/components/branches/branches.component.ts","webpack:///src/app/cts/home/components/branches/branches.component.html","webpack:///src/app/cts/home/components/change-password/change-password.component.ts","webpack:///src/app/cts/home/components/change-password/change-password.component.html","webpack:///src/app/cts/home/components/change-password/custom-password-validator.ts","webpack:///src/app/cts/home/components/classes/add-class/add-class.component.ts","webpack:///src/app/cts/home/components/classes/add-class/add-class.component.html","webpack:///src/app/cts/home/components/classes/classes.component.ts","webpack:///src/app/cts/home/components/classes/classes.component.html","webpack:///src/app/cts/home/components/dashboard/dashboard.component.ts","webpack:///src/app/cts/home/components/dashboard/dashboard.component.html","webpack:///src/app/cts/home/components/error/error.component.ts","webpack:///src/app/cts/home/components/error/error.component.html","webpack:///src/app/cts/home/components/events/add-event/add-event.component.ts","webpack:///src/app/cts/home/components/events/add-event/add-event.component.html","webpack:///src/app/cts/home/components/events/events.component.ts","webpack:///src/app/cts/home/components/events/events.component.html","webpack:///src/app/cts/home/components/exams/add-exam/add-exam.component.ts","webpack:///src/app/cts/home/components/exams/add-exam/add-exam.component.html","webpack:///src/app/cts/home/components/exams/exams.component.ts","webpack:///src/app/cts/home/components/exams/exams.component.html","webpack:///src/app/cts/home/components/fees/add-fee/add-fee.component.ts","webpack:///src/app/cts/home/components/fees/add-fee/add-fee.component.html","webpack:///src/app/cts/home/components/fees/fees.component.ts","webpack:///src/app/cts/home/components/fees/fees.component.html","webpack:///src/app/cts/home/components/footer/footer.component.ts","webpack:///src/app/cts/home/components/footer/footer.component.html","webpack:///src/app/cts/home/components/layout/layout.component.ts","webpack:///src/app/cts/home/components/layout/layout.component.html","webpack:///src/app/cts/home/components/menubar/menubar.component.ts","webpack:///src/app/cts/home/components/menubar/menubar.component.html","webpack:///src/app/cts/home/components/my-profile/my-profile.component.ts","webpack:///src/app/cts/home/components/my-profile/my-profile.component.html","webpack:///src/app/cts/home/components/news/add-news/add-news.component.ts","webpack:///src/app/cts/home/components/news/add-news/add-news.component.html","webpack:///src/app/cts/home/components/news/news.component.ts","webpack:///src/app/cts/home/components/news/news.component.html","webpack:///src/app/cts/home/components/parents/add-parent/add-parent.component.ts","webpack:///src/app/cts/home/components/parents/add-parent/add-parent.component.html","webpack:///src/app/cts/home/components/parents/parents.component.ts","webpack:///src/app/cts/home/components/parents/parents.component.html","webpack:///src/app/cts/home/components/qualifications/addqualifications/addqualifications.component.ts","webpack:///src/app/cts/home/components/qualifications/addqualifications/addqualifications.component.html","webpack:///src/app/cts/home/components/qualifications/qualifications.component.ts","webpack:///src/app/cts/home/components/qualifications/qualifications.component.html","webpack:///src/app/cts/home/components/role-access/role-access.component.ts","webpack:///src/app/cts/home/components/role-access/role-access.component.html","webpack:///src/app/cts/home/components/sections/add-section/add-section.component.ts","webpack:///src/app/cts/home/components/sections/add-section/add-section.component.html","webpack:///src/app/cts/home/components/sections/sections.component.ts","webpack:///src/app/cts/home/components/sections/sections.component.html","webpack:///src/app/cts/home/components/settings/settings.component.ts","webpack:///src/app/cts/home/components/settings/settings.component.html","webpack:///src/app/cts/home/components/statistics/statistics.component.ts","webpack:///src/app/cts/home/components/statistics/statistics.component.html","webpack:///src/app/cts/home/components/students/add-student/add-student.component.ts","webpack:///src/app/cts/home/components/students/add-student/add-student.component.html","webpack:///src/app/cts/home/components/students/studentedit/studentedit.component.ts","webpack:///src/app/cts/home/components/students/studentedit/studentedit.component.html","webpack:///src/app/cts/home/components/students/studentlayout/studentlayout.component.ts","webpack:///src/app/cts/home/components/students/studentlayout/studentlayout.component.html","webpack:///src/app/cts/home/components/students/studentmarks/studentmarks.component.ts","webpack:///src/app/cts/home/components/students/studentmarks/studentmarks.component.html","webpack:///src/app/cts/home/components/students/studentmore/studentmore.component.ts","webpack:///src/app/cts/home/components/students/studentmore/studentmore.component.html","webpack:///src/app/cts/home/components/students/studentprofile/studentprofile.component.ts","webpack:///src/app/cts/home/components/students/studentprofile/studentprofile.component.html","webpack:///src/app/cts/home/components/students/studentreports/studentreports.component.ts","webpack:///src/app/cts/home/components/students/studentreports/studentreports.component.html","webpack:///src/app/cts/home/components/students/students.component.ts","webpack:///src/app/cts/home/components/students/students.component.html","webpack:///src/app/cts/home/components/subjects/add-subjects/add-subjects.component.ts","webpack:///src/app/cts/home/components/subjects/add-subjects/add-subjects.component.html","webpack:///src/app/cts/home/components/subjects/subjects.component.ts","webpack:///src/app/cts/home/components/subjects/subjects.component.html","webpack:///src/app/cts/home/components/teachers/add-teacher/add-teacher.component.ts","webpack:///src/app/cts/home/components/teachers/add-teacher/add-teacher.component.html","webpack:///src/app/cts/home/components/teachers/teachers.component.ts","webpack:///src/app/cts/home/components/teachers/teachers.component.html","webpack:///src/app/cts/home/components/tiles/tiles.component.ts","webpack:///src/app/cts/home/components/tiles/tiles.component.html","webpack:///src/app/cts/home/components/timetable/add-timetable/add-timetable.component.ts","webpack:///src/app/cts/home/components/timetable/add-timetable/add-timetable.component.html","webpack:///src/app/cts/home/components/timetable/timetable.component.ts","webpack:///src/app/cts/home/components/timetable/timetable.component.html","webpack:///src/app/cts/home/components/topbar/topbar.component.ts","webpack:///src/app/cts/home/components/topbar/topbar.component.html","webpack:///src/app/cts/home/components/users/add-user/add-user.component.ts","webpack:///src/app/cts/home/components/users/add-user/add-user.component.html","webpack:///src/app/cts/home/components/users/users.component.ts","webpack:///src/app/cts/home/components/users/users.component.html","webpack:///src/app/cts/home/homerouting/home-routing.module.ts","webpack:///src/app/cts/home/homerouting/home.module.ts","webpack:///src/app/cts/public/components/login/login.component.ts","webpack:///src/app/cts/public/components/login/login.component.html","webpack:///src/app/cts/public/publicrouting/public-routing.module.ts","webpack:///src/app/cts/public/publicrouting/public.module.ts","webpack:///src/app/cts/shared/models/achievements.ts","webpack:///src/app/cts/shared/models/branches.ts","webpack:///src/app/cts/shared/models/classes.ts","webpack:///src/app/cts/shared/models/exams.ts","webpack:///src/app/cts/shared/models/multi-select-object.ts","webpack:///src/app/cts/shared/models/news.ts","webpack:///src/app/cts/shared/models/paginationutil.ts","webpack:///src/app/cts/shared/models/parents.ts","webpack:///src/app/cts/shared/models/qualifications.ts","webpack:///src/app/cts/shared/models/students.ts","webpack:///src/app/cts/shared/models/subjects.ts","webpack:///src/app/cts/shared/models/teachers.ts","webpack:///src/app/cts/shared/models/tiles.ts","webpack:///src/app/cts/shared/models/timetable.ts","webpack:///src/app/cts/shared/models/users.ts","webpack:///src/app/cts/shared/models/utility.ts","webpack:///src/app/cts/shared/services/achievements.service.ts","webpack:///src/app/cts/shared/services/addauditlog.service.ts","webpack:///src/app/cts/shared/services/auditlogs.service.ts","webpack:///src/app/cts/shared/services/authorization.service.ts","webpack:///src/app/cts/shared/services/branches.service.ts","webpack:///src/app/cts/shared/services/classes.service.ts","webpack:///src/app/cts/shared/services/dashboard.service.ts","webpack:///src/app/cts/shared/services/dropdown.service.ts","webpack:///src/app/cts/shared/services/exams.service.ts","webpack:///src/app/cts/shared/services/input-pattern.service.ts","webpack:///src/app/cts/shared/services/login.service.ts","webpack:///src/app/cts/shared/services/news.service.ts","webpack:///src/app/cts/shared/services/parents.service.ts","webpack:///src/app/cts/shared/services/qualifications.service.ts","webpack:///src/app/cts/shared/services/role-access.service.ts","webpack:///src/app/cts/shared/services/studentreports.service.ts","webpack:///src/app/cts/shared/services/students.service.ts","webpack:///src/app/cts/shared/services/subjects.service.ts","webpack:///src/app/cts/shared/services/teachers.service.ts","webpack:///src/app/cts/shared/services/timetable.service.ts","webpack:///src/app/cts/shared/services/users.service.ts","webpack:///src/app/cts/shared/sharedrouting/sharedrouting-routing.module.ts","webpack:///src/app/cts/shared/sharedrouting/sharedrouting.component.ts","webpack:///src/app/cts/shared/sharedrouting/sharedrouting.component.html","webpack:///src/app/cts/shared/sharedrouting/sharedrouting.module.ts","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","appRoutes","path","redirectTo","pathMatch","loadChildren","m","SharedroutingModule","component","AppRoutingModule","forRoot","imports","AppComponent","sessionTimeoutService","title","display","timeLeft","timeoutWarningVisible","date","Date","setSeconds","toISOString","substr","result","showWarning","resetTimer","KeepAlive","selector","templateUrl","styleUrls","SessionTimeoutServiceProvider","provide","useFactory","getSessionTimeoutService","multi","deps","LocalstoragetokenServiceProvider","useExisting","LoadingHttpInterceptorProvider","AuthenticatedHttpInterceptorServiceProvider","getAuthenticatedHttpInterceptor","AppModule","router","declarations","providers","bootstrap","tokenProvider","LoadingHttpInterceptor","requests","anyRequestsLoading","asObservable","next","url","indexOf","urlWithParams","handle","pipe","event","error","LoadingHttpInterceptorFactory","LoadingHttpInterceptorFactoryProvider","AuthenticatedHttpInterceptorService","TokenProvider","endsWith","headers","set","clone","token","getToken","currentUser","JSON","parse","errorRedirectPage","has","isLogout","status","navigate","queryParams","message","body","err","cancelTimer","navigateByUrl","providedIn","AuthenticationGuardService","loginService","ngUnsubscribe","route","state","checkLogin","canActivate","sessionStorage","getItem","JwtHelper","str","output","replace","length","decodeURIComponent","encodeURI","window","atob","parts","split","decoded","urlBase64Decode","AuthorizationGuard","httpClient","authorizationService","permissions","authorizeRouteAccess","featureOptions","permissionsOnComponent","permission","push","permissionValue","data","filter","x","includes","AUTHZ_SERVICE","AuthorizationServiceBase","AuthorizationResult","DenialReason","LocalstoragetokenService","UserName","userId","SessionTimeoutService","started","resetting","sessionWarning","timeoutMinutes","warningMinutes","sessionTime","setItem","toString","isNaN","Number","checkForSessionValues","countdown","timerSubscription","unsubscribe","subscribe","val","lastTimeTick","now","seconds","getTime","removeItem","loadJson","filePath","json","loadTextFileAjaxSync","mimeType","xmlhttp","XMLHttpRequest","open","overrideMimeType","send","responseText","AppConstants","Api","api","DateTimeFormat","datetimeformat","Messages","messages","AboutUsComponent","AccessDeniedComponent","AchievementsComponent","dropdownService","AchievementsService","fb","errorMessage","successMessage","users","branches","numberOfPages","totalcount","noOfItems","advancedFilterValue","currentPage","achievements","label","value","dropdowns","getDropdowns","success","cols","field","header","loading","createFilterForm","$event","myFiltersDiv","nativeElement","classList","contains","remove","add","pageObject","getGridFilters","isinitialload","pageCount","undefined","currentrows","rows","pageNo","loadGrids","stringify","pagingData","paging","getAchievements","parseInt","total","pageSize","el","i","assign","indexId","relativeTo","type","btoa","position","toBeDeletedId","customObj","querytype","AEDAchievements","DataTable","reset","filtersForm","group","createddate","format","getDefaultFormat","getFilterDateFormat","toggleClass","addNew","getFilterFormat","resetFilterForm","onPageChange","achievementRevoke","AddAchievementComponent","location","inputpattern","formSubmitAttempt","isDisabled","isRequired","params","achievementId","formType","createForm","pageTitle","editControls","fetchData","addAchievementForm","validators","required","pattern","bindEditAchievementDetails","getDefaultFilter","idValue","editData","setValue","branch","valid","back","Alphabet","addAchievementSubmit","keyPressAlphabet","list","AddAuditlogComponent","auditLogService","addauditlogService","moment","actions","tablecode","AuditlogTableDetails","auditLogs","resetForm","AuditlogsComponent","AuditlogsService","getAuditlogs","auditlogs","rowExpand","AddBranchComponent","BranchesService","branchId","addBranchForm","bindEditBranchDetails","getBranches","AEDBranches","AlphaNumeric","addBranchSubmit","BranchesComponent","checkPermission","toggleBranch","branchRevoke","ChangePasswordComponent","changePasswordForm","oldPassword","minLength","newPassword","confirmPassword","validator","controls","console","log","changePwdSubmit","ConfirmPasswordValidator","controlName","matchingControlName","previousControlName","formGroup","control","matchingControl","previousControl","errors","confirmPasswordValidator","setErrors","samePasswordValidator","customLessThanCurrentDateValidator","AC","parent","doiControl","get","selectedDoi","currentDate","ValidDate","AddClassComponent","ClassesService","sections","classId","addClassForm","bindEditClassDetails","getClasses","name","noofsections","AEDClasses","addClassSubmit","ClassesComponent","classes","classRevoke","DashboardComponent","dashboardservice","GetSudentsbyGender","GetAcademicPerformance","GetAcievements","GetTeacherPerformance","ourExpenditureData","labels","datasets","backgroundColor","borderColor","ourOverviewData","hoverBackgroundColor","ourIncomedata","fill","eventsData","announcementData","eventOptions","plugins","defaultDate","left","center","right","editable","dateClick","alert","responsiveOptions","breakpoint","numVisible","numScroll","ourTopStudents","getReqData","getDashBoard","gendercount","Gender","forEach","ele","ctcstudents","find","ctcstudent_gender","count","ourStudentsData","subjects","MaledataSet","FemaledataSet","element","subjectName","MaleResult","table1","gender","FemaleResult","marks","academicPerformance","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","ourachivementsData","teacherPerformancedata","legend","chartType","ErrorComponent","backtoscreen","AddEventComponent","achievementService","branchids","categories","registration","eventId","addEventForm","bindEditEventDetails","getEvents","branch_id","category","accept_registrations","description","start","end","getServerSideDateFormat","AEDEvents","addEventSubmit","EventsComponent","events","options","customButtons","prev","text","click","r","getAngularMonthFormat","getAngularDateFormat","from","setMonth","getMonth","nextMonth","firstDay","getFullYear","lastDay","addEvent","eventRevoke","AddExamComponent","ExamsService","examwisesubjects","examId","addExamForm","bindEditExamDetails","getExams","year","getFormat","classWiseSubjectsArray","classObject","object","classid","subjectid","cutoff","AEDExams","getServerSideYearFormat","array","addExamSubmit","getArray","ExamsComponent","multiSelectFilterValue","qualArray","expArray","expeArray","classArray","secArray","classMultiFilterValue","exams","ewscols","item","key","itemValue","obj","comparison","join","totalFilter","multiselectSearch","examRevoke","transform","opacity","animations","AddFeeComponent","FeesComponent","arrayToEmit","subject","examForm","some","emit","index","splice","Integers","examSubmit","_keyPress","FooterComponent","LayoutComponent","MenubarComponent","menuItems","featuresArray","schoolOptions","teacherOptions","studentOptions","additionalOptions","getMenuOptions","category_code","MyProfileComponent","AddNewsComponent","NewsService","newsId","addNewsForm","bindEditNewsDetails","getNews","AEDNews","addNewsSubmit","NewsComponent","news","toggleNews","newsRevoke","AddParentComponent","ParentsService","parentId","addParentForm","inputChar","String","fromCharCode","charCode","test","preventDefault","bindEditParentDetails","getParents","fname","lname","mobile","email","AEDParents","addParentSubmit","ParentsComponent","parents","parentRevoke","AddQualificationComponent","QualificationsService","qualificationId","addQualificationForm","bindEditQualificationDetails","getQualifications","AEDQualifications","addQualificationSubmit","QualificationsComponent","qualifications","qualificationRevoke","RoleAccessComponent","roleaccessService","userid","checked","getUserFeatures","UserFeatures","userFeatures","updateRowGroupMetaData","rowGroupMetadata","rowData","brand","featureTitle","size","previousRowData","previousRowGroup","permissionData","AEDRoleAccess","dropdownChange","AddSectionComponent","SectionsComponent","SettingsComponent","sms","vendor","smsDiv","emailDiv","settingsForm","valueChanges","setValidators","updateValueAndValidity","email1","settingsSubmit","StatisticsComponent","AddStudentComponent","studentsService","countries","states","cities","adm_categories","blood_groups","maxDate","setDate","getDate","studentId","addStudentForm","bindEditStudentDetails","getStudents","ctcstudent_firstname","ctcstudent_middlename","ctcstudent_lastname","ctcparent_id","ctcstudent_dob","ctcstudent_joindate","ctcstudent_email","ctcstudent_class","ctcstudent_section","ctcstudent_dno_c","ctcstudent_street_c","ctcstudent_country_c","ctcstudent_state_c","ctcstudent_village_c","ctcstudent_city_c","ctcstudent_pincode_c","ctcstduent_home_ph_c","ctcstudent_mobile_ph_c","ctcstudent_country_p","ctcstudent_street_p","ctcstudent_state_p","ctcstudent_village_p","ctcstudent_city_p","ctcstudent_pincode_p","ctce1fname","ctce1lname","ctce1email","ctce1mobile","ctce2fname","ctce2lname","ctce2email","ctce2mobile","ctcstudent_status","adm_category","religion","blood_group","languages_known","dateofbirth","joineddate","classs","AEDStudents","AlphaNumericwithcomma","AlphaNumericwithspecialsymbols","addStudentSubmit","keyPressAlphanumericwithspecialchars","StudenteditComponent","StudentlayoutComponent","urlPath","studentID","studentInfoURL","slice","outlets","detail","routing","StudentmarksComponent","disabled","classID","validateForm","jsonData","dropdownfor","radioButtonValue","marksArray","dynamicForm","fields","formObject","classDropDownValue","examDropDownValue","subjectId","SubmitStudentClassWiseExamMarks","GetStudentClassWiseExamMarks","classvalue","examvalue","examid","res","validationsArray","securedMarks","classesdropdownChange","examsdropdownChange","StudentmoreComponent","StudentprofileComponent","selectedIndex","onUploadFinished","uploadFile","files","fileToUpload","formData","FormData","append","StudentProfilePicUpload","UploadProgress","progress","Math","round","loaded","Response","studentProfileOptions","GetStudentProfile","basic","Basic","personal","Personal","address","Address","gaurdian","Gaurdian","GetPanelDetails","tabView","tabs","tabPanel","tabPanels","academic","Academic","GetExamWiseSubjectMarks","tabChange","StudentreportsComponent","studentreportsService","reportsData","StudentsComponent","StudentsService","colors","students","filterSubmit","studentRevoke","AddSubjectsComponent","SubjectsService","addSubjectForm","bindEditSubjectDetails","getSubjects","AEDSubjects","addSubjectSubmit","SubjectsComponent","subjectRevoke","AddTeacherComponent","teachersService","qualification","experience","expertiseIn","associatedClasses","associatedSections","experiences","teacherId","addTeacherForm","bindEditTeacherDetails","getTeachers","teachername","dob","mobilenumber","AEDTeachers","addTeacherSubmit","TeachersComponent","TeachersService","rowDataString","qualMultiFilterValue","expMultiFilterValue","expeMultiFilterValue","secMultiFilterValue","expertise","teachers","teacherRevoke","TilesComponent","MyTilesArray","tiles","tileObject","selectedTileName","AddTimetableComponent","TimetableService","teacherid","timetableId","addTimetableForm","bindEditTimetableDetails","getTimetable","class_id","section_id","subject_id","teacher_id","periodfrom","periodto","AEDTimetable","addTimetableSubmit","TimetableComponent","timetable","timetableRevoke","TopbarComponent","userName","getUsername","logout","getUserId","navigateToUser","AddUserComponent","UsersService","userType","usertypes","addUserForm","usertype1","bindEditUserDetails","getUsers","usertype","patchValue","username","displayname","branchid","userstatus","userpassword","useremail","parentid","AEDUsers","userData","teacher","addUserSubmit","UserTypes","UsersComponent","userRevoke","homeRoutes","children","StudentdetailroutingModule","HomeRoutingModule","forChild","HomeModule","LoginComponent","addLoginForm","submitUserAccessDetails","addLoginSubmit","publicRoutes","TestModule","PublicRoutingModule","PublicModule","Achievements","Events","Branches","Classes","Exams","examswisesubject","examclasswisesubjectmarks","examclasswisesubjects","multiselectObject","News","Paginationutil","Table","multiselectFilter","isReset","first","pageNumber","row","sorts","sortField","sortOrder","columnLevelFilter","filters","finalFilterString","trim","serversidedateformat","serversideyearformat","angulardateformat","filterdateformat","angularmonthformat","Parents","Qualifications","Students","SubjectWiseMarks","Subjects","Teachers","Tiles","color","icon","Timetable","Users","Utility","loginUrl","AdminApp","post","response","AddauditlogService","AuthorizationService","routeUrl","DashboardService","reqObj","DropdownService","requestData","Url","InputPatternService","which","keyCode","inp","LoginService","sessionTimeOutService","loginUserData","Password","password","security","Token","userInformationString","startTimer","RoleAccessService","ID","listData","StudentreportsService","studentreportsJsonData","studentreportsJson","stduentid","reportProgress","observe","routes","SharedroutingRoutingModule","SharedroutingComponent","useClass","PagenotfoundComponent","SpinnerComponent","loadingHttpInterceptor","debounceDelay","subsription","handleDebounce","bind","anyRequestLoading","visible","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\r\n\r\n\r\nconst appRoutes:Routes=[\r\n{\r\n  path:'home',redirectTo:'',pathMatch:'full'\r\n},\r\n{ \r\n  path: 'sharedrouting', loadChildren: () => import('./cts/shared/sharedrouting/sharedrouting.module').then(m => m.SharedroutingModule) \r\n},\r\n{\r\n  path:'**', component:PagenotfoundComponent\r\n}\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { SessionTimeoutService } from './core/security/session-timeout.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'CTCAPP';\r\n  display:boolean = true;\r\n  constructor(private sessionTimeoutService:SessionTimeoutService){\r\n\r\n  }\r\n\r\n  get countdownTimerText():string{\r\n    if(!this.sessionTimeoutService.timeLeft || !this.timeoutWarningVisible) return \"\";\r\n\r\n    var date= new Date(null);\r\n    date.setSeconds(this.sessionTimeoutService.timeLeft); //specify value for seconds here\r\n    return date.toISOString().substr(14,5);\r\n  }\r\n\r\n  get timeoutWarningVisible(): boolean{\r\n    var result =  this.sessionTimeoutService.showWarning;\r\n    \r\n    return result;\r\n\r\n  }\r\n\r\n  KeepAlive(){\r\n    if(!this.sessionTimeoutService.showWarning) return;\r\n    this.sessionTimeoutService.resetTimer();\r\n    // this.sessionTimeoutService.KeepAlive().subscribe(r=>{});\r\n  }\r\n}\r\n","<p-dialog header=\"Timeout Warning\"  [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\"\r\n    [visible]=\"timeoutWarningVisible\" [style]=\"{width: '50vw'}\" [responsive]=\"true\" [draggable]=\"true\"\r\n    (onHide)=\"KeepAlive()\">\r\n    <div class=\"time-out-popup\">\r\n        <p>Your session will expire in {{countdownTimerText}} due to inactivity.</p>\r\n        <p>Please click the button below if you are still using the application.</p>\r\n        <div class=\"text-right pdt-10\">\r\n            <button pButton type=\"button\" (click)=\"KeepAlive()\" label=\"Continue Session\" class=\"ui-button-rounded ui-button-secondary\"></button>\r\n        </div>\r\n    </div>\r\n</p-dialog>\r\n\r\n<spinner></spinner>\r\n<router-outlet></router-outlet>\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PublicModule } from './cts/public/publicrouting/public.module';\r\nimport { HomeModule } from './cts/home/homerouting/home.module';\r\n\r\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\r\nimport { SharedroutingModule } from './cts/shared/sharedrouting/sharedrouting.module';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { LoadingHttpInterceptor, LoadingHttpInterceptorFactoryProvider } from './core/loading-http-interceptor/loading-http-interceptor.component';\r\n\r\n\r\nimport { BranchesComponent } from './cts/home/components/branches/branches.component';\r\nimport { AddBranchComponent } from './cts/home/components/branches/add-branch/add-branch.component';\r\nimport { AuditlogsComponent } from './cts/home/components/auditlogs/auditlogs.component';\r\nimport { AddAuditlogComponent } from './cts/home/components/auditlogs/add-auditlog/add-auditlog.component';\r\nimport { AuthenticatedHttpInterceptorService } from './core/security/authenticated-http-interceptor.service';\r\nimport { LocalstoragetokenService } from './core/security/localstoragetoken.service';\r\nimport { SessionTimeoutService } from './core/security/session-timeout.service';\r\nimport { Router } from '@angular/router';\r\nimport { TimetableComponent } from './cts/home/components/timetable/timetable.component';\r\nimport { AddTimetableComponent } from './cts/home/components/timetable/add-timetable/add-timetable.component';\r\nimport { SubjectsComponent } from './cts/home/components/subjects/subjects.component';\r\nimport { AddSubjectsComponent } from './cts/home/components/subjects/add-subjects/add-subjects.component';\r\nimport { QualificationsComponent } from './cts/home/components/qualifications/qualifications.component';\r\nimport { AddQualificationComponent } from './cts/home/components/qualifications/addqualifications/addqualifications.component';\r\nimport { ParentsComponent } from './cts/home/components/parents/parents.component';\r\nimport { AddParentComponent } from './cts/home/components/parents/add-parent/add-parent.component';\r\nimport { AuthorizationGuard } from './core/security/authorization-guard';\r\nimport { AccessDeniedComponent } from './cts/home/components/access-denied/access-denied.component';\r\n\r\nconst SessionTimeoutServiceProvider={\r\n  provide:SessionTimeoutService,\r\n  useFactory:getSessionTimeoutService,\r\n  multi:false,\r\n  deps:[Router]\r\n}\r\n\r\nconst LocalstoragetokenServiceProvider={\r\n  provide:HTTP_INTERCEPTORS,\r\n  useExisting:LocalstoragetokenService,\r\n  multi:true\r\n}\r\n\r\nconst LoadingHttpInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useExisting: LoadingHttpInterceptor,\r\n  multi: true\r\n}\r\nconst AuthenticatedHttpInterceptorServiceProvider={\r\n  provide:HTTP_INTERCEPTORS,\r\n  useFactory:getAuthenticatedHttpInterceptor,\r\n  deps:[Router,LocalstoragetokenService,SessionTimeoutService],\r\n  multi:true\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PagenotfoundComponent,\r\n    SpinnerComponent,\r\n    BranchesComponent,\r\n    AddBranchComponent,\r\n    AuditlogsComponent,\r\n    AddAuditlogComponent,\r\n    TimetableComponent,\r\n    AddTimetableComponent,\r\n    SubjectsComponent,\r\n    AddSubjectsComponent,\r\n    QualificationsComponent,\r\n    AddQualificationComponent,\r\n    ParentsComponent,\r\n    AddParentComponent,\r\n    AccessDeniedComponent\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    PublicModule,\r\n    HomeModule,\r\n    SharedroutingModule,\r\n    AppRoutingModule\r\n\r\n  ],\r\n  providers: [\r\n    SessionTimeoutServiceProvider,\r\n    AuthenticatedHttpInterceptorServiceProvider,\r\n    LoadingHttpInterceptorProvider,\r\n    LoadingHttpInterceptorFactoryProvider,\r\n    AuthorizationGuard\r\n    // LocalstoragetokenServiceProvider\r\n    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { \r\n  constructor(router:Router){\r\n  }\r\n}\r\n\r\nexport function getSessionTimeoutService(router:Router){\r\n  return new SessionTimeoutService(router)\r\n}\r\n\r\nexport function getAuthenticatedHttpInterceptor(router:Router,tokenProvider:LocalstoragetokenService,sessionTimeoutService:SessionTimeoutService){\r\n  return new AuthenticatedHttpInterceptorService(router,tokenProvider,sessionTimeoutService)\r\n}\r\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, observable, throwError as observableThrowError } from 'rxjs';\r\nimport { catchError, finalize, map } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class LoadingHttpInterceptor implements HttpInterceptor {\r\n  private requests = 0;\r\n  public anyRequestsLoading: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\r\n  constructor() { }\r\n  get LoadingRequestsStatus(): Observable<boolean> {\r\n    return this.anyRequestsLoading.asObservable();\r\n  }\r\n  get loadingRequests(): number {\r\n    return this.requests;\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (req.url.indexOf('background=true') > 0 || (req.urlWithParams && req.urlWithParams.indexOf('background=true') > 0)) {\r\n      return next.handle(req);\r\n    }\r\n    this.requests++;\r\n    if (this.requests == 1) {\r\n      this.anyRequestsLoading.next(true);\r\n    }\r\n\r\n    return next.handle(req).pipe(\r\n      map(event => {\r\n        return event;\r\n      }),\r\n      catchError(error => {\r\n        return observableThrowError(error);\r\n      }),\r\n      finalize(() => {\r\n        this.requests--;\r\n        if (this.requests == 0) {\r\n          this.anyRequestsLoading.next(false);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function LoadingHttpInterceptorFactory() {\r\n  return new LoadingHttpInterceptor();\r\n}\r\n\r\nexport let LoadingHttpInterceptorFactoryProvider = {\r\n  provide: LoadingHttpInterceptor,\r\n  useFactory: LoadingHttpInterceptorFactory\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpEvent, HttpHandler, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { LocalstoragetokenService } from './localstoragetoken.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { SessionTimeoutService } from './session-timeout.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticatedHttpInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, public TokenProvider: LocalstoragetokenService,public sessionTimeoutService:SessionTimeoutService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n \r\n    if(req.url.endsWith('AccessToken/') || req.url.endsWith('AccessToken/ValidateUser')){\r\n      let headers = req.headers.set('Content-Type','application/json');\r\n      const clone = req.clone({headers:headers})\r\n      return next.handle(req);\r\n    }\r\n\r\n\r\n    let token = this.TokenProvider.getToken();\r\n\r\n    if (token == \"\" || token== null) {\r\n      var currentUser = JSON.parse(this.TokenProvider.getToken());\r\n      token = currentUser && currentUser.token;\r\n    }\r\n\r\n    let errorRedirectPage = \"/admin/app-error\";\r\n\r\n    let headers = null;\r\n    if(req.headers.has('Content-Type') == false && req.headers.has('No-Content-Type') == false\r\n    && req.url.indexOf('Upload/UploadStudentProfilePic') < 0){\r\n      headers = req.headers.set('Authorization',`Bearer ${token}`).set('Content-Type','application/json');\r\n    }else{\r\n      headers = req.headers.set('Authorization',`Bearer ${token}`);\r\n    }\r\n\r\n    const clone = req.clone({headers : headers});\r\n\r\n    return next.handle(clone).pipe(tap((event : HttpEvent<any>)=>{\r\n\r\n      if(event instanceof HttpResponse){\r\n        let isLogout = req.url.indexOf('logout') >= 0;\r\n        if(event.status == 200 && isLogout == false){\r\n          this.sessionTimeoutService.resetTimer();          \r\n        }\r\n        else if(event.status != 204){\r\n          if(req.headers.has('Redirect-On-Request-Failure')){\r\n            this.router.navigate([errorRedirectPage],{\r\n              queryParams:{\r\n                message:event.body ? event.body.message : \"\"\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n      \r\n    },(err:any) => {\r\n      if(err instanceof HttpErrorResponse){\r\n        if(err.status === 401){\r\n          this.sessionTimeoutService.cancelTimer();\r\n          this.router.navigateByUrl('/login');          \r\n        }else{\r\n          if(req.headers.has('Redirect-On-Request-Failure')){\r\n            this.router.navigate([errorRedirectPage],{\r\n              queryParams:{\r\n                message:err.error.message\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }else if(req.headers.has('Redirect-On-Request-Failure')){\r\n        this.router.navigate([errorRedirectPage],{\r\n          queryParams:{\r\n            message:\"\"\r\n          }\r\n        });\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanActivateChild, CanLoad, Router, ActivatedRouteSnapshot, RouterStateSnapshot, Route } from '@angular/router';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { LoginService } from 'src/app/cts/shared/services/login.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationGuardService implements CanActivate,CanActivateChild,CanLoad {\r\n  private ngUnsubscribe = new Subject();\r\n  constructor(private router:Router,private loginService:LoginService) { }\r\n\r\n  canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot):boolean{\r\n    let url:string = state.url\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route:ActivatedRouteSnapshot,state:RouterStateSnapshot):boolean{\r\n    return this.canActivate(route,state);\r\n  }\r\n\r\n  canLoad(route:Route):boolean{\r\n    let url=`/${route.path}`;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  checkLogin(url:string):boolean{\r\n    var currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n\r\n    if(token != null && token != \"\"){\r\n      //  let decoded = JwtHelper.decodeToken(token);\r\n      //  let userProfile = JSON.parse(decoded.UserProfile)\r\n      //  let loginUserData={\r\n      //   userName:userProfile.UserName,\r\n      //   password:userProfile.Password \r\n      // };\r\n      // this.loginService.submitUserAccessDetails(loginUserData)\r\n      // .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      //   if(result.status){\r\n      //     return true;\r\n      //   }else{\r\n      //     //not logged in so redirect to login page\r\n      // this.router.navigate(['/login']);      \r\n      // return false\r\n      //   }\r\n      // })\r\n      //logged in so return true\r\n      return true\r\n    }else{\r\n      //not logged in so redirect to login page\r\n      this.router.navigate(['/login']);      \r\n      return false\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass JwtHelper{\r\n  private static urlBase64Decode(str: string){\r\n    var output = str.replace(/-/g,'+').replace(/_/g,'/');\r\n    switch(output.length % 4){\r\n      case 0:{break;}\r\n      case 2:{output += '=='; break;}\r\n      case 3:{output += '='; break;}\r\n      default:{\r\n        throw 'Illegal base64url string!'\r\n      }\r\n    }\r\n    return decodeURIComponent(encodeURI(window.atob(output)));\r\n  }\r\n\r\n  public static decodeToken(token: string){\r\n    var parts=token.split('.');\r\n    if(parts.length !== 3){\r\n      throw new Error('Jwt must have 3 parts');\r\n    }\r\n    var decoded = this.urlBase64Decode(parts[1]);\r\n    if(!decoded){\r\n      throw new Error('cannot decode the token');\r\n    }\r\n    return JSON.parse(decoded);\r\n  }\r\n}\r\n","import { CanActivate, CanActivateChild, CanLoad, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AUTHZ_SERVICE, AuthorizationServiceBase } from './authorization.service';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { LoginService } from 'src/app/cts/shared/services/login.service';\r\nimport { forEach } from 'angular';\r\n@Injectable()\r\nexport class AuthorizationGuard  implements CanActivate, CanActivateChild,CanLoad {\r\n   \r\n     permissions: any[] = [];\r\n     static permissionsOnComponent :any[]=[];\r\n    \r\n    constructor(private loginService:LoginService,private router:Router,private httpClient:HttpClient,@Inject(AUTHZ_SERVICE) private authorizationService:AuthorizationServiceBase){}\r\n\r\n    canActivate(route:ActivatedRouteSnapshot,state:RouterStateSnapshot): Observable<boolean> | boolean{\r\n        \r\n        return this.authorizationService.authorizeRouteAccess(state.url).pipe(\r\n            map(result =>{ \r\n                if(result.status == 'true'){\r\n                    this.permissions = result.featureOptions;\r\n                    AuthorizationGuard.permissionsOnComponent=[];\r\n                    for(let permission of this.permissions){\r\n                        AuthorizationGuard.permissionsOnComponent.push(permission)\r\n                    }\r\n                    return true;\r\n                }else{\r\n                    if(state.url != '/admin/dashboard')\r\n                    // this.loginService.logout();\r\n                    this.router.navigate(['/admin/access-denied']);     \r\n\r\n                    else\r\n                    this.permissions = result.featureOptions;\r\n                    AuthorizationGuard.permissionsOnComponent=[];\r\n                    for(let permission of this.permissions){\r\n                        AuthorizationGuard.permissionsOnComponent.push(permission)\r\n                    }\r\n                    return true;\r\n                }  \r\n            })\r\n        )\r\n    }\r\n\r\n    canActivateChild(route:ActivatedRouteSnapshot,state:RouterStateSnapshot):Observable<boolean> | boolean{\r\n        return this.canActivate(route,state);\r\n    }\r\n    canLoad(route:Route):boolean{\r\n        return false;\r\n    }\r\n\r\n    static checkPermission(permissionValue){\r\n        var data = AuthorizationGuard.permissionsOnComponent.filter((x) => x.title.includes(permissionValue))\r\n        if(data.length > 0)\r\n        return true\r\n        else\r\n        return false\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\nexport const AUTHZ_SERVICE = new InjectionToken<AuthorizationServiceBase>('authorization.service');\r\n\r\nexport abstract class AuthorizationServiceBase {\r\nabstract authorizeRouteAccess(route:string):Observable<AuthorizationResult>;\r\n}\r\n\r\nexport class AuthorizationResult{\r\n  status:string;\r\n  featureOptions:any[];\r\n}\r\n\r\nexport enum DenialReason{\r\n  SessionExpired = 0,\r\n  TwoFactorAuthenticationNotCompleted,\r\n  PasswordUpdateRequired,\r\n  NotMatchingComponentForUrl,\r\n  UserDeniedAccessToUrl\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenProvider } from './token-provider';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalstoragetokenService implements TokenProvider {\r\n  getToken(): string {\r\n    return JSON.parse(sessionStorage.getItem('currentUser')) != null ? JSON.parse(sessionStorage.getItem('currentUser')).token : null;\r\n  }\r\n  getUsername(): string {\r\n    return JSON.parse(sessionStorage.getItem('currentUser')).UserName\r\n  }\r\n  getUserId(): string {\r\n    return JSON.parse(sessionStorage.getItem('currentUser')).userId\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { inflateSync } from 'zlib';\r\nimport { timer } from 'rxjs/internal/observable/timer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionTimeoutService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  static countdown;\r\n  static timerSubscription;\r\n\r\n  private started: boolean = false;\r\n  private sessionTime: number;\r\n  private sessionWarning: number;\r\n\r\n  timeLeft: number;\r\n\r\n  get showWarning(): boolean {\r\n    return this.started && this.timeLeft < this.sessionWarning;\r\n  }\r\n\r\n  get expired(): boolean {\r\n    return this.started && this.timeLeft <= 0;\r\n  }\r\n\r\n  public startTimer(timeoutMinutes: number, warningMinutes: number) {\r\n    if (this.started) return;\r\n\r\n    this.started = true;\r\n\r\n    this.sessionTime = timeoutMinutes * 60;\r\n    this.sessionWarning = warningMinutes * 60;\r\n\r\n    sessionStorage.setItem('sessionTime', this.sessionTime.toString());\r\n    sessionStorage.setItem('sessionWarning', this.sessionWarning.toString());\r\n\r\n    this.resetTimer();\r\n  }\r\n\r\n  private resetting: boolean = false;\r\n  public checkForSessionValues() {\r\n    if (isNaN(this.sessionTime)) {\r\n      this.sessionTime = Number(sessionStorage.getItem('sessionTime'));\r\n      this.sessionWarning = Number(sessionStorage.getItem('sessionWarning'));\r\n    }\r\n  }\r\n  private lastTimeTick: Date;\r\n  public resetTimer() {\r\n    this.checkForSessionValues();\r\n\r\n    if (this.resetting) return;\r\n\r\n    this.resetting = true;\r\n    this.started = true;\r\n\r\n    if (SessionTimeoutService.countdown) {\r\n      SessionTimeoutService.timerSubscription.unsubscribe();\r\n    }\r\n\r\n    SessionTimeoutService.countdown = timer(0, 1000);\r\n\r\n    SessionTimeoutService.timerSubscription = SessionTimeoutService.countdown.subscribe(val => {\r\n      this.timeLeft = this.sessionTime - val;\r\n\r\n      if (this.lastTimeTick) {\r\n        var now = new Date();\r\n        var seconds = (now.getTime() - this.lastTimeTick.getTime()) / 1000;\r\n\r\n        if (seconds > 2) {\r\n          this.timeLeft = this.timeLeft - seconds;\r\n        }\r\n        this.lastTimeTick = now;\r\n      }\r\n\r\n      if (this.timeLeft <= 0) {\r\n        this.cancelTimer();\r\n      }\r\n    });\r\n\r\n    this.resetting = false;\r\n\r\n  }\r\n\r\n  public cancelTimer() {\r\n    this.lastTimeTick = null;\r\n    this.started = false;\r\n    if (SessionTimeoutService.countdown) {\r\n      SessionTimeoutService.timerSubscription.unsubscribe();\r\n      SessionTimeoutService.countdown = null;\r\n    }\r\n\r\n    sessionStorage.removeItem('sessionTime');\r\n    sessionStorage.removeItem('sessionWarning');\r\n    sessionStorage.removeItem('currentUser');\r\n    this.router.navigate(['/login']);      \r\n  }\r\n\r\n}\r\n","function loadJson(filePath){\r\n    const json = loadTextFileAjaxSync(filePath,\"application/json\");\r\n    return JSON.parse(json);\r\n}\r\n\r\nfunction loadTextFileAjaxSync(filePath,mimeType){\r\n    const xmlhttp =new XMLHttpRequest();\r\n    xmlhttp.open(\"GET\",filePath,false);\r\n    if(mimeType != null){\r\n        if(xmlhttp.overrideMimeType){\r\n            xmlhttp.overrideMimeType(mimeType)\r\n        }\r\n    }\r\n    xmlhttp.send();\r\n    if(xmlhttp.status == 200){\r\n        return xmlhttp.responseText;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport class AppConstants {\r\n    public static readonly Api =loadJson(\"/assets/config.json\").api;\r\n    public static readonly DateTimeFormat = loadJson(\"/assets/config.json\").datetimeformat;\r\n    public static readonly Messages = loadJson(\"/assets/config.json\").messages;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.scss']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>about-us works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-access-denied',\r\n  templateUrl: './access-denied.component.html',\r\n  styleUrls: ['./access-denied.component.scss']\r\n})\r\nexport class AccessDeniedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div  class=\"col-md-12 text-center search-box\">\r\n        <img class=\"img-fluid\" src=\"./assets/images/accessdenied.png\">\r\n    </div>    \r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Achievements } from 'src/app/cts/shared/models/achievements';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AchievementsService } from 'src/app/cts/shared/services/achievements.service';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'app-achievements',\r\n  templateUrl: './achievements.component.html',\r\n  styleUrls: ['./achievements.component.scss']\r\n})\r\nexport class AchievementsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Achievements[];\r\n  achievements: Achievements[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  errorMessage:string=\"\";\r\n  successMessage:string=\"\";\r\n  display:boolean=false;\r\n  position: string;\r\n  users: any[]=[];\r\n  status: SelectItem[] = [];\r\n  branches:any[]=[];\r\n//to create Teacher From \r\nfiltersForm: FormGroup;\r\ntoBeDeletedId:any;\r\n\r\n //pagination and api integration starts from here\r\n numberOfPages:number =10;\r\n totalcount:number=0;\r\n noOfItems=10;\r\n advancedFilterValue:string =\"\";\r\n currentPage:number = 1;\r\n pageCount:number;\r\n\r\n @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private dropdownService: DropdownService,private AchievementsService: AchievementsService, private router: Router,private route:ActivatedRoute,private fb: FormBuilder) {\r\n    this.achievements = [];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"users\",\"branches\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n          this.branches = result.data.branches;\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {    \r\n    this.cols = [\r\n      { field: 'title', header: 'Title' },\r\n      { field: 'date', header: 'Date' },\r\n      { field: 'branchtitle', header: 'Branch' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n     //to create form with validations\r\n     this.createFilterForm(); \r\n  }\r\n\r\n  \r\n\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n  \r\n//Api Integration Starts from here\r\nonPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  this.AchievementsService.getAchievements(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.achievements= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.achievements != null && this.achievements != undefined){\r\n      this.achievements = this.achievements.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n   //Crud events\r\n   addNew($event: any) {\r\n    let id=\"0\";\r\n    this.router.navigate(['add-achivement'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n  }\r\n  editAchievement(id):void{\r\n    this.router.navigate(['add-achivement'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n  }\r\n  viewAchievement(id):void{\r\n    this.router.navigate(['add-achivement'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n  }\r\n  deleteAchievement(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  achievementRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Achievements();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.AchievementsService.AEDAchievements(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {      \r\n        this.DataTable.reset(); \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n//Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n   createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'ttitle': new FormControl(''),\r\n      'tdate': new FormControl(''),\r\n      'tusertype': new FormControl(''),\r\n      'tstatus': new FormControl(''),\r\n      'tbranch': new FormControl('')\r\n    });\r\n  }\r\n\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n   }\r\n   getFilterFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Achievements</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Achievement\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n    <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n        <div class=\"row search-box search-box-padding\">\r\n            <div class=\"col-md-3\">\r\n                <span>Title</span><br>\r\n                <input id=\"title\"  #tl class=\"w-100\" type=\"text\" formControlName=\"ttitle\"\r\n                (keydown)=\"$event.key === 'Enter' ? dt.filter(tl.value,'title',''): ''\" placeholder=\"Title\" size=\"30\" pInputText>\r\n                \r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Date</span><br>\r\n                <p-calendar #td placeholder=\"Select Date\" formControlName=\"tdate\"\r\n                (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Branch</span><br>\r\n                <p-dropdown #bn [options]=\"branches\" class=\"w-100\" formControlName=\"tbranch\" placeholder=\"Select Branch\" \r\n                (onChange)=\"dt.filter(bn.value,'branch','')\"\r\n                    ></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>User</span><br>\r\n                <p-dropdown #us [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n                (onChange)=\"dt.filter(us.value,'userid','')\"\r\n                    ></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <span>Status</span><br>\r\n              <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n              (onChange)=\"dt.filter(st.value,'status','')\"\r\n                  ></p-dropdown>\r\n          </div>\r\n            <div class=\"col-md-3\"></div>\r\n            <div class=\"col-md-6 text-right search-buttons\">\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"achievements\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n        [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\" >\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewAchievement(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate' && col.field != 'date'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewAchievement(rowData.id)\">{{rowData[col.field]}}</a>\r\n                             </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field == 'date'\">\r\n                            <a class=\"bold\" (click)=\"viewAchievement(rowData.id)\">{{getFormat(rowData.date)}}</a>\r\n                        </div>\r\n                    </td>\r\n                    <td >\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" (click)=\"editAchievement(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\" (click)=\"deleteAchievement(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\" \r\n    [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n            <p>Are you sure you want to delete Achievement?</p>\r\n            <p-footer class=\"btm-buttons\">\r\n                <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"achievementRevoke()\" ></button>\r\n                <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n            </p-footer>\r\n        </p-dialog>  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { AchievementsService } from 'src/app/cts/shared/services/achievements.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { Achievements } from 'src/app/cts/shared/models/achievements';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-achievement',\r\n  templateUrl: './add-achievement.component.html',\r\n  styleUrls: ['./add-achievement.component.scss']\r\n})\r\nexport class AddAchievementComponent implements OnInit {\r\n  achievementId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addAchievementForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  branches:any;\r\n  status:any;\r\n  querytype:number;\r\n\r\n\r\n  constructor(private dropdownService: DropdownService,private AchievementsService: AchievementsService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n      //Get Dropdowns API call\r\n      var dropdowns = [\"branches\"];\r\n      this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n         this.branches = result.data.branches;     \r\n        }\r\n      });  \r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n   }\r\n\r\n  ngOnInit(): void {// On page load\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.achievementId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Achievement\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Achievement\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addAchievementForm = this.fb.group({\r\n      'title': new FormControl('', { validators: [Validators.required, Validators.pattern('^([A-Za-z0-9 _\\'-])*$')] }),\r\n      'date': new FormControl('', { validators: [Validators.required] }),\r\n      'branchid':new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender); \r\n    this.bindEditAchievementDetails();\r\n  }\r\n  bindEditAchievementDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.achievementId.toString();\r\n    //Get Branches API call\r\n    this.AchievementsService.getAchievements(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addAchievementForm.setValue({\r\n            'title': this.editData.title,\r\n            'date': new Date(this.editData.date),\r\n            'branchid': this.editData.branch,\r\n            'status':this.editData.status\r\n\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Achievement\";\r\n  }\r\n\r\n  addAchievementSubmit(): void {   \r\n    \r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addAchievementForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Achievements();\r\n      customObj = this.addAchievementForm.value;\r\n      customObj.id = this.achievementId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.AchievementsService.AEDAchievements(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addAchievementForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Achievement title already exists with this date and branch\";\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addAchievementForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.Alphabet(event);\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n <div class=\"col-md-12 component-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <span class=\"table-header-items\">{{pageTitle}}</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n    <div class=\"col-md-12\">\r\n        <i class=\"fa fa-exclamation-circle\"></i>\r\n        <b>{{errorMessage}}</b>\r\n    </div>\r\n</div>\r\n<div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n    <div class=\"col-md-12\">\r\n        <i class=\"fa fa-check\"></i>\r\n        <b>{{successMessage}}</b>\r\n    </div>\r\n</div>\r\n\r\n<form [formGroup]=\"addAchievementForm\" class=\"col-md-12\" (ngSubmit)=\"addAchievementSubmit()\">\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addAchievementForm.valid && formSubmitAttempt)\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-triangle\"></i>\r\n            <b>Please correct the following error(s):</b>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3 error-div\" *ngIf=\"((!addAchievementForm.controls['title'].valid && addAchievementForm.controls['title'].touched)|| \r\n                                (!addAchievementForm.controls['title'].valid && addAchievementForm.controls['title'].untouched && \r\n                                formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addAchievementForm.controls['title'].errors?.required)\">Enter \"Title\"</span>\r\n                            <span *ngIf=\"(!addAchievementForm.controls['title'].errors?.required && \r\n                                addAchievementForm.controls['title'].errors?.pattern)\">Enter\r\n                                Valid \"Title\"</span>\r\n                        </div>\r\n                        <div class=\"col-md-3 error-div\"\r\n                            *ngIf=\"((!addAchievementForm.controls['date'].valid && addAchievementForm.controls['date'].touched)|| \r\n                                (!addAchievementForm.controls['date'].valid && addAchievementForm.controls['date'].untouched && formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addAchievementForm.controls['date'].errors?.required)\">Enter \"Date\"</span>\r\n                        </div>\r\n                        <div class=\"col-md-3 error-div\"\r\n                            *ngIf=\"((!addAchievementForm.controls['branchid'].valid && addAchievementForm.controls['branchid'].touched)|| \r\n                                (!addAchievementForm.controls['branchid'].valid && addAchievementForm.controls['branchid'].untouched && formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addAchievementForm.controls['branchid'].errors?.required)\">Enter \"Branch Id\"</span>\r\n                        </div>\r\n                        <div class=\"col-md-3 error-div\"\r\n                        *ngIf=\"((!addAchievementForm.controls['status'].valid && addAchievementForm.controls['status'].touched)|| \r\n                            (!addAchievementForm.controls['status'].valid && addAchievementForm.controls['status'].untouched && formSubmitAttempt))\">\r\n                        <i class=\"fa fa-circle\"></i>\r\n                        <span *ngIf=\"(addAchievementForm.controls['status'].errors?.required)\">Enter \"Status\"</span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row search-box search-box-padding form-block\">\r\n        <div class=\"col-md-4\">\r\n            <span>\r\n                Title\r\n            </span><br>\r\n            <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n            (keypress)=\"keyPressAlphabet($event)\" formControlName=\"title\" type=\"text\" placeholder=\"Title\" size=\"30\" pInputText [ngClass]=\"{'error':((!addAchievementForm.controls['title'].valid && addAchievementForm.controls['title'].touched) || \r\n                    (!addAchievementForm.controls['title'].valid && addAchievementForm.controls['title'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <span>Date Of Achievement</span><br>\r\n            <p-calendar placeholder=\"Select Date\" [disabled]=\"isDisabled\" formControlName=\"date\"\r\n                [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                [ngClass]=\"{'error':((!addAchievementForm.controls['date'].valid && addAchievementForm.controls['date'].touched) || (!addAchievementForm.controls['date'].valid && addAchievementForm.controls['date'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </p-calendar>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <span>Branch Id</span><br>\r\n                    <p-dropdown [options]=\"branches\" filter=\"true\" formControlName=\"branchid\"\r\n                    placeholder=\"Select BranchId\" class=\"required\" [disabled]=\"isDisabled\"\r\n                    [ngClass]=\"{'error':((!addAchievementForm.controls['branchid'].valid && addAchievementForm.controls['branchid'].touched) || (!addAchievementForm.controls['branchid'].valid && addAchievementForm.controls['branchid'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <span>Status</span><br>\r\n            <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                placeholder=\"Select Status\" [ngClass]=\"{'error':((!addAchievementForm.controls['status'].valid &&\r\n                addAchievementForm.controls['status'].touched) || \r\n            (!addAchievementForm.controls['status'].valid && addAchievementForm.controls['status'].untouched && formSubmitAttempt)),\r\n            'required':(isRequired == true )}\">\r\n            </p-dropdown>\r\n        </div>\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4\"></div>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"col-md-4  required-block\">\r\n            <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                <span class=\"requirednote\">Required</span>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-md-8 text-right\">\r\n            <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\" (click)=\"editControls()\"\r\n                class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n            <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n            <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\" (click)=\"resetForm()\"\r\n                class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n            <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                class=\"ui-button-secondary table-header-items\"></button>\r\n        </div>\r\n    </div>\r\n</form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Addauditlog } from 'src/app/cts/shared/models/addauditlog';\r\nimport { AddauditlogService } from 'src/app/cts/shared/services/addauditlog.service';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { AuditlogsService } from 'src/app/cts/shared/services/auditlogs.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n@Component({\r\n  selector: 'app-add-auditlog',\r\n  templateUrl: './add-auditlog.component.html',\r\n  styleUrls: ['./add-auditlog.component.scss']\r\n})\r\nexport class AddAuditlogComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  auditLogs: Addauditlog[];\r\n  datasource: Addauditlog[];\r\n  totalRecords: number;\r\n  filtersForm: FormGroup;\r\n  actions: any[];\r\n  users: any[];\r\n  cols: any[];\r\n  loading: boolean;\r\n  tablecode:any;\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n\r\n    //pagination and api integration starts from here\r\n    numberOfPages:number =10;\r\n    totalcount:number=0;\r\n    noOfItems=10;\r\n    advancedFilterValue:string =\"\";\r\n    currentPage:number = 1;\r\n    pageCount:number;\r\n    moment: any = moment;\r\n    AppConstants:any;\r\n\r\n    @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n\r\n  constructor(private dropdownService: DropdownService,private auditLogService:AuditlogsService,private route: ActivatedRoute,private fb: FormBuilder,private addauditlogService: AddauditlogService) {\r\n    this.actions = [\r\n      { label: 'Insert', value: 'Insert' },\r\n      { label: 'Delete', value: 'Delete' },\r\n      { label: 'Update', value: 'Update' }\r\n    ];\r\n   \r\n    var dropdowns = [\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n        }\r\n      });\r\n   }\r\n   toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n    this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n  else\r\n    this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n  ngOnInit(): void {\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {     \r\n      this.tablecode = window.atob(params['code']);      \r\n    });\r\n   \r\n    this.cols = [\r\n      // { field: 'id', header: 'Id' },\r\n      { field: 'date', header: 'Date' },\r\n      { field: 'fieldname', header: 'Fieldname' },\r\n      { field: 'action', header: 'Action' },\r\n      { field: 'oldvalue', header: 'Oldvalue ' },\r\n      { field: 'newvalue', header: 'Newvalue' },\r\n      { field: 'user', header: 'User' }\r\n    ];\r\n    this.loading = true;\r\n\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  }\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'fieldname': new FormControl(''),\r\n      'oldvalue': new FormControl(''),\r\n      'newvalue': new FormControl(''),\r\n      'processeduser': new FormControl(''),\r\n      'fromdate': new FormControl(''),\r\n      'todate': new FormControl(''),\r\n      'action': new FormControl(''),\r\n    });\r\n  }\r\n  resetForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n //Api Integration Starts from here\r\n onPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n  pageObject.tablecode=this.tablecode;\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  \r\n  this.auditLogService.AuditlogTableDetails(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.auditLogs= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.auditLogs != null && this.auditLogs != undefined){\r\n      this.auditLogs = this.auditLogs.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-10\">\r\n            </div>\r\n            <div class=\"col-md-2 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Field Name</span><br>\r\n                    <input id=\"name\" #fn class=\"w-100\" type=\"text\" formControlName=\"fieldname\" placeholder=\"Field Name\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(fn.value,'fieldname',''): ''\"\r\n                        size=\"30\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Old Value</span><br>\r\n                    <input id=\"name\" #ov class=\"w-100\" type=\"text\" formControlName=\"oldvalue\" placeholder=\"Old Value\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(ov.value,'oldvalue',''): ''\"\r\n                        size=\"30\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>New Value</span><br>\r\n                    <input id=\"name\" #nv class=\"w-100\" type=\"text\" formControlName=\"newvalue\" placeholder=\"New Value\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(nv.value,'newvalue',''): ''\"\r\n                        size=\"30\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Processed User</span><br>\r\n                    <p-dropdown #pu [options]=\"users\" formControlName=\"processeduser\" class=\"w-100\"\r\n                    (onChange)=\"dt.filter(pu.value,'userid','')\"\r\n                        placeholder=\"Select User\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>From Date</span><br>\r\n                    <p-calendar placeholder=\"From Date\" formControlName=\"fromdate\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>To Date</span><br>\r\n                    <p-calendar placeholder=\"New Date\" formControlName=\"todate\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Action</span><br>\r\n                    <p-dropdown #an [options]=\"actions\" formControlName=\"action\" class=\"w-100\"\r\n                    (onChange)=\"dt.filter(an.value,'action','')\" placeholder=\"Select Action\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form> \r\n    <div class=\"row search-box\">\r\n    <div class=\"col-md-12 \">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"auditLogs\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\">\r\n                            <a class=\"bold\" href=\"#\">{{rowData[col.field]}}</a>\r\n                        </div>    \r\n                    </td>                  \r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Auditlogs } from 'src/app/cts/shared/models/auditlogs';\r\nimport { AuditlogsService } from 'src/app/cts/shared/services/auditlogs.service';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\n\r\n@Component({\r\n  selector: 'app-auditlogs',\r\n  templateUrl: './auditlogs.component.html',\r\n  styleUrls: ['./auditlogs.component.scss']\r\n})\r\nexport class AuditlogsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Auditlogs[];\r\n  auditlogs: Auditlogs[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  loading: boolean;\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n\r\n  constructor(private AuditlogsService: AuditlogsService,private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      // { field: 'id', header: 'S.no' },\r\n      { field: 'code', header: 'Code' },\r\n      { field: 'tablename', header: 'Audit Log Table' },\r\n    ];\r\n    this.loading = true;\r\n  }\r\n\r\n  //Api Integration Starts from here\r\n  onPageChange(event:LazyLoadEvent){\r\n    let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if(this.totalcount != 0){\r\n      this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }\r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n\r\n  }\r\n\r\n  loadGrids(pagingData){\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.AuditlogsService.getAuditlogs(pagingData)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n      this.auditlogs= result.data;\r\n      //pagination starts from here\r\n      this.totalcount = parseInt(result.total);    \r\n\r\n      if(this.totalcount <= paging.pageSize){\r\n        this.noOfItems = this.totalcount;\r\n      }else{\r\n        this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n      }\r\n\r\n      if(this.auditlogs != null && this.auditlogs != undefined){\r\n        this.auditlogs = this.auditlogs.map(function(el,i){\r\n          var o = Object.assign({},el);\r\n          o.indexId = i;\r\n          return o;\r\n        });\r\n      }\r\n      let currentrows = (this.currentPage * this.numberOfPages);\r\n    }\r\n    });\r\n  }\r\n  //API Integration ends here\r\n\r\n  rowExpand(event, data) {\r\n    this.router.navigate(['add-auditlog'], { relativeTo: this.route,\r\n      queryParams: { \r\n        code: window.btoa(event.data.code) }\r\n     });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <span class=\"table-header-items\">Audit Logs</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"auditlogs\" [lazy]=\"true\" dataKey=\"indexId\" rowExpandMode=\"single\" [paginator]=\"true\"\r\n        [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n        [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" (onRowExpand)=\"rowExpand($event,dt)\">              \r\n        <ng-template pTemplate=\"header\" let-columns>\r\n            <tr>\r\n                <th style=\"width:2.5em\"></th>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                    style=\"width: 20% !important;\">\r\n                    <div class=\"\">\r\n                        {{col.header}}\r\n                        <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                    </div>   \r\n                </th>\r\n                \r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n            <tr>\r\n                <td>\r\n                    <a href=\"#\" [pRowToggler]=\"rowData\">\r\n                        <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                    </a>\r\n                </td>\r\n                <td *ngFor=\"let col of columns\">                    \r\n                    {{rowData[col.field]}}                       \r\n                </td>\r\n            \r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"rowexpansion\"  let-rowData let-columns=\"columns\">\r\n            <tr class=\"expansion-div\">\r\n                <td [attr.colspan]=\"columns.length + 1\">\r\n                    <div class=\"ui-fluid\">\r\n                        <router-outlet></router-outlet>                            \r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { BranchesService } from 'src/app/cts/shared/services/branches.service';\r\nimport { Branches } from 'src/app/cts/shared/models/branches';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-branch',\r\n  templateUrl: './add-branch.component.html',\r\n  styleUrls: ['./add-branch.component.scss']\r\n})\r\nexport class AddBranchComponent implements OnInit {\r\n  branchId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addBranchForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  status: SelectItem[] = [];\r\n\r\n\r\n  querytype:number;\r\n\r\n  constructor(private BranchesService: BranchesService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.branchId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Branch\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Branch\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n  }\r\n  createForm() {\r\n    this.addBranchForm = this.fb.group({\r\n      'code': new FormControl('', { validators: [Validators.required] }),\r\n      'title': new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditBranchDetails();\r\n  }\r\n  bindEditBranchDetails() {\r\n\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.branchId.toString();\r\n    //Get Branches API call\r\n    this.BranchesService.getBranches(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addBranchForm.setValue({\r\n            'code': this.editData.code,\r\n            'title': this.editData.title,\r\n            'status': this.editData.status\r\n\r\n          })\r\n        }\r\n      },\r\n      error =>{  \r\n        this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n      });\r\n      \r\n\r\n  }\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Branch\";\r\n    this.querytype=2;\r\n  }\r\n\r\n  addBranchSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addBranchForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Branches();\r\n      customObj = this.addBranchForm.value;\r\n      customObj.id = this.branchId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.BranchesService.AEDBranches(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addBranchForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Branch code or Title already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addBranchForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.AlphaNumeric(event);\r\n  }\r\n}\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addBranchForm\" class=\"col-md-12\" (ngSubmit)=\"addBranchSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addBranchForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addBranchForm.controls['code'].valid && addBranchForm.controls['code'].touched)|| \r\n                                (!addBranchForm.controls['code'].valid && addBranchForm.controls['code'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addBranchForm.controls['code'].errors?.required)\">Enter \"Branch Code\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addBranchForm.controls['title'].valid && \r\n                            addBranchForm.controls['title'].touched)|| \r\n                            (!addBranchForm.controls['title'].valid && addBranchForm.controls['title'].untouched && \r\n                            formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addBranchForm.controls['title'].errors?.required)\">\r\n                                Enter \"Branch Title\"\r\n                            </span>\r\n                        </div>\r\n                        <div class=\"col-md-3 error-div\" *ngIf=\"((!addBranchForm.controls['status'].valid && \r\n                            addBranchForm.controls['status'].touched)|| \r\n                            (!addBranchForm.controls['status'].valid && addBranchForm.controls['status'].untouched && \r\n                            formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addBranchForm.controls['status'].errors?.required)\">\r\n                                Enter \"Status\"\r\n                            </span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Branch Code\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"4\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"code\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" type=\"text\" placeholder=\"Branch Code\" size=\"30\" pInputText [ngClass]=\"{'error':((!addBranchForm.controls['code'].valid && addBranchForm.controls['code'].touched) || \r\n                    (!addBranchForm.controls['code'].valid && addBranchForm.controls['code'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Branch Title</span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"title\"\r\n                (keypress)=\"keyPressAlphabet($event)\" type=\"text\" placeholder=\"Branch Title\" size=\"30\" pInputText [ngClass]=\"{'error':((!addBranchForm.controls['title'].valid && addBranchForm.controls['title'].touched) || \r\n                (!addBranchForm.controls['title'].valid && addBranchForm.controls['title'].untouched && \r\n                formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addBranchForm.controls['status'].valid &&\r\n                    addBranchForm.controls['status'].touched) || \r\n                (!addBranchForm.controls['status'].valid && addBranchForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>           \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild, ElementRef  } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Branches } from 'src/app/cts/shared/models/branches';\r\nimport { BranchesService } from 'src/app/cts/shared/services/branches.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'app-branches',\r\n  templateUrl: './branches.component.html',\r\n  styleUrls: ['./branches.component.scss']\r\n})\r\nexport class BranchesComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  branches: Branches[];\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  display:boolean=false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  toBeDeletedId:any;\r\n  users: any[]=[];\r\n  status: SelectItem[] = [];\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n  moment: any = moment;\r\n  AppConstants:any; \r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private dropdownService: DropdownService,private BranchesService: BranchesService, private router: Router, private route: ActivatedRoute,private fb: FormBuilder) {\r\n    this.branches = [];   \r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n        }\r\n      });\r\n   }\r\n\r\n  ngOnInit(): void {    \r\n    //Table headers and fields\r\n    this.cols = [\r\n      { field: 'title', header: 'title' },\r\n      { field: 'code', header: 'code' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n     //to create form with validations\r\n     this.createFilterForm();\r\n  }\r\n  //Search box toggling\r\n  toggleBranch($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n//Api Integration Starts from here\r\n  onPageChange(event:LazyLoadEvent){\r\n    let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if(this.totalcount != 0){\r\n      this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }\r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n\r\n  }\r\n\r\n  loadGrids(pagingData){\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.BranchesService.getBranches(pagingData)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n      this.branches= result.data;\r\n      //pagination starts from here\r\n      this.totalcount = parseInt(result.total);    \r\n\r\n      if(this.totalcount <= paging.pageSize){\r\n        this.noOfItems = this.totalcount;\r\n      }else{\r\n        this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n      }\r\n\r\n      if(this.branches != null && this.branches != undefined){\r\n        this.branches = this.branches.map(function(el,i){\r\n          var o = Object.assign({},el);\r\n          o.indexId = i;\r\n          return o;\r\n        });\r\n      }\r\n      let currentrows = (this.currentPage * this.numberOfPages);\r\n    }\r\n    });\r\n  }\r\n  //API Integration ends here\r\n\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id=\"0\";\r\n    this.router.navigate(['add-branch'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n  }\r\n  editBranch(id):void{\r\n    this.router.navigate(['add-branch'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n  }\r\n  viewBranch(id):void{\r\n    this.router.navigate(['add-branch'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n  }\r\n  deleteBranch(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  branchRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Branches();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.BranchesService.AEDBranches(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {   \r\n        this.DataTable.reset();    \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n //Filters code starts from here\r\n   //Construct Filter Form\r\n   createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'ttitle': new FormControl(''),\r\n      'tcode': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),    \r\n      'tusertype': new FormControl(''),     \r\n      'tstatus': new FormControl('')         \r\n    });\r\n  }\r\n  //Filter Reset method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  } \r\n  //to get date format\r\n  getFormat(createddate):string{\r\n   return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n  }\r\n\r\n\r\n  checkPermissions(permissionValue){\r\n    return  AuthorizationGuard.checkPermission(permissionValue);\r\n   }\r\n   getFilterFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <!-- Component Header Starts -->\r\n  <div class=\"col-md-12 component-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <span class=\"table-header-items\">Branches</span>\r\n      </div>\r\n      <div class=\"col-md-8 text-right\">\r\n        <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\" class=\"ui-button-secondary table-header-items\"\r\n          (click)=\"toggleBranch($event)\"></button>&nbsp;\r\n        <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Branch\" class=\"ui-button-secondary table-header-items\"\r\n          (click)=\"addNew($event)\" *ngIf=\"checkPermissions('ADD')\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Form Starts Here -->\r\n  <form [formGroup]=\"filtersForm\">\r\n    <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n      <div class=\"row search-box search-box-padding\">\r\n        <div class=\"col-md-3\">\r\n          <span>Title</span><br>\r\n          <input id=\"title\" #tt class=\"w-100\" formControlName=\"ttitle\" type=\"text\" placeholder=\"Title\" size=\"30\"\r\n            (keydown)=\"$event.key === 'Enter' ? dt.filter(tt.value,'title',''): ''\" pInputText>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <span>Code</span><br>\r\n          <input id=\"code\" #ct class=\"w-100\" formControlName=\"tcode\" type=\"text\" placeholder=\"Code\" size=\"30\"\r\n            (keydown)=\"$event.key === 'Enter' ? dt.filter(ct.value,'code',''): ''\" pInputText>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <span>Created On</span><br>\r\n          <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" \r\n          (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n              [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <span>User</span><br>\r\n        <p-dropdown #ut [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n        (onChange)=\"dt.filter(ut.value,'userid','')\"\r\n            ></p-dropdown>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <span>Status</span><br>\r\n      <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n      (onChange)=\"dt.filter(st.value,'status','')\"\r\n          ></p-dropdown>\r\n  </div>\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-3 text-right search-buttons\">\r\n          <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n            class=\"ui-button-secondary table-header-items\"></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n  <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n    <div class=\"col-md-12\">\r\n      <i class=\"fa fa-exclamation-circle\"></i>\r\n      <b>{{errorMessage}}</b>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n    <div class=\"col-md-12\">\r\n      <i class=\"fa fa-check\"></i>\r\n      <b>{{successMessage}}</b>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12 search-box\">\r\n    <p-table #dt [columns]=\"cols\" [value]=\"branches\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n      [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n      [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n      <ng-template pTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n            style=\"width: 20% !important;\">\r\n            <div class=\"\">\r\n              {{col.header}}\r\n              <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n            </div>\r\n          </th>\r\n          <th style=\"width:5em\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n        <tr>\r\n          <td *ngFor=\"let col of columns\">\r\n            <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n              <a class=\"bold\" (click)=\"viewBranch(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n            </div>\r\n            <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n              <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                <a class=\"bold\" (click)=\"viewBranch(rowData.id)\">{{rowData[col.field]}}</a>\r\n              </div>\r\n              <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                <div class=\"\" *ngIf=\"rowData.status == 'AC'\">\r\n                  <button class=\"btn btn-success\">Active</button>\r\n                </div>\r\n                <div class=\"\" *ngIf=\"rowData.status == 'NA'\">\r\n                  <button class=\"btn btn-danger\">Not Active</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </td>\r\n          <td>\r\n            <div class=\"d-flex\">\r\n            <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editBranch(rowData.id)\"></i>&nbsp;\r\n            <i class=\"pi pi-trash\" *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteBranch(rowData.id)\"></i>\r\n          </div>\r\n          </td>\r\n\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n    <!-- pagination div starts from here -->\r\n    <div class=\"col-md-12\">\r\n      <div class=\"pagecount-dropdown\">\r\n        <span class=\"pagecounting\">Items per page</span>\r\n      </div>\r\n      <div class=\"pagecount\">\r\n        <div *ngIf=\"dt.totalRecords != 0\">\r\n          {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n          {{dt.totalRecords}}\r\n          Items\r\n        </div>\r\n        <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n      </div>\r\n    </div>\r\n    <!-- pagination div ends here -->\r\n  </div>\r\n  <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n    [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n    <p>Are you sure you want to delete Branch?</p>\r\n    <p-footer class=\"btm-buttons\">\r\n      <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"branchRevoke()\"></button>\r\n      <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n    </p-footer>\r\n  </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { ConfirmPasswordValidator } from './custom-password-validator';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  changePasswordForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  errorMessage:string=\"\";\r\n  successMessage:string=\"\";\r\n  isRequired:boolean=false;\r\n  oldPassword:  FormControl;\r\n  newPassword: FormControl;\r\n  confirmPassword: FormControl;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm(){\r\n    this.changePasswordForm = this.fb.group(\r\n      {\r\n        oldPassword: [\"\",{validators:[Validators.required,Validators.minLength(8),Validators.pattern('^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$')]}],\r\n        newPassword: [\"\",{validators:[Validators.required,Validators.minLength(8),Validators.pattern('^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$')]}],\r\n        confirmPassword: [\"\",{validators:[Validators.required,Validators.minLength(8),Validators.pattern('^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$')]}]\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator(\"newPassword\", \"confirmPassword\",\"oldPassword\")\r\n      }      \r\n    );\r\n    this.changePasswordForm.controls[\"oldPassword\"].setValue(\"Optum789@\");\r\n  }\r\n\r\n  changePwdSubmit(): void {\r\n    this.errorMessage=\"\";\r\n    this.successMessage=\"\";\r\n    this.formSubmitAttempt = true;\r\n    if(this.changePasswordForm.valid){\r\n      this.formSubmitAttempt=false;\r\n      console.log(this.changePasswordForm.value);\r\n      // this.changePasswordForm.reset();\r\n      this.successMessage=\"Your changes have been successfully saved\";\r\n    }\r\n  }\r\n\r\n  \r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Change Password</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"changePasswordForm\" class=\"col-md-12\" (ngSubmit)=\"changePwdSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!changePasswordForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!changePasswordForm.controls['oldPassword'].valid && \r\n                                changePasswordForm.controls['oldPassword'].touched)|| (!changePasswordForm.controls['oldPassword'].valid && \r\n                                changePasswordForm.controls['oldPassword'].untouched && \r\n                                 formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(changePasswordForm.controls['oldPassword'].errors?.required)\">Enter \"Old\r\n                                    Password\"</span>\r\n                                    <span *ngIf=\"(changePasswordForm.controls['oldPassword'].errors?.pattern)\">Enter Valid \"Old\r\n                                        Password\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!changePasswordForm.controls['newPassword'].valid && \r\n                                changePasswordForm.controls['newPassword'].touched)|| (!changePasswordForm.controls['newPassword'].valid && \r\n                                changePasswordForm.controls['newPassword'].untouched && \r\n                                 formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(changePasswordForm.controls['newPassword'].errors?.required)\">Enter \"New\r\n                                    Password\"</span>\r\n                                    <span *ngIf=\"(changePasswordForm.controls['newPassword'].errors?.pattern)\">Enter Valid \"New\r\n                                        Password\"</span>\r\n                                        <span *ngIf=\"(changePasswordForm.controls['newPassword'].errors.samePasswordValidator)\">\r\n                                            Old Password and New Password should not be same\r\n                                        </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!changePasswordForm.controls['confirmPassword'].valid && \r\n                                changePasswordForm.controls['confirmPassword'].touched)|| (!changePasswordForm.controls['confirmPassword'].valid && \r\n                                changePasswordForm.controls['confirmPassword'].untouched && \r\n                                 formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(changePasswordForm.controls['confirmPassword'].errors.required)\">Enter \"Confirm\r\n                                    Password\"</span>\r\n                                    <span *ngIf=\"(changePasswordForm.controls['confirmPassword'].errors.pattern)\">Enter Valid \"Confirm\r\n                                        Password\"</span>\r\n                                        <span *ngIf=\"(changePasswordForm.controls['confirmPassword'].errors.confirmPasswordValidator)\">New Passsword and\r\n                                            Confirm Password didn't match. </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"col-md-12\">\r\n                    <span>Old Password</span><br>\r\n                    <input type=\"text\" class=\"w-100\" disabled=\"true\" class=\"required\" placeholder=\"Enter Old Password\" formControlName=\"oldPassword\" pPassword \r\n                    [ngClass]=\"{'error':((!changePasswordForm.controls['oldPassword'].valid && \r\n                    changePasswordForm.controls['oldPassword'].touched) || (!changePasswordForm.controls['oldPassword'].valid && \r\n                    changePasswordForm.controls['oldPassword'].untouched && formSubmitAttempt))}\">\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>New Password</span><br>\r\n                    <input type=\"text\" class=\"w-100\" class=\"required\" placeholder=\"Enter New Password\" formControlName=\"newPassword\" pPassword\r\n                    [ngClass]=\"{'error':((!changePasswordForm.controls['newPassword'].valid && \r\n                    changePasswordForm.controls['newPassword'].touched) || (!changePasswordForm.controls['newPassword'].valid && \r\n                    changePasswordForm.controls['newPassword'].untouched && formSubmitAttempt))}\">\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>Confirm Password</span><br>\r\n                    <input type=\"text\" class=\"w-100\" class=\"required\" placeholder=\"Enter Confirm Password\" formControlName=\"confirmPassword\" pPassword \r\n                    [ngClass]=\"{'error':((!changePasswordForm.controls['confirmPassword'].valid && \r\n                    changePasswordForm.controls['confirmPassword'].touched) || (!changePasswordForm.controls['confirmPassword'].valid && \r\n                    changePasswordForm.controls['confirmPassword'].untouched && formSubmitAttempt))}\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 pt-lg-3\">\r\n                <h6 class=\"yellow\"><u>Minimum Password Requirements</u></h6>\r\n                <p>Password must contain a minimum of eight(8) characters AND include each of the following :</p>\r\n                <ul>\r\n                    <li>An upper case letter (A)</li>\r\n                    <li>A lower case letter (a)</li>\r\n                    <li>A number (0-9)</li>\r\n                    <li>A special character !@#$%^&*()_+</li>\r\n                </ul>\r\n            </div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <div class=\"col-md-12\">\r\n                    <span class=\"required\">\r\n                        <span class=\"requirednote\">Required</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-angle-left\" label=\"Back\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { AbstractControl, FormGroup } from '@angular/forms';\r\n\r\nexport function ConfirmPasswordValidator(controlName: string, matchingControlName: string,previousControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n      let control = formGroup.controls[controlName];\r\n      let matchingControl = formGroup.controls[matchingControlName]\r\n      let previousControl = formGroup.controls[previousControlName]\r\n      if (\r\n        matchingControl.errors &&\r\n        !matchingControl.errors.confirmPasswordValidator\r\n      ) {\r\n        return;\r\n      }\r\n      if (control.value !== matchingControl.value) {\r\n        matchingControl.setErrors({ confirmPasswordValidator: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n      if (\r\n        control.errors &&\r\n        !control.errors.samePasswordValidator\r\n      ) {\r\n        return;\r\n      }\r\n      if (control.value === previousControl.value) {\r\n        control.setErrors({ samePasswordValidator: true });\r\n      } else {\r\n        control.setErrors(null);\r\n      }\r\n\r\n    };\r\n  }\r\n\r\nexport class customLessThanCurrentDateValidator{\r\n    static ValidDate(AC:AbstractControl){\r\n        const formGroup = AC.parent;\r\n        if(formGroup){\r\n            const doiControl = formGroup.get('doi');\r\n            const selectedDoi = doiControl.value;\r\n            const currentDate = new Date().getTime()-(30*24*60*60*1000)\r\n            if(currentDate > selectedDoi){\r\n                return {ValidDate: true};\r\n            }else{\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { ClassesService } from 'src/app/cts/shared/services/classes.service';\r\nimport { Classes } from 'src/app/cts/shared/models/classes';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-class',\r\n  templateUrl: './add-class.component.html',\r\n  styleUrls: ['./add-class.component.scss']\r\n})\r\nexport class AddClassComponent implements OnInit {\r\n  [x: string]: any;\r\n  classId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addClassForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  sections: SelectItem[] = [];\r\n  status: SelectItem[] = [];\r\n  querytype:number;\r\n\r\n\r\n\r\n  constructor(private ClassesService: ClassesService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n    this.sections = [\r\n      { label: '1-section', value: 1 },\r\n      { label: '2-sections', value: 2 },\r\n      { label: '2-sections', value: 3 }\r\n\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.classId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Class\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Class\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addClassForm = this.fb.group({\r\n      'class': new FormControl('', { validators: [Validators.required] }),\r\n      'section': new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditClassDetails();\r\n  }\r\n  bindEditClassDetails() {\r\n\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.classId.toString();\r\n    //Get Classes API call\r\n    this.ClassesService.getClasses(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addClassForm.setValue({\r\n            'class': this.editData.name,\r\n            'section': this.editData.noofsections,\r\n            'status': this.editData.status\r\n\r\n          })\r\n        }\r\n      });\r\n      \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Class\";\r\n  }\r\n\r\n  addClassSubmit(): void {\r\n    // this.errorMessage = \"\";\r\n    // this.successMessage = \"\";\r\n    // this.formSubmitAttempt = true;\r\n    // if (this.addClassForm.valid) {\r\n    //   this.formSubmitAttempt = false;\r\n    //   console.log(this.addClassForm.value);\r\n    //   this.addClassForm.reset();\r\n    //   this.successMessage = \"Your changes have been successfully saved\";\r\n    // }\r\n\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addClassForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Classes();\r\n\r\n      customObj = this.addClassForm.value;\r\n      customObj.id = this.classId;\r\n      customObj.querytype = this.querytype;\r\n      customObj.name = customObj.class;\r\n\r\n      //AED Branches API call\r\n      this.ClassesService.AEDClasses(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addClassForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Class name already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addClassForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.AlphaNumeric(event);\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addClassForm\" class=\"col-md-12\" (ngSubmit)=\"addClassSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addClassForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addClassForm.controls['class'].valid && addClassForm.controls['class'].touched)|| \r\n                                (!addClassForm.controls['class'].valid && addClassForm.controls['class'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addClassForm.controls['class'].errors?.required)\">Enter \"Class\r\n                                    Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addClassForm.controls['section'].valid && \r\n                            addClassForm.controls['section'].touched)|| \r\n                            (!addClassForm.controls['section'].valid && addClassForm.controls['section'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addClassForm.controls['section'].errors?.required)\">\r\n                                    Enter \"Section\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addClassForm.controls['status'].valid && \r\n                            addClassForm.controls['status'].touched)|| \r\n                            (!addClassForm.controls['status'].valid && addClassForm.controls['status'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addClassForm.controls['status'].errors?.required)\">\r\n                                    Enter \"Status\"\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Class Name\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"class\" type=\"text\" placeholder=\"Class Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addClassForm.controls['class'].valid && addClassForm.controls['class'].touched) || \r\n                    (!addClassForm.controls['class'].valid && addClassForm.controls['class'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>No Of Sections</span><br>\r\n                <p-dropdown [options]=\"sections\" filter=\"true\" formControlName=\"section\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select No of sections\" [ngClass]=\"{'error':((!addClassForm.controls['section'].valid &&\r\n                addClassForm.controls['section'].touched) || \r\n                (!addClassForm.controls['section'].valid && addClassForm.controls['section'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addClassForm.controls['status'].valid &&\r\n                    addClassForm.controls['status'].touched) || \r\n                (!addClassForm.controls['status'].valid && addClassForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>            \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Classes } from 'src/app/cts/shared/models/classes';\r\nimport { ClassesService } from 'src/app/cts/shared/services/classes.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'app-classes',\r\n  templateUrl: './classes.component.html',\r\n  styleUrls: ['./classes.component.scss']\r\n})\r\nexport class ClassesComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Classes[];\r\n  classes: Classes[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  display:boolean=false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  sections: SelectItem[] = [];\r\n  toBeDeletedId:any;\r\n  errorMessage: string = \"\";\r\n  status: SelectItem[] = [];\r\n  users: any[]=[];\r\n  successMessage: string = \"\";\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private dropdownService: DropdownService,private ClassesService: ClassesService, private router: Router, private route: ActivatedRoute,private fb: FormBuilder) {\r\n    this.classes = [];\r\n    this.sections = [\r\n      { label: '1-section', value: 1 },\r\n      { label: '2-sections', value: 2 },\r\n      { label: '3-sections', value: 3 },\r\n      { label: '4-sections', value: 4 },\r\n      { label: '5-sections', value: 5 },\r\n      { label: '6-sections', value: 6 },\r\n      { label: '7-sections', value: 7 },\r\n      { label: '8-sections', value: 8 },\r\n      { label: '9-sections', value: 9 },\r\n      { label: '10-sections', value: 10 },\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'name', header: 'Name' },\r\n      { field: 'noofsections', header: 'No.of Sections' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  } \r\n\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n//Api Integration Starts from here\r\nonPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  this.ClassesService.getClasses(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.classes= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.classes != null && this.classes != undefined){\r\n      this.classes = this.classes.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n\r\n\r\n\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id=\"0\";\r\n    this.router.navigate(['add-class'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n  }\r\n  editClass(id):void{\r\n    this.router.navigate(['add-class'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n  }\r\n  viewClass(id):void{\r\n    this.router.navigate(['add-class'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n  }\r\n  deleteClass(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  classRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Classes();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.ClassesService.AEDClasses(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {   \r\n        this.DataTable.reset();    \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n //Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n   createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tclass': new FormControl(''),\r\n      'tsection': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),    \r\n      'tusertype': new FormControl(''),     \r\n      'tstatus': new FormControl('') \r\n    });\r\n  }\r\n\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  } \r\n//to get date format\r\ngetFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n }\r\n\r\n checkPermissions(permissionValue){\r\n  return  AuthorizationGuard.checkPermission(permissionValue);\r\n }\r\n getFilterFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n }\r\n}\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Classes</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Class\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\" *ngIf=\"checkPermissions('ADD')\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Name</span><br>\r\n                    <input id=\"name\" #nm class=\"w-100\" type=\"text\" formControlName=\"tclass\" placeholder=\"Name\" size=\"30\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(nm.value,'name',''): ''\"\r\n\r\n                    pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>No.of Sections</span><br>\r\n                    <p-dropdown #ns [options]=\"sections\" formControlName=\"tsection\" class=\"w-100\"\r\n                    (onChange)=\"dt.filter(ns.value,'noofsections','')\"\r\n                        placeholder=\"Select No of Sections\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <span>Create by</span><br>\r\n                  <p-dropdown #ut [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n                  (onChange)=\"dt.filter(ut.value,'userid','')\"\r\n                      ></p-dropdown>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <span>Status</span><br>\r\n                <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n                (onChange)=\"dt.filter(st.value,'status','')\"\r\n                    ></p-dropdown>\r\n            </div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"classes\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewClass(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewClass(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editClass(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\" *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteClass(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Class?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"classRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { FullCalendar } from 'primeng/fullcalendar/primeng-fullcalendar';\r\nimport { DashboardService } from 'src/app/cts/shared/services/dashboard.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  ourStudentsData: any;\r\n  ourExpenditureData: any;\r\n  ourIncomedata: any;\r\n  ourOverviewData: any;\r\n  eventsData: any;\r\n  eventOptions: any;\r\n  announcementData: any;\r\n  ourachivementsData: any[];\r\n  responsiveOptions;\r\n  teacherPerformancedata:any;\r\n  ourTopStudents:any;\r\n  academicPerformance: any;\r\n\r\n  constructor(private dashboardservice:DashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.GetSudentsbyGender();\r\n    this.GetAcademicPerformance();\r\n    this.GetAcievements();\r\n    this.GetTeacherPerformance();\r\n    \r\n    \r\n    this.ourExpenditureData = {\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n      datasets: [\r\n        {\r\n          label: '2019',\r\n          backgroundColor: '#448fab',\r\n          borderColor: '#448fab',\r\n          data: [65, 59, 80, 81, 56, 55, 40]\r\n        },\r\n        {\r\n          label: '2020',\r\n          backgroundColor: '#008000',\r\n          borderColor: '#008000',\r\n          data: [28, 48, 40, 19, 86, 27, 90]\r\n        }\r\n      ]\r\n    }\r\n    this.ourOverviewData = {\r\n      labels: ['Students', 'Teachers', 'Users'],\r\n      datasets: [\r\n        {\r\n          data: [300, 50, 100],\r\n          backgroundColor: [\r\n            \"#448fab\",\r\n            \"#008000\",\r\n            \"#d69d33\"\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"#448fab\",\r\n            \"#008000\",\r\n            \"#d69d33\"\r\n          ]\r\n        }]\r\n    };\r\n    this.ourIncomedata = {\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n      datasets: [\r\n        {\r\n          label: '2019',\r\n          data: [65, 59, 80, 81, 56, 55, 40],\r\n          fill: false,\r\n          borderColor: '#448fab'\r\n        },\r\n        {\r\n          label: '2020',\r\n          data: [28, 48, 40, 19, 86, 27, 90],\r\n          fill: false,\r\n          borderColor: '#008000'\r\n        }\r\n      ]\r\n    }\r\n\r\n    this.eventsData = [\r\n      {\r\n        \"id\": 1,\r\n        \"title\": \"All Day Event\",\r\n        \"start\": \"2020-02-01\"\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"title\": \"Long Event\",\r\n        \"start\": \"2020-02-07\",\r\n        \"end\": \"2020-02-10\"\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"title\": \"Repeating Event\",\r\n        \"start\": \"2020-02-09T16:00:00\"\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"title\": \"Repeating Event\",\r\n        \"start\": \"2020-02-16T16:00:00\"\r\n      },\r\n      {\r\n        \"id\": 5,\r\n        \"title\": \"Conference\",\r\n        \"start\": \"2020-02-11\",\r\n        \"end\": \"2020-02-13\"\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"title\": \"Meeting\",\r\n        \"start\": \"2020-02-12T10:30:00\",\r\n        \"end\": \"2020-02-12T12:30:00\"\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"title\": \"Lunch\",\r\n        \"start\": \"2020-02-12T12:00:00\"\r\n      },\r\n      {\r\n        \"id\": 8,\r\n        \"title\": \"Meeting\",\r\n        \"start\": \"2020-02-12T14:30:00\"\r\n      },\r\n      {\r\n        \"id\": 9,\r\n        \"title\": \"Happy Hour\",\r\n        \"start\": \"2020-02-12T17:30:00\"\r\n      },\r\n      {\r\n        \"id\": 10,\r\n        \"title\": \"Dinner\",\r\n        \"start\": \"2020-02-12T20:00:00\"\r\n      },\r\n      {\r\n        \"id\": 11,\r\n        \"title\": \"Birthday Party\",\r\n        \"start\": \"2020-02-13T07:00:00\"\r\n      },\r\n      {\r\n        \"id\": 12,\r\n        \"title\": \"Click for Google\",\r\n        \"url\": \"http://google.com/\",\r\n        \"start\": \"2020-02-28\"\r\n      }\r\n    ];\r\n\r\n    this.announcementData = [\r\n      {\r\n        \"date\": \"14th June,2020\",\r\n        \"description\": \"Sample announcement1\",\r\n        \"createyBy\": \"Teja Prasad\",\r\n        \"timelapse\": \"5 mins ago\"\r\n      },\r\n      {\r\n        \"date\": \"15th July,2020\",\r\n        \"description\": \"Sample announcement2\",\r\n        \"createyBy\": \"Teja Prasad\",\r\n        \"timelapse\": \"10 mins ago\"\r\n      },\r\n      {\r\n        \"date\": \"15th July,2020\",\r\n        \"description\": \"Sample announcement3\",\r\n        \"createyBy\": \"Teja Prasad\",\r\n        \"timelapse\": \"15 mins ago\"\r\n      }\r\n\r\n    ];\r\n\r\n\r\n    this.eventOptions = {\r\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n      defaultDate: '2020-02-01',\r\n      header: {\r\n        left: 'prev,next',\r\n        center: 'title',\r\n        right: 'dayGridMonth,dayGridWeek,timeGridDay'\r\n      },\r\n      editable: true,\r\n      dateClick: (e) => {\r\n        alert(\"click event\");\r\n      }\r\n    }\r\n\r\n    this.responsiveOptions = [\r\n      {\r\n        breakpoint: '1024px',\r\n        numVisible: 1,\r\n        numScroll: 1\r\n      },\r\n      {\r\n        breakpoint: '768px',\r\n        numVisible: 1,\r\n        numScroll: 1\r\n      },\r\n      {\r\n        breakpoint: '560px',\r\n        numVisible: 1,\r\n        numScroll: 1\r\n      }\r\n    ];\r\n\r\n    this.ourTopStudents=[\r\n      {\r\n        \"name\":\"Teja Prasad\",\r\n        \"class\":\"6\",\r\n        \"percentage\":\"90%\"\r\n      },\r\n      {\r\n        \"name\":\"Chaitanya\",\r\n        \"class\":\"7\",\r\n        \"percentage\":\"100%\"\r\n      },\r\n      {\r\n        \"name\":\"Sindhuja\",\r\n        \"class\":\"8\",\r\n        \"percentage\":\"99%\"\r\n      },\r\n      {\r\n        \"name\":\"Ganesh\",\r\n        \"class\":\"4\",\r\n        \"percentage\":\"95%\"\r\n      },\r\n      {\r\n        \"name\":\"Kiran\",\r\n        \"class\":\"7\",\r\n        \"percentage\":\"92%\"\r\n      },\r\n      {\r\n        \"name\":\"Rahul\",\r\n        \"class\":\"8\",\r\n        \"percentage\":\"79%\"\r\n      },\r\n      {\r\n        \"name\":\"Ramesh\",\r\n        \"class\":\"9\",\r\n        \"percentage\":\"89%\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  GetSudentsbyGender()\r\n  {\r\n    var params=JSON.stringify(this.getReqData(\"GetStudentsbyGender\"));\r\n    this.dashboardservice.getDashBoard(params)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n        var gendercount=[];\r\n        let Gender=[\"M\",\"F\"];\r\n        Gender.forEach(ele=>{\r\n            let val=result.data.ctcstudents.find(x=>x.ctcstudent_gender==ele).count;\r\n            gendercount.push(val);\r\n        });\r\n        this.ourStudentsData = {\r\n          labels: [\"Male\",\"Female\"],\r\n          datasets: [\r\n            {\r\n              data: gendercount,\r\n              backgroundColor: [\r\n                \"#448fab\",\r\n                \"#008000\"\r\n              ],\r\n              hoverBackgroundColor: [\r\n                \"#448fab\",\r\n                \"#008000\"\r\n              ]\r\n            }]\r\n        };\r\n      }  \r\n    });\r\n  }\r\n\r\n  GetAcademicPerformance()\r\n  {\r\n    var params=JSON.stringify(this.getReqData(\"GetAcademicPerformance\"));\r\n    this.dashboardservice.getDashBoard(params)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n        var subjects=[];\r\n        var MaledataSet=[];\r\n        var FemaledataSet=[];\r\n        result.data.subjects.forEach(element => {\r\n          subjects.push(element.subjectName);\r\n        });\r\n        subjects.forEach(ele=>{\r\n          let MaleResult=result.data.table1.find(x=>x.subjectName==ele && x.gender=='M');\r\n          let FemaleResult=result.data.table1.find(x=>x.subjectName==ele && x.gender=='F');\r\n          MaledataSet.push(MaleResult==undefined?\"0\":MaleResult.marks);\r\n          FemaledataSet.push(FemaleResult==undefined?\"0\":FemaleResult.marks);\r\n      });\r\n      this.academicPerformance={\r\n        labels: subjects,\r\n        datasets: [\r\n            {\r\n                label: 'Boys',\r\n                backgroundColor: 'rgb(153, 255, 187,0.2)',\r\n                borderColor: 'rgb(0, 153, 51)',\r\n                pointBackgroundColor: 'rgb(153, 255, 187,1)',\r\n                pointBorderColor: '#009933',\r\n                pointHoverBackgroundColor: '#009933',\r\n                pointHoverBorderColor: 'rgb(153, 255, 187,1)',\r\n                data: MaledataSet\r\n            },\r\n            {\r\n                label: 'Girls',\r\n                backgroundColor: 'rgb(179, 204, 255,0.2)',\r\n                borderColor: 'rgb(0, 122, 204)',\r\n                pointBackgroundColor: 'rgb(179, 204, 255,1)',\r\n                pointBorderColor: '#6699ff',\r\n                pointHoverBackgroundColor: '#6699ff',\r\n                pointHoverBorderColor: 'rgb(179, 204, 255,1)',\r\n                data: FemaledataSet\r\n            }\r\n        ]\r\n    };\r\n      }  \r\n    });\r\n    \r\n  }\r\n\r\n  GetAcievements()\r\n  {\r\n    var params=JSON.stringify(this.getReqData(\"GetAcievements\"));\r\n    this.dashboardservice.getDashBoard(params)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n        this.ourachivementsData = result.data.achievements;\r\n       \r\n      }  \r\n    });\r\n  }\r\n\r\n  GetTeacherPerformance()\r\n  {\r\n    var params=JSON.stringify(this.getReqData(\"GetTeacherPerformance\"));\r\n    this.dashboardservice.getDashBoard(params)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n        \r\n      }  \r\n    });\r\n    \r\n    this.teacherPerformancedata = {\r\n      datasets: [{\r\n        data: [\r\n          88,67,76,\r\n          72,61,56,\r\n          91,58,86,\r\n        ],\r\n        backgroundColor: [\r\n          \"#448fab\",\"#008000\",\"#448fab\",\r\n          \"#008000\",\"#448fab\",\"#008000\",\r\n          \"#448fab\",\"#008000\",\"#448fab\",\r\n        ],\r\n        label: 'My dataset'\r\n      }],\r\n      labels: [\r\n        \"Teacher1\",\"teacher2\",\"Teacher3\",\r\n        \"Teacher4\",\"teacher5\",\"Teacher6\",\r\n        \"Teacher7\",\"teacher8\",\"Teacher9\",\r\n      ],\r\n      legend: {display: false}\r\n    }\r\n  }\r\n\r\n  getReqData(chartType)\r\n  {\r\n    return {\r\n      \"start\": \"\",\r\n      \"end\": \"\",\r\n      \"chartType\": chartType\r\n  };\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid dashboard-component\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Dashboard</span>\r\n            </div>\r\n            <div class=\"col-md-5\"></div>\r\n            <div class=\"col-md-3\">\r\n                <p-calendar placeholder=\"Select Date Range\" [showIcon]=\"true\" selectionMode=\"range\" [readonlyInput]=\"true\"></p-calendar>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 mt-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\">\r\n                    <div class=\"chart-title\">Students</div>\r\n                    <div class=\"chart-body\">\r\n                        <p-chart type=\"doughnut\" [data]=\"ourStudentsData\"></p-chart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\" >\r\n                    <div class=\"chart-title\">Teacher's Performance</div>\r\n                    <div class=\"chart-body\">\r\n                        <p-chart type=\"polarArea\" [data]=\"teacherPerformancedata\"></p-chart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-4 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\">\r\n                    <div class=\"chart-title\">Academic Performance</div>\r\n                    <div class=\"chart-body\">\r\n                        <p-chart type=\"radar\" [data]=\"academicPerformance\"></p-chart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"col-md-4 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\">\r\n                    <div class=\"chart-title\">Our Expenditure</div>\r\n                    <div class=\"chart-body\">\r\n                        <p-chart type=\"bar\" [data]=\"ourExpenditureData\"></p-chart>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"col-md-12 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\">\r\n                    <div class=\"chart-title\">Our Events</div>\r\n                    <div class=\"chart-body mt-2\">\r\n                        <!-- <p-fullCalendar [events]=\"eventsData\" [options]=\"eventOptions\"></p-fullCalendar> -->\r\n                        <app-events></app-events>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 mb-2 chart-div\" style=\"height:380px\"> \r\n                    <div class=\"chart-title\">Our Latest Achievements</div>\r\n                    <div class=\"chart-body mt-2\">\r\n                        <p-carousel [value]=\"ourachivementsData\" [numVisible]=\"1\" [numScroll]=\"1\" [circular]=\"true\"\r\n                            [autoplayInterval]=\"3000\" [responsiveOptions]=\"responsiveOptions\">\r\n                            <ng-template let-achivement pTemplate=\"item\">\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-body\">\r\n                                        <img class=\"img-fluid achivement-image\" src=\"achivement.image\" \r\n                                        onerror=\"this.onerror=null;this.src='./assets/images/schoollogo.jpg'\"\r\n                                         alt=\"\">\r\n                                        <div class=\"text-center\"><b>{{achivement.title}}</b></div>\r\n                                    </div>\r\n                                </div>                              \r\n                            </ng-template>\r\n                        </p-carousel>                       \r\n                    </div>\r\n                    <div class=\"\">\r\n                        <a href=\"#\" class=\"view-more-link\" style=\"margin-top: -5px !important;\"> <i class=\"fa fa-angle-double-right\"></i> view more</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-8 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\" style=\"height:380px\">\r\n                    <div class=\"chart-title\">Our Top Students</div>\r\n                    <div class=\"chart-body mt-2\">\r\n                        <p-table [value]=\"ourTopStudents\">\r\n                            <ng-template pTemplate=\"header\">\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Class</th>\r\n                                    <th>Percentage</th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate=\"body\" let-student>\r\n                                <tr>\r\n                                    <td>{{student.name}}</td>\r\n                                    <td>{{student.class}}</td>\r\n                                    <td>{{student.percentage}}</td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-4 mb-2 chart-padding\">\r\n                <div class=\"col-md-12 chart-div\">\r\n                    <div class=\"chart-title\">Our Income</div>\r\n                    <div class=\"chart-body\">\r\n                        <p-chart type=\"line\" [data]=\"ourIncomedata\"></p-chart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4 mb-2 chart-div\" style=\"height:380px\">\r\n                <div class=\"chart-title\">Our Latest Announcements</div>\r\n                <div class=\"chart-body mt-2 p-10\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"col-md-12 announcement-div\" *ngFor=\"let announcement of announcementData\">\r\n                            <p class=\"mt-2\"><span class=\"btn-styles\">{{announcement.date}}</span></p>\r\n                            <p><b>{{announcement.description}}</b></p>\r\n                            <p>\r\n                                <span class=\"createdBy\">{{announcement.createyBy}}/</span>\r\n                                <span class=\"timeLapse\">{{announcement.timelapse}}</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mb-2\">\r\n                    <a href=\"#\" class=\"view-more-link\"> <i class=\"fa fa-angle-double-right\"></i> view more</a>\r\n                </div>\r\n            </div> -->\r\n            \r\n        \r\n            </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n  error:string;\r\n  constructor(private route:ActivatedRoute,private location: Location) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params =>\r\n      {\r\n        this.error = window.atob(params['message']);\r\n      })\r\n  }\r\n  backtoscreen(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"col-md-12 search-box\">\r\n    <div class=\"col-md-12 p-4\">\r\n      <div class=\"error-block\">\r\n        <i class=\"fa fa-exclamation-triangle\"></i>\r\n        <b>The application has encountered an error.</b>\r\n      </div>\r\n      <div class=\"error-info\">\r\n        <div *ngIf=\"error\" class=\"error-message-text\">\r\n          {{ error }}\r\n        </div>\r\n        <h5>If the error persists, please contact Technical Support.</h5>\r\n        <p><strong>Phone</strong>: 9640938361</p>\r\n        <p><strong>Email</strong>: tejaprasadbehara@gmail.com</p>\r\n        <p><strong>Hours</strong>: Monday-Friday, 10AM - 5PM IST</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 text-right\">\r\n        <button pButton type=\"button\" icon=\"pi pi-angle-left\" label=\"Back\" (click)=\"backtoscreen()\"\r\n        class=\"ui-button-secondary table-header-items\"></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Events } from 'src/app/cts/shared/models/achievements';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AchievementsService } from 'src/app/cts/shared/services/achievements.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-event',\r\n  templateUrl: './add-event.component.html',\r\n  styleUrls: ['./add-event.component.scss']\r\n})\r\nexport class AddEventComponent implements OnInit {\r\n  eventId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addEventForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  branchids: SelectItem[] = [];\r\n  categories: SelectItem[] = [];\r\n  registration: SelectItem[] = [];  \r\n  status: SelectItem[] = [];\r\n  querytype:number;\r\n\r\n\r\n  \r\n  constructor(private achievementService:AchievementsService,private dropdownService: DropdownService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute,private location: Location,private inputpattern:InputPatternService) {\r\n   \r\n    this.categories = [\r\n      { label: 'major', value: 'MJR' },\r\n      { label: 'minor', value: 'MNR' },\r\n      { label: 'medium', value: 'MDM' }\r\n    ];\r\n    this.registration = [\r\n      { label: 'yes', value: 'Y' },\r\n      { label: 'no', value: 'N' }\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n\r\n    var dropdowns = [\"branches\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.branchids = result.data.branches;\r\n        }\r\n      });\r\n   }\r\n\r\n  ngOnInit(): void {// On page load\r\n     //to read url parameters\r\n   this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n    this.eventId = Number(window.atob(params['id']));\r\n    this.formType = window.atob(params['type']);\r\n  });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Event\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Event\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addEventForm = this.fb.group({\r\n      'name': new FormControl('', { validators: [Validators.required]}),\r\n      'branchid': new FormControl('', { validators: [Validators.required] }),\r\n      'category': new FormControl(''),\r\n      'register': new FormControl('', { validators: [Validators.required] }),\r\n      'startdate': new FormControl('', { validators: [Validators.required] }),\r\n      'enddate': new FormControl(''),\r\n      'status': new FormControl('', { validators: [Validators.required] }),\r\n      'url': new FormControl(''),\r\n      'description': new FormControl('')\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditEventDetails();\r\n  }\r\n  bindEditEventDetails() {\r\n    let customObj = new Events();\r\n    customObj.id = Number(this.eventId.toString());\r\n    customObj.querytype = 0;\r\n    //Get Events API call\r\n    this.achievementService.getEvents(customObj)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addEventForm.setValue({\r\n            'name': this.editData.title,\r\n            'branchid': this.editData.branch_id,\r\n            'category': this.editData.category,\r\n            'register': this.editData.accept_registrations,            \r\n            'status': this.editData.status,\r\n            'url': this.editData.url,\r\n            'description': this.editData.description,\r\n            'startdate': new Date(this.editData.start),\r\n            'enddate': new Date(this.editData.end),\r\n          })\r\n        }\r\n      }); \r\n  }\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Event\";\r\n  }\r\n\r\n  addEventSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addEventForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Events();\r\n      customObj = this.addEventForm.value;\r\n      customObj.id = this.eventId;\r\n      customObj.querytype = this.querytype;\r\n      customObj.start=this.getServerSideDateFormat(this.addEventForm.value['startdate']);\r\n      customObj.end=this.getServerSideDateFormat(this.addEventForm.value['enddate']) == \"\" ? this.getServerSideDateFormat(this.addEventForm.value['startdate']) : this.getServerSideDateFormat(this.addEventForm.value['enddate']);\r\n\r\n      //AED Events API call\r\n      this.achievementService.AEDEvents(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {   \r\n            if (this.formType == \"create\") {\r\n            this.addEventForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"News title already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  getServerSideDateFormat(date): string {\r\n    if(date != null && date != \"\"){\r\n      return moment(date).format(Paginationutil.getServerSideDateFormat())\r\n    }else{\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addEventForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.Alphabet(event);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addEventForm\" class=\"col-md-12\" (ngSubmit)=\"addEventSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addEventForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addEventForm.controls['name'].valid && addEventForm.controls['name'].touched)|| \r\n                                (!addEventForm.controls['name'].valid && addEventForm.controls['name'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addEventForm.controls['name'].errors?.required)\">Enter \"Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addEventForm.controls['branchid'].valid && \r\n                            addEventForm.controls['branchid'].touched)|| \r\n                            (!addEventForm.controls['branchid'].valid && addEventForm.controls['branchid'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addEventForm.controls['branchid'].errors?.required)\">\r\n                                    Enter \"Branch Id\"\r\n                                </span>\r\n                            </div>\r\n                          \r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addEventForm.controls['register'].valid && addEventForm.controls['register'].touched)|| \r\n                    (!addEventForm.controls['register'].valid && addEventForm.controls['register'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addEventForm.controls['register'].errors?.required)\">Enter\r\n                                    \"Registration\"</span>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 error-div\"\r\n                            *ngIf=\"((!addEventForm.controls['startdate'].valid && addEventForm.controls['startdate'].touched)|| \r\n                (!addEventForm.controls['startdate'].valid && addEventForm.controls['startdate'].untouched && formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addEventForm.controls['startdate'].errors?.required)\">Enter\r\n                                \"Start Date\"</span>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"col-md-3 error-div\"\r\n                            *ngIf=\"((!addEventForm.controls['status'].valid && addEventForm.controls['status'].touched)|| \r\n                (!addEventForm.controls['status'].valid && addEventForm.controls['status'].untouched && formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addEventForm.controls['status'].errors?.required)\">Enter\r\n                                \"Status\"</span>\r\n                        </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Event Name\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                (keypress)=\"keyPressAlphabet($event)\" formControlName=\"name\" type=\"text\" placeholder=\" Event Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addEventForm.controls['name'].valid && addEventForm.controls['name'].touched) || \r\n                    (!addEventForm.controls['name'].valid && addEventForm.controls['name'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Branch Id</span><br>\r\n                <p-dropdown [options]=\"branchids\" filter=\"true\" formControlName=\"branchid\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Branch\" [ngClass]=\"{'error':((!addEventForm.controls['branchid'].valid &&\r\n                addEventForm.controls['branchid'].touched) || \r\n                (!addEventForm.controls['branchid'].valid && addEventForm.controls['branchid'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Category</span><br>\r\n                <p-dropdown [options]=\"categories\" filter=\"true\" formControlName=\"category\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select category\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Accept Registration</span><br>\r\n                <p-dropdown [options]=\"registration\" filter=\"true\" formControlName=\"register\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Registration\" [ngClass]=\"{'error':((!addEventForm.controls['register'].valid &&\r\n                addEventForm.controls['register'].touched) || \r\n                (!addEventForm.controls['register'].valid && addEventForm.controls['register'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Start Date</span><br>\r\n                <p-calendar placeholder=\"Start Date\" [disabled]=\"isDisabled\" formControlName=\"startdate\"\r\n                    [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    [ngClass]=\"{'error':((!addEventForm.controls['startdate'].valid && addEventForm.controls['startdate'].touched) || (!addEventForm.controls['startdate'].valid && addEventForm.controls['startdate'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>End Date</span><br>\r\n                <p-calendar placeholder=\"End Date\" [disabled]=\"isDisabled\" formControlName=\"enddate\"\r\n                    [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    >\r\n                </p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addEventForm.controls['status'].valid &&\r\n                    addEventForm.controls['status'].touched) || \r\n                (!addEventForm.controls['status'].valid && addEventForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Event URL\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"url\" type=\"text\" placeholder=\"Event URL\" size=\"30\" pInputText >\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n\r\n                <span>\r\n                    Description\r\n                </span><br>\r\n                <textarea rows=\"3\" cols=\"30\" maxlength=\"255\" placeholder=\"Descriptiom\" pInputTextarea\r\n                    formControlName=\"description\" autoResize=\"autoResize\" [disabled]=\"isDisabled\"></textarea>\r\n            </div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { FullCalendar } from 'primeng/fullcalendar/primeng-fullcalendar';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { Events } from 'src/app/cts/shared/models/achievements';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { takeUntil } from 'rxjs/internal/operators/takeUntil';\r\nimport { AchievementsService } from 'src/app/cts/shared/services/achievements.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.scss']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n  events: any[]=[];\r\n  options: any;\r\n  position: string;\r\n  display: boolean = false;\r\n  toBeDeletedId:any;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n\r\n  calendar: any;\r\n\r\n  nextListener: any;\r\n\r\n  prevListener: any;\r\n\r\n  date: Date = new Date();\r\n  @ViewChild('fullCalendar') fullCalendar: any;\r\n  constructor(private achievementService: AchievementsService,private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getEvents(\"Current\");    \r\n    this.options = {\r\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\r\n      header: {\r\n        left: 'prev',\r\n        center: '',\r\n        // right: 'dayGridMonth,dayGridWeek,timeGridDay'\r\n        right: 'next'\r\n      },\r\n      customButtons: {\r\n        prev: {\r\n          text: \"Prev\",\r\n          click: r => {\r\n            this.getEvents(\"Prev\");\r\n            //this works but displayAddAppointment within the component is inaccessible.\r\n            //I would like to display a modal dialog to add a new appointment from this.\r\n          }\r\n        },\r\n        next: {\r\n          text: \"Next\",\r\n          click: r => {\r\n            this.getEvents(\"Next\");\r\n            //this works but displayAddAppointment within the component is inaccessible.\r\n            //I would like to display a modal dialog to add a new appointment from this.\r\n          }\r\n        }\r\n      },\r\n      editable: true,\r\n      dateClick: (e) => {\r\n        alert(\"click event\");\r\n      }\r\n    }\r\n  }\r\n\r\n  getMonthFormat(date): string {\r\n    return moment(date).format(Paginationutil.getAngularMonthFormat())\r\n  }\r\n  getServerSideDateFormat(date): string {\r\n    return moment(date).format(Paginationutil.getServerSideDateFormat())\r\n  }\r\n\r\n  getDateFormat(date): string {\r\n    return moment(date).format(Paginationutil.getAngularDateFormat())\r\n  }\r\n\r\n\r\n  getEvents(from: string) {\r\n    if (from === \"Prev\") {\r\n      this.date = new Date(this.date);\r\n      this.date.setMonth(this.date.getMonth() - 1);\r\n    } else if (from === \"Next\") {\r\n      var nextMonth = new Date(this.date);\r\n      this.date.setMonth(this.date.getMonth() + 1);\r\n    }else{\r\n      this.date = new Date(this.date);\r\n      this.date.setMonth(this.date.getMonth());\r\n    }\r\n\r\n    var firstDay = new Date(this.date.getFullYear(), this.date.getMonth(), 1);\r\n    var lastDay = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0);\r\n\r\n    let customObj = new Events();\r\n    customObj.id = 0;\r\n    customObj.querytype = 1;\r\n    customObj.start = this.getServerSideDateFormat(firstDay);\r\n    customObj.end = this.getServerSideDateFormat(lastDay);\r\n\r\n    this.achievementService.getEvents(customObj)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n      if (result.success) {          \r\n          this.events=result.data;\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n    //Crud events\r\n    addEvent($event: any) {\r\n      let id = \"0\";\r\n      this.router.navigate(['add-event'], { relativeTo: this.route, queryParams: { type: window.btoa('create'), id: window.btoa(id) } });\r\n    }\r\n    editEvent(id): void {\r\n      this.router.navigate(['add-event'], { relativeTo: this.route, queryParams: { type: window.btoa('edit'), id: window.btoa(id) } });\r\n    }\r\n    viewEvent(id): void {\r\n      this.router.navigate(['add-event'], { relativeTo: this.route, queryParams: { type: window.btoa('view'), id: window.btoa(id) } });\r\n    }\r\n  deleteEvent(id): void {\r\n    this.position = \"top\";\r\n    this.display = true;\r\n    this.successMessage = \"\";\r\n    this.toBeDeletedId = id;\r\n  }\r\n\r\n  eventRevoke(): void {\r\n    this.display=false;\r\n    let customObj = new Events();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.achievementService.AEDEvents(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {       \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n         this.getEvents(\"current\");\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Events</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Event\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addEvent($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-8 col-sm-12 full-calendar\">\r\n                <h5>{{getMonthFormat(date)}}</h5>\r\n                <p-fullCalendar #fullCalendar [events]=\"events\" [options]=\"options\"></p-fullCalendar>\r\n            </div>\r\n            <div class=\"col-md-4 col-sm-12 eventsListCol\">\r\n                <div class=\"calendar-header\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <h5 class=\"m-0 text-center\">Events</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"eventCardDiv\">\r\n                    <div *ngFor=\"let event of events\">\r\n                        <div class=\"card eventCard\">\r\n                            <div class=\"card-body\">                                \r\n                                <div class=\"d-flex\">\r\n                                    <h6> {{event.title}} </h6>         \r\n                                    <label *ngIf=\"event.status == 'AC'\" class=\"active\">Active</label>     \r\n                                    <label *ngIf=\"event.status == 'NA'\" class=\"not-active\">Not Active</label>                                                       \r\n                                    <div class=\"event-container\">\r\n                                        <img class=\"img-fluid eventlogo\" src=\"./assets/images/schoollogo.jpg\">\r\n                                        <a download=\"new-filename\"><i class=\"pi pi-pencil\"></i></a>\r\n                                    </div>\r\n                                </div>\r\n                                <p>\r\n                                    <a><i class=\"pi pi-pencil green\" (click)=\"editEvent(event.id)\"></i></a>&nbsp;\r\n                                    <a><i class=\"pi pi-trash red\" (click)=\"deleteEvent(event.id)\"></i></a>\r\n                                    <span>{{getDateFormat(event.start)}}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-center\" *ngIf=\"!events.length\" style=\"margin-top: 200px;\">\r\n                        <p><img class=\"img-fluid\" src=\"../assets/images/no_data_found.png\"></p>\r\n                        <p>No Events Found</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Event?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"eventRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ExamsService } from 'src/app/cts/shared/services/exams.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { Exams, examclasswisesubjects } from 'src/app/cts/shared/models/exams';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport * as moment from 'moment';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-exam',\r\n  templateUrl: './add-exam.component.html',\r\n  styleUrls: ['./add-exam.component.scss']\r\n})\r\nexport class AddExamComponent implements OnInit {\r\n  examId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addExamForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  querytype:number;\r\n  status: SelectItem[] = [];\r\n  cols: any[];\r\n  examwisesubjects: any[] = [];\r\n  myobject: any[];\r\n  loading: boolean;\r\n  classes:any[]=[];\r\n  \r\n  constructor(private dropdownService: DropdownService,private ExamsService: ExamsService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute,private location: Location,private inputpattern:InputPatternService) { \r\n     //Get Dropdowns API call\r\n     var dropdowns = [\"classes\"];\r\n     this.dropdownService.getDropdowns(dropdowns)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {\r\n        this.classes = result.data.classes;\r\n       }      \r\n     });  \r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {// On page load\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.examId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Exam\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Exam\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n  \r\n  }\r\n\r\n  createForm() {\r\n    this.addExamForm = this.fb.group({\r\n      'title': new FormControl('', { validators: [Validators.required, Validators.pattern('^([A-Za-z0-9 _\\'-])*$')] }),\r\n      'year': new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] }),\r\n      'classes': new FormControl('', { validators: [Validators.required] }),\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditExamDetails();\r\n  }\r\n  bindEditExamDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.examId.toString();\r\n    //Get Branches API call\r\n    this.ExamsService.getExams(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.examwisesubjects = this.editData.subjects;\r\n          this.addExamForm.setValue({\r\n            'year': new Date(this.editData.year),\r\n            'title': this.editData.title,\r\n            'status': this.editData.status,\r\n            'classes':this.editData.classes.map((el) => Number(el.value))\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Exam\";\r\n  }\r\n\r\n  addExamSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addExamForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Exams();\r\n      customObj.id = this.examId;\r\n      customObj.querytype = this.querytype;\r\n      customObj.year = this.getFormat(this.addExamForm.value['year']);\r\n      customObj.title = this.addExamForm.value['title'];\r\n      customObj.status = this.addExamForm.value['status'];\r\n\r\n      let classWiseSubjectsArray=[];\r\n      for(let classObject of this.addExamForm.value['classes']){\r\n        for(let object of  this.examwisesubjects){\r\n          let customObj = new examclasswisesubjects();\r\n          customObj.classid = classObject;\r\n          customObj.subjectid =object.subjectid;\r\n          customObj.cutoff =object.cutoff;\r\n          customObj.total =object.total;\r\n          classWiseSubjectsArray.push(customObj);\r\n        }\r\n      }\r\n\r\n      customObj.subjects = classWiseSubjectsArray;\r\n      console.log(customObj)\r\n      \r\n      //AED Branches API call\r\n      this.ExamsService.AEDExams(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addExamForm.reset();\r\n            this.examwisesubjects = [];\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = AppConstants.Messages.errorMessage;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getServerSideYearFormat())\r\n   }\r\n\r\n  resetForm(): void {\r\n    this.addExamForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n  getArray(array: any[]) {\r\n      this.examwisesubjects = array;\r\n  }\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.AlphaNumeric(event);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addExamForm\" class=\"col-md-12\" (ngSubmit)=\"addExamSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addExamForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addExamForm.controls['title'].valid && addExamForm.controls['title'].touched)|| \r\n                                (!addExamForm.controls['title'].valid && addExamForm.controls['title'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addExamForm.controls['title'].errors?.required)\">Enter \"Title\"</span>\r\n                                <span *ngIf=\"(!addExamForm.controls['title'].errors?.required && \r\n                                    addExamForm.controls['title'].errors?.pattern)\">Enter\r\n                                    Valid \"Title\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addExamForm.controls['year'].valid && addExamForm.controls['year'].touched)|| \r\n                                (!addExamForm.controls['year'].valid && addExamForm.controls['year'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addExamForm.controls['year'].errors?.required)\">Enter \"Year\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addExamForm.controls['status'].valid && addExamForm.controls['status'].touched)|| \r\n                            (!addExamForm.controls['status'].valid && addExamForm.controls['status'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addExamForm.controls['status'].errors?.required)\">Enter \"Status\"</span>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addExamForm.controls['classes'].valid && addExamForm.controls['classes'].touched)|| (!addExamForm.controls['classes'].valid && addExamForm.controls['classes'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addExamForm.controls['classes'].errors?.required)\">Enter\r\n                                    \"Classes\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"examwisesubjects.length <= 0\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"examwisesubjects.length <= 0\">Define Exam Wise Subjects\r\n                                    </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-3\">\r\n                <span>\r\n                    Title\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\"     \r\n                    formControlName=\"title\" type=\"text\" placeholder=\"Title\" size=\"30\" pInputText [ngClass]=\"{'error':((!addExamForm.controls['title'].valid && addExamForm.controls['title'].touched) || \r\n                    (!addExamForm.controls['title'].valid && addExamForm.controls['title'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Year</span><br>\r\n                <p-calendar placeholder=\"Select Year\" view=\"month\" dateFormat=\"mm/yy\" [yearNavigator]=\"true\"\r\n                    yearRange=\"2000:2030\" [disabled]=\"isDisabled\" formControlName=\"year\"\r\n                    [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    [ngClass]=\"{'error':((!addExamForm.controls['year'].valid && addExamForm.controls['year'].touched) || (!addExamForm.controls['year'].valid && addExamForm.controls['year'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-calendar>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addExamForm.controls['status'].valid &&\r\n                    addExamForm.controls['status'].touched) || \r\n                (!addExamForm.controls['status'].valid && addExamForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Classes</span><br>\r\n                <p-multiSelect [options]=\"classes\" [disabled]=\"isDisabled\" formControlName=\"classes\" class=\"w-100\"\r\n                    [ngClass]=\"{'error':((!addExamForm.controls['classes'].valid && addExamForm.controls['classes'].touched) || (!addExamForm.controls['classes'].valid && addExamForm.controls['classes'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-multiSelect>\r\n            </div>\r\n            <div class=\"col-md-12 mt-3\">\r\n                <h6><b><i class=\"fa fa-info-circle\"></i> Define Exam wise Subjects</b></h6>\r\n            </div>\r\n\r\n            <br>\r\n            <div class=\"col-md-12 clienttable\">\r\n                <app-fees (arrayToEmit)=\"getArray($event)\" [isDisabled]=\"this.isDisabled\" [examwisesubjects]=\"examwisesubjects\"></app-fees>\r\n            </div>\r\n\r\n            <div class=\"row col-md-12 mt-3\">\r\n                <div class=\"col-md-4  required-block\">\r\n                    <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                        <span class=\"requirednote\">Required</span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-md-8 text-right\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                        (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                    <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                        (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                    <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Exams } from 'src/app/cts/shared/models/exams';\r\nimport { ExamsService } from 'src/app/cts/shared/services/exams.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { multiselectObject } from 'src/app/cts/shared/models/multi-select-object';\r\nimport { Table } from 'primeng/table';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-exams',\r\n  templateUrl: './exams.component.html',\r\n  styleUrls: ['./exams.component.scss'],\r\n  animations: [\r\n    trigger('rowExpansionTrigger', [\r\n      state('void', style({\r\n        transform: 'translateX(-10%)',\r\n        opacity: 0\r\n      })),\r\n      state('active', style({\r\n        transform: 'translateX(0)',\r\n        opacity: 1\r\n      })),\r\n      transition('* <=> *', animate('1500ms cubic-bezier(0.1, 0, 0.07, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class ExamsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Exams[];\r\n  exams: any[];\r\n  classes: any[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  display: boolean = false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  toBeDeletedId: any;\r\n  ewscols: any[];\r\n  examwisesubjects: any[];\r\n  users: any[]=[];\r\n  //pagination and api integration starts from here\r\n  numberOfPages: number = 10;\r\n  totalcount: number = 0;\r\n  noOfItems = 10;\r\n  advancedFilterValue: string = \"\";\r\n  currentPage: number = 1;\r\n  pageCount: number;\r\n  multiSelectFilterValue: string = \"\";\r\n  qualArray: Array<multiselectObject> = [];\r\n  expArray: Array<multiselectObject> = [];\r\n  expeArray: Array<multiselectObject> = [];\r\n  classArray: Array<multiselectObject> = [];\r\n  secArray: Array<multiselectObject> = [];\r\n  \r\n  classMultiFilterValue:string=\"\";\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private ExamsService: ExamsService,private dropdownService: DropdownService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\r\n    this.exams = [];  \r\n    var dropdowns = [\"classes\",\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {          \r\n          this.classes = result.data.classes;         \r\n          this.users = result.data.users;         \r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'title', header: 'Title' },\r\n      { field: 'year', header: 'Year' },\r\n      { field: 'classes', header: 'Classes' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.ewscols = [\r\n      { field: 'subject', header: 'Subject' },\r\n      { field: 'cutoff', header: 'Cut Off' },\r\n      { field: 'total', header: 'Total' }\r\n    ]\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  }\r\n\r\n\r\n\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n  //Api Integration Starts from here\r\n  onPageChange(event: LazyLoadEvent) {\r\n    let pageObject = Paginationutil.getGridFilters(event, this.advancedFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if (this.totalcount != 0) {\r\n      this.noOfItems = (currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }\r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n\r\n  }\r\n\r\n  loadGrids(pagingData) {\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.ExamsService.getExams(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.exams = result.data;\r\n          //pagination starts from here\r\n          this.totalcount = parseInt(result.total);\r\n\r\n          if (this.totalcount <= paging.pageSize) {\r\n            this.noOfItems = this.totalcount;\r\n          } else {\r\n            this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n          }\r\n\r\n          if (this.exams != null && this.exams != undefined) {\r\n            this.exams = this.exams.map(function (el, i) {\r\n              var o = Object.assign({}, el);\r\n              o.indexId = i;\r\n              return o;\r\n            });\r\n          }\r\n          let currentrows = (this.currentPage * this.numberOfPages);\r\n        }\r\n      });\r\n  }\r\n  //API Integration ends here\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id = \"0\";\r\n    this.router.navigate(['add-exam'], { relativeTo: this.route, queryParams: { type: window.btoa('create'), id: window.btoa(id) } });\r\n  }\r\n  editExam(id): void {\r\n    this.router.navigate(['add-exam'], { relativeTo: this.route, queryParams: { type: window.btoa('edit'), id: window.btoa(id) } });\r\n  }\r\n  viewExam(id): void {\r\n    this.router.navigate(['add-exam'], { relativeTo: this.route, queryParams: { type: window.btoa('view'), id: window.btoa(id) } });\r\n  }\r\n  deleteExam(id): void {\r\n    this.position = \"top\";\r\n    this.display = true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  //API Integration ends here\r\n  rowExpand(event, data) {\r\n    this.examwisesubjects=this.exams.filter(item => item.id == event.data.id)[0].subjects;   \r\n  }\r\n\r\n  examRevoke(): void {\r\n    this.display = false;\r\n    let customObj = new Exams();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n    //AED Branches API call\r\n    this.ExamsService.AEDExams(customObj)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.DataTable.reset();\r\n          this.successMessage = AppConstants.Messages.successMessage;\r\n        } else {\r\n          this.errorMessage = AppConstants.Messages.errorMessage;\r\n        }\r\n      });\r\n  }\r\n\r\n  //Filters code starts from here\r\n  //Create form method to constuct a form with validations\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'ttitle': new FormControl(''),\r\n      'tyear': new FormControl(''),\r\n      'tClasses': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),\r\n      'tcreatedby': new FormControl(''),\r\n    });\r\n  }\r\n\r\n  \r\n  multiselectSearch(event, from) {\r\n    //creating new object   \r\n    let customObj = new multiselectObject();\r\n    customObj.key = from;\r\n    customObj.value = event.itemValue;\r\n\r\n  \r\n\r\n     if (from === \"classid\") {\r\n      // if object is exists in array then remove object from else push object into array\r\n      var find = false;\r\n      for (let item of this.classArray) {\r\n        if (item.value === customObj.value && item.key === customObj.key) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        this.classArray.push(customObj);\r\n      } else {\r\n        this.classArray = this.classArray.filter(obj => obj.value !== customObj.value)\r\n      }\r\n\r\n      // to create fileter stirng for multiselect\r\n      this.classMultiFilterValue = this.classArray.map(object => {\r\n        let comparison = `'${object.value}'`;\r\n        return `(${object.key}=${comparison})`\r\n      }).join(' OR ');\r\n      \r\n    }\r\n\r\n\r\n    this.multiSelectFilterValue = (this.classMultiFilterValue== \"\" ? '(class_id > 0 ) AND ' : '('+this.classMultiFilterValue +')');\r\n    \r\n    //calling get method with multiselect filters\r\n    let totalFilter = Paginationutil.getGridFilters(this.DataTable, this.multiSelectFilterValue)\r\n    this.loadGrids(JSON.stringify(totalFilter));\r\n\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.multiSelectFilterValue=\"\";\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate): string {\r\n    return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n  }\r\n  getFilterFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Exams</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Exam\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\" >\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Title</span><br>\r\n                    <input id=\"title\" #tt class=\"w-100\" type=\"text\" formControlName=\"ttitle\" placeholder=\"Title\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(tt.value,'title',''): ''\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Year</span><br>\r\n                    <p-calendar placeholder=\"Select Year\" view=\"month\" dateFormat=\"mm/yy\" [yearNavigator]=\"true\"\r\n                        yearRange=\"2000:2030\" formControlName=\"tyear\" [inputStyle]=\"{'width':'100% !important'}\"\r\n                        [showIcon]=\"true\">\r\n                    </p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Classes</span><br>\r\n                    <p-multiSelect [options]=\"classes\" formControlName=\"tClasses\" placeholder=\"Select Classes\"\r\n                        (onChange)=\"multiselectSearch($event,'classid')\" class=\"w-100\">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Created by</span><br>\r\n                    <p-dropdown #cb [options]=\"users\" class=\"w-100\" formControlName=\"tcreatedby\" placeholder=\"Select User\" \r\n                    (onChange)=\"dt.filter(cb.value,'userid','')\"\r\n                        ></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"exams\" [lazy]=\"true\" rowExpandMode=\"single\" dataKey=\"id\"\r\n            [paginator]=\"true\" [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\"\r\n            [totalRecords]=\"totalcount\" [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\"\r\n            (onRowExpand)=\"rowExpand($event,dt)\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width:2.5em\"></th>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td>\r\n                        <a href=\"#\" [pRowToggler]=\"rowData\">\r\n                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                        </a>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewExam(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <div *ngIf=\"col.field == 'classes'\">\r\n                                    <span class=\"tableRowData\" *ngFor=\"let datavalue of rowData[col.field]\">\r\n                                        <li>\r\n                                            {{datavalue.label}}\r\n                                        </li>\r\n                                    </span>\r\n                                </div>\r\n                                <div *ngIf=\"col.field != 'classes'\">\r\n                                    <a class=\"bold\" (click)=\"viewExam(rowData.id)\">{{rowData[col.field]}}</a>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" (click)=\"editExam(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\" (click)=\"deleteExam(rowData.id)\"></i>\r\n                        \r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"rowexpansion\" let-rowData let-columns=\"columns\">\r\n                <tr class=\"expansion-div clienttable\">\r\n                    <td [attr.colspan]=\"columns.length + 2\">\r\n                        <div class=\"ui-fluid\" [@rowExpansionTrigger]=\"'active'\">\r\n                            <div class=\"row col-md-12\">\r\n                                <div class=\"col-md-3\"></div>\r\n                                <div class=\"col-md-6\">\r\n                            <p-table #es [columns]=\"ewscols\" [value]=\"examwisesubjects\" [lazy]=\"true\"\r\n                                rowExpandMode=\"single\" [paginator]=\"true\" [responsive]=\"true\" [rows]=\"numberOfPages\"\r\n                                [totalRecords]=\"totalcount\" [reorderableColumns]=\"true\" dataKey=\"classname\">\r\n                                <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowIndex=\"rowIndex\" let-rowData let-columns=\"columns\"\r\n                let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <a class=\"bold\">{{rowData[col.field]}}</a>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n        <div class=\"col-md-3\"></div>\r\n    </div>\r\n    </div>\r\n    </td>\r\n    </tr>\r\n    </ng-template>\r\n    </p-table>\r\n    <!-- pagination div starts from here -->\r\n    <div class=\"col-md-12\">\r\n        <div class=\"pagecount-dropdown\">\r\n            <span class=\"pagecounting\">Items per page</span>\r\n        </div>\r\n        <div class=\"pagecount\">\r\n            <div *ngIf=\"dt.totalRecords != 0\">\r\n                {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                {{dt.totalRecords}}\r\n                Items\r\n            </div>\r\n            <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n        </div>\r\n    </div>\r\n    <!-- pagination div ends here -->\r\n</div>\r\n\r\n<p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n    [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n    <p>Are you sure you want to delete Exam?</p>\r\n    <p-footer class=\"btm-buttons\">\r\n        <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"examRevoke()\"></button>\r\n        <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n    </p-footer>\r\n</p-dialog>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-fee',\r\n  templateUrl: './add-fee.component.html',\r\n  styleUrls: ['./add-fee.component.scss']\r\n})\r\nexport class AddFeeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-fee works!</p>\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { threadId } from 'worker_threads';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { examswisesubject } from 'src/app/cts/shared/models/exams';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-fees',\r\n  templateUrl: './fees.component.html',\r\n  styleUrls: ['./fees.component.scss']\r\n})\r\nexport class FeesComponent implements OnInit {\r\n  examForm: FormGroup;\r\n  // isDisabled: boolean = false;\r\n  isRequired: boolean = true;\r\n  formSubmitAttempt: boolean = false;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  pageTitle: string;\r\n  private ngUnsubscribe = new Subject();\r\n  subject: SelectItem[];\r\n  cols: any[];\r\n  // exams: any = [];\r\n  @Input() isDisabled: boolean;\r\n  @Input() examwisesubjects = [];\r\n  @Output() arrayToEmit = new EventEmitter<any[]>();\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder, private dropdownService: DropdownService,private inputpattern:InputPatternService) {\r\n    var dropdowns = [\"subjects\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.subject = result.data.subjects;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      { field: 'subjectid', header: 'Subject' },\r\n      { field: 'cutoff', header: 'Cutoff Marks' },\r\n      { field: 'total', header: 'Total Marks' }\r\n    ];\r\n\r\n    this.createForm()\r\n  }\r\n  createForm() {\r\n    this.examForm = this.fb.group({\r\n      'subjectid': new FormControl('', { validators: [Validators.required] }),\r\n      'cutoff': new FormControl('', { validators: [Validators.required] }),\r\n      'total': new FormControl('', { validators: [Validators.required] })\r\n    });\r\n  }\r\n\r\n \r\n  examSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    console.log(this.examwisesubjects)\r\n    if (this.examForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new examswisesubject();\r\n      customObj = this.examForm.value;\r\n      if(!this.examwisesubjects.some((item) => item.subjectid == customObj.subjectid))\r\n      {\r\n        this.examwisesubjects.push(customObj);\r\n        this.arrayToEmit.emit(this.examwisesubjects)\r\n        this.examForm.reset();\r\n      }\r\n      else\r\n      {\r\n        this.errorMessage=\"Already Subject Exist in the Table\";\r\n      }\r\n    }\r\n  }\r\n\r\n  removeRow($event: any) {\r\n    const index: number = this.examwisesubjects.indexOf($event);\r\n    if (index !== -1) {\r\n        this.examwisesubjects.splice(index, 1);\r\n    }  \r\n  }\r\n\r\n  _keyPress(event: any) {\r\n    this.inputpattern.Integers(event);\r\n  }\r\n\r\n  getSubjectName(id):string{  \r\n   return this.subject.filter(item => item.value == id)[0].label;   \r\n  }\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <span class=\"table-header-items\">{{pageTitle}}</span>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n    <div class=\"col-md-12\">\r\n        <i class=\"fa fa-exclamation-circle\"></i>\r\n        <b>{{errorMessage}}</b>\r\n    </div>\r\n</div>\r\n<div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n    <div class=\"col-md-12\">\r\n        <i class=\"fa fa-check\"></i>\r\n        <b>{{successMessage}}</b>\r\n    </div>\r\n</div>\r\n\r\n<form [formGroup]=\"examForm\" (ngSubmit)=\"examSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n            <span>\r\n                Subject\r\n            </span><br>\r\n            <p-dropdown [options]=\"subject\" filter=\"true\" formControlName=\"subjectid\" [disabled]=\"isDisabled\"\r\n            placeholder=\"Select subject\" [ngClass]=\"{'error':((!examForm.controls['subjectid'].valid &&\r\n            examForm.controls['subjectid'].touched) || \r\n        (!examForm.controls['subjectid'].valid && examForm.controls['subjectid'].untouched && formSubmitAttempt)),\r\n        'required':(isRequired == true )}\">\r\n        </p-dropdown>\r\n            <div class=\"col-md-12 error-block\" *ngIf=\"((!examForm.controls['subjectid'].valid && examForm.controls['subjectid'].touched)|| \r\n                    (!examForm.controls['subjectid'].valid && examForm.controls['subjectid'].untouched && \r\n                    formSubmitAttempt))\">\r\n                <div class=\"col-md-12 error-div\">\r\n                    <i class=\"fa fa-circle\"></i>\r\n                    <span *ngIf=\"(examForm.controls['subjectid'].errors?.required)\">Enter \"Subject\"</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-3\">\r\n            <span>Cutoff Marks</span><br>\r\n            <input id=\"input\" maxlength=\"3\" class=\"w-100\" (keypress)=_keyPress($event) [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                formControlName=\"cutoff\" type=\"text\" placeholder=\"Cutoff Marks\" size=\"30\" pInputText [ngClass]=\"{'error':((!examForm.controls['cutoff'].valid && examForm.controls['cutoff'].touched) || \r\n                (!examForm.controls['cutoff'].valid && examForm.controls['cutoff'].untouched && \r\n                formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                <div class=\"col-md-12 error-block\" *ngIf=\"((!examForm.controls['cutoff'].valid && examForm.controls['cutoff'].touched)|| \r\n                    (!examForm.controls['cutoff'].valid && examForm.controls['cutoff'].untouched && \r\n                    formSubmitAttempt))\">\r\n                <div class=\"col-md-12 error-div\">\r\n                    <i class=\"fa fa-circle\"></i>\r\n                    <span *ngIf=\"(examForm.controls['cutoff'].errors?.required)\">Enter \"Cutoff Marks\"</span>\r\n                </div>\r\n              \r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <span>Total Marks</span><br>\r\n            <input id=\"input\" maxlength=\"3\" class=\"w-100\" (keypress)=_keyPress($event) [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                formControlName=\"total\" type=\"text\" placeholder=\"Total Marks\" size=\"30\" pInputText [ngClass]=\"{'error':((!examForm.controls['total'].valid && examForm.controls['total'].touched) || \r\n                (!examForm.controls['total'].valid && examForm.controls['total'].untouched && \r\n                formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                <div class=\"col-md-12 error-block\" *ngIf=\"((!examForm.controls['total'].valid && examForm.controls['total'].touched)|| \r\n                    (!examForm.controls['total'].valid && examForm.controls['total'].untouched && \r\n                    formSubmitAttempt))\">\r\n                <div class=\"col-md-12 error-div\">\r\n                    <i class=\"fa fa-circle\"></i>\r\n                    <span *ngIf=\"(examForm.controls['total'].errors?.required)\">Enter \"Total Marks\"</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <div class=\"col-md-3\" style=\"margin-top: 27px;\">\r\n            <button pButton type=\"submit\" icon=\"pi pi-plus\" label=\"Add\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                class=\"ui-button-secondary table-header-items add\"></button>&nbsp;\r\n        </div>\r\n    </div>\r\n    <p-table #dt [columns]=\"cols\" [value]=\"examwisesubjects\"\r\n    [paginator]=\"true\" [rows]=\"10\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>     \r\n                    <th style=\"width:5em\"></th>             \r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">                        \r\n                        <div class=\"\" *ngIf=\"col.field == 'subjectid'\">\r\n                            <a class=\"bold\">{{getSubjectName(rowData.subjectid)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'subjectid'\"> \r\n                            {{rowData[col.field]}} \r\n                        </div>\r\n                    </td>     \r\n                    <td>\r\n                        <button class=\"btn btn-danger\" (click)=\"removeRow(rowData)\"><i class=\"fa fa-times\"></i> Remove</button>                       \r\n                    </td>               \r\n                </tr>\r\n            </ng-template>\r\n        </p-table>        \r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid p-1 footer-div\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\"></div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4 text-center li1\"><a href=\"#\"><b>Contact Us</b></a> </div>\r\n                <div class=\"col-md-4 text-center li2\"><a href=\"#\"><b>Privacy Policy</b></a></div>\r\n                <div class=\"col-md-4 text-center\"><a href=\"#\"><b>Terms of Use</b></a> </div>\r\n            </div>\r\n            <div class=\"copy_right text-center\">\r\n                <span>copyright © 2020 CTS Pvt. Ltd.,</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\"></div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-topbar></app-topbar>\r\n<app-menubar></app-menubar>\r\n<app-tiles></app-tiles>\r\n<router-outlet></router-outlet>\r\n\r\n<!-- <br>\r\n<br>\r\n<app-footer></app-footer> -->","import { Component, OnInit } from '@angular/core';\r\nimport { debug } from 'console';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\nimport { takeUntil } from 'rxjs/internal/operators/takeUntil';\r\nimport { Subject } from 'rxjs/internal/Subject';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-menubar',\r\n  templateUrl: './menubar.component.html',\r\n  styleUrls: ['./menubar.component.scss']\r\n})\r\nexport class MenubarComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  menuItems: MenuItem[]=[];\r\n\r\n  featuresArray:any[]=[];\r\n\r\n  schoolOptions:any[]=[];\r\n  teacherOptions:any[]=[];\r\n  studentOptions:any[]=[];\r\n  additionalOptions:any[]=[];\r\n  constructor(private dropdownService: DropdownService) {    \r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.dropdownService.getMenuOptions()\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n      if (result.success) {      \r\n        this.featuresArray = result.data;    \r\n        this.schoolOptions = this.featuresArray.filter(obj => obj.category_code == 'SCHL');\r\n        this.teacherOptions = this.featuresArray.filter(obj => obj.category_code == 'TCHR');\r\n        this.studentOptions = this.featuresArray.filter(obj => obj.category_code == 'STDT');\r\n        this.additionalOptions = this.featuresArray.filter(obj => obj.category_code == 'ADDL'); \r\n\r\n        this.menuItems = [\r\n          {\r\n            \"label\": \"School\",\r\n            \"url\": null,\r\n            \"items\": \r\n            [\r\n              [\r\n                {\r\n                  \"label\": \"School\",\r\n                  \"items\": this.schoolOptions\r\n                }\r\n              ]\r\n            ]\r\n          }\r\n          ,{\r\n            \"label\": \"Teachers\",\r\n            \"url\": null,\r\n            \"items\": \r\n            [\r\n              [\r\n                {\r\n                  \"label\": \"Teachers\",\r\n                  \"items\": this.teacherOptions\r\n                }\r\n              ]\r\n            ]\r\n          },{\r\n            \"label\": \"Students\",\r\n            \"url\": null,\r\n            \"items\": \r\n            [\r\n              [\r\n                {\r\n                  \"label\": \"Students\",\r\n                  \"items\": this.studentOptions\r\n                }\r\n              ]\r\n            ]\r\n          },{\r\n            \"label\": \"Additional\",\r\n            \"url\": null,\r\n            \"items\": \r\n            [\r\n              [\r\n                {\r\n                  \"label\": \"Additional\",\r\n                  \"items\": this.additionalOptions\r\n                }\r\n              ]\r\n            ]\r\n          },{\r\n            \"label\": \"About Us\",\r\n            \"url\": \"admin/aboutUs\"\r\n          }\r\n          \r\n        ]\r\n      }\r\n    });   \r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"admin/dashboard\">Dashboard</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#Menu\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>  \r\n    <div class=\"collapse navbar-collapse\" id=\"Menu\">     \r\n      <p-megaMenu  [model]=\"menuItems\"></p-megaMenu>\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-my-profile',\r\n  templateUrl: './my-profile.component.html',\r\n  styleUrls: ['./my-profile.component.scss']\r\n})\r\nexport class MyProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>my-profile works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { NewsService } from 'src/app/cts/shared/services/news.service';\r\nimport { News } from 'src/app/cts/shared/models/news';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-news',\r\n  templateUrl: './add-news.component.html',\r\n  styleUrls: ['./add-news.component.scss']\r\n})\r\nexport class AddNewsComponent implements OnInit {\r\n  newsId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addNewsForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  branchids: SelectItem[] = [];\r\n  status: SelectItem[] = [];\r\n  querytype:number;\r\n\r\n\r\n\r\n  constructor(private NewsService: NewsService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n    this.branchids = [\r\n      { label: 'skota', value: '1' },\r\n      { label: 'boddam', value: '2' }\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   //to read url parameters\r\n   this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n    this.newsId = Number(window.atob(params['id']));\r\n    this.formType = window.atob(params['type']);\r\n  });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add News\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit News\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addNewsForm = this.fb.group({\r\n      'title': new FormControl('', { validators: [Validators.required] }),\r\n      'branchid': new FormControl('', { validators: [Validators.required] }),\r\n      'date': new FormControl('', { validators: [Validators.required] }),\r\n      'description': new FormControl(''),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditNewsDetails();\r\n  }\r\n  bindEditNewsDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.newsId.toString();\r\n    //Get Branches API call\r\n    this.NewsService.getNews(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addNewsForm.setValue({\r\n            'title': this.editData.title,\r\n            'date': new Date(this.editData.date),\r\n            'description': this.editData.description,\r\n            'branchid': this.editData.branch,\r\n            'status': this.editData.status\r\n          })\r\n        }\r\n      }); \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit News\";\r\n  }\r\n\r\n  addNewsSubmit(): void {\r\n    // this.errorMessage = \"\";\r\n    // this.successMessage = \"\";\r\n    // this.formSubmitAttempt = true;\r\n    // if (this.addNewsForm.valid) {\r\n    //   this.formSubmitAttempt = false;\r\n    //   console.log(this.addNewsForm.value);\r\n    //   this.addNewsForm.reset();\r\n    //   this.successMessage = \"Your changes have been successfully saved\";\r\n    // }\r\n    \r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addNewsForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new News();\r\n      customObj = this.addNewsForm.value;\r\n      customObj.id = this.newsId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.NewsService.AEDNews(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addNewsForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"News title already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addNewsForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n  \r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.AlphaNumeric(event);\r\n  }\r\n\r\n} \r\n\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addNewsForm\" class=\"col-md-12\" (ngSubmit)=\"addNewsSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addNewsForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addNewsForm.controls['title'].valid && addNewsForm.controls['title'].touched)|| \r\n                                (!addNewsForm.controls['title'].valid && addNewsForm.controls['title'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addNewsForm.controls['title'].errors?.required)\">Enter \"News Title\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addNewsForm.controls['branchid'].valid && \r\n                            addNewsForm.controls['branchid'].touched)|| \r\n                            (!addNewsForm.controls['branchid'].valid && addNewsForm.controls['branchid'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addNewsForm.controls['branchid'].errors?.required)\">\r\n                                    Enter \"Branch Id\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addNewsForm.controls['date'].valid && addNewsForm.controls['date'].touched)|| \r\n                            (!addNewsForm.controls['date'].valid && addNewsForm.controls['date'].untouched && \r\n                            formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addNewsForm.controls['date'].errors?.required)\">Enter\r\n                                \"Date\"</span>\r\n                        </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addNewsForm.controls['description'].valid && addNewsForm.controls['description'].touched)|| \r\n                                (!addNewsForm.controls['description'].valid && addNewsForm.controls['description'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addNewsForm.controls['description'].errors?.required)\">Enter\r\n                                    \"Description\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addNewsForm.controls['status'].valid && addNewsForm.controls['status'].touched)|| \r\n                                (!addNewsForm.controls['status'].valid && addNewsForm.controls['status'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addNewsForm.controls['status'].errors?.required)\">Enter\r\n                                    \"Status\"</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    News Title\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"title\" type=\"text\" placeholder=\"News Title\" size=\"30\" pInputText [ngClass]=\"{'error':((!addNewsForm.controls['title'].valid && addNewsForm.controls['title'].touched) || \r\n                    (!addNewsForm.controls['title'].valid && addNewsForm.controls['title'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Branch Id</span><br>\r\n                <p-dropdown [options]=\"branchids\" filter=\"true\" formControlName=\"branchid\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Branch\" [ngClass]=\"{'error':((!addNewsForm.controls['branchid'].valid &&\r\n                addNewsForm.controls['branchid'].touched) || \r\n                (!addNewsForm.controls['branchid'].valid && addNewsForm.controls['branchid'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Date</span><br>\r\n                <p-calendar placeholder=\"Select Date\" [disabled]=\"isDisabled\" formControlName=\"date\"\r\n                    [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    [ngClass]=\"{'error':((!addNewsForm.controls['date'].valid && addNewsForm.controls['date'].touched) || (!addNewsForm.controls['date'].valid && addNewsForm.controls['date'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addNewsForm.controls['status'].valid &&\r\n                    addNewsForm.controls['status'].touched) || \r\n                (!addNewsForm.controls['status'].valid && addNewsForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n\r\n                <span>\r\n                    Description\r\n                </span><br>\r\n                <textarea rows=\"3\" cols=\"30\" maxlength=\"500\" placeholder=\"Description\" pInputTextarea\r\n                    formControlName=\"description\" autoResize=\"autoResize\" [disabled]=\"isDisabled\" ></textarea>\r\n            </div>           \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { News } from 'src/app/cts/shared/models/news';\r\nimport { NewsService } from 'src/app/cts/shared/services/news.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { Table } from 'primeng/table';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: News[];\r\n  news: News[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  status: SelectItem[] = [];\r\n  users: any[]=[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  display: boolean = false;\r\n  position: string;\r\n  branches: SelectItem[] = [];\r\n  toBeDeletedId:any;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  //to create Teacher From \r\n  filtersForm: FormGroup;\r\n  //pagination and api integration starts from here\r\n  numberOfPages: number = 10;\r\n  totalcount: number = 0;\r\n  noOfItems = 10;\r\n  advancedFilterValue: string = \"\";\r\n  currentPage: number = 1;\r\n  pageCount: number;\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n\r\n  constructor(private dropdownService: DropdownService,private NewsService: NewsService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\r\n    this.news = [];   \r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"users\",\"branches\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n          this.branches = result.data.branches;\r\n        }\r\n      });\r\n   \r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'title', header: 'Title' },\r\n      { field: 'date', header: 'Date' },\r\n      { field: 'description', header: 'Description' },\r\n      { field: 'branch', header: 'Branch' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  }\r\n\r\n\r\n\r\n  toggleNews($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n  //Api Integration Starts from here\r\n  onPageChange(event: LazyLoadEvent) {\r\n    let pageObject = Paginationutil.getGridFilters(event, this.advancedFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if (this.totalcount != 0) {\r\n      this.noOfItems = (currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }\r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n\r\n  }\r\n\r\n  loadGrids(pagingData) {\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.NewsService.getNews(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.news = result.data;\r\n          //pagination starts from here\r\n          this.totalcount = parseInt(result.total);\r\n\r\n          if (this.totalcount <= paging.pageSize) {\r\n            this.noOfItems = this.totalcount;\r\n          } else {\r\n            this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n          }\r\n\r\n          if (this.news != null && this.news != undefined) {\r\n            this.news = this.news.map(function (el, i) {\r\n              var o = Object.assign({}, el);\r\n              o.indexId = i;\r\n              return o;\r\n            });\r\n          }\r\n          let currentrows = (this.currentPage * this.numberOfPages);\r\n        }\r\n      });\r\n  }\r\n  //API Integration ends here\r\n\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id = \"0\";\r\n    this.router.navigate(['add-news'], { relativeTo: this.route, queryParams: { type: window.btoa('create'), id: window.btoa(id) } });\r\n  }\r\n  editNews(id): void {\r\n    this.router.navigate(['add-news'], { relativeTo: this.route, queryParams: { type: window.btoa('edit'), id: window.btoa(id) } });\r\n  }\r\n  viewNews(id): void {\r\n    this.router.navigate(['add-news'], { relativeTo: this.route, queryParams: { type: window.btoa('view'), id: window.btoa(id) } });\r\n  }\r\n  deleteNews(id): void {\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  newsRevoke(): void {\r\n    this.display=false;\r\n    let customObj = new News();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.NewsService.AEDNews(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {   \r\n        this.DataTable.reset();    \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n  //Filters code starts from here\r\n  //Create form method to constuct a form with validations\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'ttitle': new FormControl(''),\r\n      'tbranchid': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),    \r\n      'tusertype': new FormControl(''),     \r\n      'tstatus': new FormControl('') \r\n    });\r\n  }\r\n\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n//to get date format\r\ngetFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n }\r\n checkPermissions(permissionValue){\r\n  return  AuthorizationGuard.checkPermission(permissionValue);\r\n }\r\n\r\n getFilterFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n }\r\n}\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">News</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleNews($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"News\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\" *ngIf=\"checkPermissions('ADD')\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Title</span><br>\r\n                    <input id=\"title\" #tt class=\"w-100\" type=\"text\" formControlName=\"ttitle\" placeholder=\"Name\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(tt.value,'title',''): ''\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Branch</span><br>\r\n                    <p-dropdown #bn [options]=\"branches\" formControlName=\"tbranchid\" class=\"w-100\"\r\n                    (onChange)=\"dt.filter(bn.value,'branch_id','')\"\r\n                        placeholder=\"Select Branch Id\"></p-dropdown>\r\n                </div>                \r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <span>Created by</span><br>\r\n                  <p-dropdown #ut [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\"\r\n                  (onChange)=\"dt.filter(ut.value,'userid','')\" \r\n                      ></p-dropdown>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <span>Status</span><br>\r\n                <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n                (onChange)=\"dt.filter(st.value,'status','')\" \r\n                    ></p-dropdown>\r\n            </div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"news\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewNews(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'&& col.field != 'date'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewNews(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field == 'date'\">\r\n                            <a class=\"bold\" (click)=\"viewNews(rowData.id)\">{{getFormat(rowData.date)}}</a>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editNews(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\" *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteNews(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete News?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"newsRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { ParentsService } from 'src/app/cts/shared/services/parents.service';\r\nimport { Parents } from 'src/app/cts/shared/models/parents';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-parent',\r\n  templateUrl: './add-parent.component.html',\r\n  styleUrls: ['./add-parent.component.scss']\r\n})\r\nexport class AddParentComponent implements OnInit {\r\n  [x: string]: any;\r\n  parentId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addParentForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  gender: SelectItem[] = [];\r\n  status: SelectItem[] = [];\r\n  querytype:number;\r\n\r\n\r\n\r\n  constructor(private ParentsService: ParentsService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n    this.gender = [\r\n      { label: 'Male', value: 'M' },\r\n      { label: 'Female', value: 'F' }     \r\n\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.parentId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Parent\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Parent\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addParentForm = this.fb.group({\r\n      'fname': new FormControl('', { validators: [Validators.required] }),\r\n      'lname': new FormControl('', { validators: [Validators.required] }),\r\n      'mobile': new FormControl('', { validators: [Validators.required, Validators.pattern('[0-9]\\\\d{9}')] }),      'gender': new FormControl('',{ validators: [Validators.required] }),\r\n      'email': new FormControl('', { validators: [Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditParentDetails();\r\n  }\r\n  bindEditParentDetails() {\r\n\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.parentId.toString();\r\n    //Get Classes API call\r\n    this.ParentsService.getParents(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addParentForm.setValue({\r\n            'fname': this.editData.fname,\r\n            'lname': this.editData.lname,\r\n            'mobile': this.editData.mobile,\r\n            'gender': this.editData.gender,\r\n            'email': this.editData.email,\r\n            'status': this.editData.status,\r\n\r\n\r\n            \r\n          })\r\n        }\r\n      });\r\n      \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Parent\";\r\n  }\r\n\r\n  addParentSubmit(): void {\r\n    // this.errorMessage = \"\";\r\n    // this.successMessage = \"\";\r\n    // this.formSubmitAttempt = true;\r\n    // if (this.addParentForm.valid) {\r\n    //   this.formSubmitAttempt = false;\r\n    //   console.log(this.addParentForm.value);\r\n    //   this.addParentForm.reset();\r\n    //   this.successMessage = \"Your changes have been successfully saved\";\r\n    // }\r\n\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addParentForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Parents();\r\n      customObj = this.addParentForm.value;\r\n      customObj.id = this.parentId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.ParentsService.AEDParents(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addParentForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Parent already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addParentForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.Alphabet(event);\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addParentForm\" class=\"col-md-12\" (ngSubmit)=\"addParentSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addParentForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addParentForm.controls['fname'].valid && addParentForm.controls['fname'].touched)|| \r\n                                (!addParentForm.controls['fname'].valid && addParentForm.controls['fname'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addParentForm.controls['fname'].errors?.required)\">Enter \"First\r\n                                    Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addParentForm.controls['lname'].valid && \r\n                            addParentForm.controls['lname'].touched)|| \r\n                            (!addParentForm.controls['lname'].valid && addParentForm.controls['lname'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addParentForm.controls['lname'].errors?.required)\">\r\n                                    Enter \"Last Name\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addParentForm.controls['mobile'].valid && addParentForm.controls['mobile'].touched)|| \r\n                            (!addParentForm.controls['mobile'].valid && addParentForm.controls['mobile'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addParentForm.controls['mobile'].errors?.required)\">Enter \"Mobile\r\n                                    Number\"</span>\r\n                                <span *ngIf=\"(addParentForm.controls['mobile'].errors?.pattern)\">Enter \"Valid\r\n                                    Number\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addParentForm.controls['gender'].valid && addParentForm.controls['gender'].touched)|| \r\n                        (!addParentForm.controls['gender'].valid && addParentForm.controls['gender'].untouched && \r\n                        formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addParentForm.controls['gender'].errors?.required)\">Enter \"Gender\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addParentForm.controls['email'].valid && addParentForm.controls['email'].touched)|| \r\n                    (!addParentForm.controls['email'].valid && addParentForm.controls['email'].untouched && \r\n                    formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addParentForm.controls['email'].errors?.required)\">Enter \"Email\"\r\n                                </span>\r\n                                <span *ngIf=\"(addParentForm.controls['email'].errors?.required)\">Enter \" Valid Email\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addParentForm.controls['status'].valid && addParentForm.controls['status'].touched)|| \r\n                    (!addParentForm.controls['status'].valid && addParentForm.controls['status'].untouched && \r\n                    formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addParentForm.controls['status'].errors?.required)\">Enter \"Status\"\r\n                                </span>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    First Name\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"255\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"fname\" type=\"text\" placeholder=\"First Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addParentForm.controls['fname'].valid && addParentForm.controls['fname'].touched) || \r\n                    (!addParentForm.controls['fname'].valid && addParentForm.controls['fname'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Last Name\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"255\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"lname\" type=\"text\" placeholder=\"Last Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addParentForm.controls['lname'].valid && addParentForm.controls['lname'].touched) || \r\n                    (!addParentForm.controls['lname'].valid && addParentForm.controls['lname'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Mobile Number\r\n                </span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"10\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"mobile\" type=\"text\"\r\n                    placeholder=\"Enter Mobile\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addParentForm.controls['mobile'].valid && addParentForm.controls['mobile'].touched) || (!addParentForm.controls['mobile'].valid && addParentForm.controls['mobile'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Gender</span><br>\r\n                <p-dropdown [options]=\"gender\" filter=\"true\" formControlName=\"gender\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Gender\"\r\n                    [ngClass]=\"{'error':((!addParentForm.controls['gender'].valid && addParentForm.controls['gender'].touched) || (!addParentForm\r\n                    .controls['gender'].valid && addParentForm.controls['gender'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Email\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"255\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"email\" type=\"text\" placeholder=\"Email\" size=\"30\" pInputText [ngClass]=\"{'error':((!addParentForm.controls['email'].valid && addParentForm.controls['email'].touched) || \r\n                    (!addParentForm.controls['email'].valid && addParentForm.controls['email'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addParentForm.controls['status'].valid &&\r\n                    addParentForm.controls['status'].touched) || \r\n                (!addParentForm.controls['status'].valid && addParentForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>           \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Parents } from 'src/app/cts/shared/models/parents';\r\nimport { ParentsService } from 'src/app/cts/shared/services/parents.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'app-parents',\r\n  templateUrl: './parents.component.html',\r\n  styleUrls: ['./parents.component.scss']\r\n})\r\nexport class ParentsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Parents[];\r\n  parents: Parents[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  display:boolean=false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  sections: SelectItem[] = [];\r\n  toBeDeletedId:any;\r\n  errorMessage:string=\"\";\r\n  successMessage:string=\"\";\r\n  status: SelectItem[] = [];\r\n  users: any[]=[];\r\n  gender: any[]=[];\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n\r\n  constructor(private dropdownService: DropdownService,private ParentsService: ParentsService, private router: Router, private route: ActivatedRoute,private fb: FormBuilder) {\r\n    this.parents = [];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    this.gender = [\r\n      { label: 'Male', value: 'M' },\r\n      { label: 'Female', value: 'F' }\r\n    ];\r\n    var dropdowns = [\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'fname', header: 'FirstName' },\r\n      { field: 'lname', header: 'LastName' },\r\n      { field: 'mobile', header: 'Mobile' },\r\n      { field: 'gender', header: 'Gender' },\r\n      { field: 'email', header: 'Email' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  } \r\n\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n//Api Integration Starts from here\r\nonPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  this.ParentsService.getParents(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.parents= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.parents != null && this.parents != undefined){\r\n      this.parents = this.parents.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n\r\n\r\n\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id=\"0\";\r\n    this.router.navigate(['add-parent'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n  }\r\n  editParent(id):void{\r\n    this.router.navigate(['add-parent'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n  }\r\n  viewParent(id):void{\r\n    this.router.navigate(['add-parent'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n  }\r\n  deleteParent(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  parentRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Parents();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.ParentsService.AEDParents(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {     \r\n        this.DataTable.reset();  \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n //Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n   createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tfname': new FormControl(''),\r\n      'tlname': new FormControl(''),\r\n      'tmobile': new FormControl(''),\r\n      'tgender': new FormControl(''),\r\n      'temail': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),    \r\n      'tusertype': new FormControl(''),     \r\n      'tstatus': new FormControl('') \r\n    });\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  } \r\n//to get date format\r\ngetFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n }\r\n\r\n checkPermissions(permissionValue){\r\n  return  AuthorizationGuard.checkPermission(permissionValue);\r\n }\r\n getFilterFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n }\r\n}\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Parents</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Parent\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\" *ngIf=\"checkPermissions('ADD')\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>FirstName</span><br>\r\n                    <input id=\"name\" #fnm class=\"w-100\" type=\"text\" formControlName=\"tfname\" placeholder=\"FirstName\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(fnm.value,'fname',''): ''\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>LastName</span><br>\r\n                    <input id=\"name\" #lnm class=\"w-100\" type=\"text\" formControlName=\"tlname\" placeholder=\"LastName\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(lnm.value,'lname',''): ''\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Mobile</span><br>\r\n                    <input id=\"name\" #mb class=\"w-100\" type=\"text\" formControlName=\"tmobile\" placeholder=\"Mobile\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(mb.value,'mobile',''): ''\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Gender</span><br>\r\n                    <p-dropdown #ge [options]=\"gender\" formControlName=\"tgender\" class=\"w-100\"\r\n                        (onChange)=\"dt.filter(ge.value,'gender','')\" placeholder=\"Select Gender\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Email</span><br>\r\n                    <input id=\"name\" #em class=\"w-100\" type=\"text\" formControlName=\"temail\" placeholder=\"Email\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(em.value,'email',''): ''\" pInputText>\r\n                </div>\r\n                \r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>User</span><br>\r\n                    <p-dropdown #ut [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n                    (onChange)=\"dt.filter(ut.value,'userid','')\"\r\n                        ></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <span>Status</span><br>\r\n                  <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n                  (onChange)=\"dt.filter(st.value,'status','')\"\r\n                      ></p-dropdown>\r\n              </div>\r\n                <div class=\"col-md-12 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"parents\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewParent(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'&& col.field != 'gender'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewParent(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>                                                        \r\n                        </div>\r\n                        <div class=\"class\" *ngIf=\"col.field == 'gender'\">\r\n                            <div class=\"\" *ngIf=\"rowData.gender == 'M'\">\r\n                                Male\r\n                            </div>\r\n                            <div class=\"\" *ngIf=\"rowData.gender == 'F'\">\r\n                                Female\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                            <i class=\"pi pi-pencil\"  *ngIf=\"checkPermissions('EDIT')\" (click)=\"editParent(rowData.id)\"></i>&nbsp;\r\n                            <i class=\"pi pi-trash\" *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteParent(rowData.id)\"></i>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Class?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"parentRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { Qualifications } from 'src/app/cts/shared/models/qualifications';\r\nimport { QualificationsService } from 'src/app/cts/shared/services/qualifications.service';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-addqualifications',\r\n  templateUrl: './addqualifications.component.html',\r\n  styleUrls: ['./addqualifications.component.scss']\r\n})\r\nexport class AddQualificationComponent implements OnInit {\r\n  qualificationId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addQualificationForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  querytype:number;\r\n  status: SelectItem[] = [];\r\n\r\n\r\n  \r\n  constructor(private QualificationsService: QualificationsService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute,private location: Location,private inputpattern:InputPatternService) {\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n   }\r\n\r\n  ngOnInit(): void {// On page load\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.qualificationId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Qualification\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Qualification\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addQualificationForm = this.fb.group({\r\n      'code': new FormControl('', { validators: [Validators.required] }),\r\n      'title': new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditQualificationDetails();\r\n  }\r\n  bindEditQualificationDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.qualificationId.toString();\r\n    //Get Classes API call\r\n    this.QualificationsService.getQualifications(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addQualificationForm.setValue({\r\n            'code': this.editData.code,\r\n            'title': this.editData.title,\r\n            'status': this.editData.status,\r\n\r\n\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Qualification\";\r\n  }\r\n\r\n  addQualificationSubmit(): void {\r\n    // this.errorMessage = \"\";\r\n    // this.successMessage = \"\";\r\n    // this.formSubmitAttempt = true;\r\n    // if (this.addQualificationForm.valid) {\r\n    //   this.formSubmitAttempt = false;\r\n    //   console.log(this.addQualificationForm.value);\r\n    //   this.addQualificationForm.reset();\r\n    //   this.successMessage = \"Your changes have been successfully saved\";\r\n    // }\r\n\r\n    \r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addQualificationForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Qualifications();\r\n      customObj = this.addQualificationForm.value;\r\n      customObj.id = this.qualificationId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.QualificationsService.AEDQualifications(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addQualificationForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Qualification code or title already exists\";\r\n          }\r\n        },\r\n          error =>{  \r\n            this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n          });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addQualificationForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.Alphabet(event);\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addQualificationForm\" class=\"col-md-12\" (ngSubmit)=\"addQualificationSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addQualificationForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addQualificationForm.controls['code'].valid && addQualificationForm.controls['code'].touched)|| \r\n                                (!addQualificationForm.controls['code'].valid && addQualificationForm.controls['code'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addQualificationForm.controls['code'].errors?.required)\">Enter\r\n                                    \"Code\"</span>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addQualificationForm.controls['title'].valid && addQualificationForm.controls['title'].touched)|| \r\n                            (!addQualificationForm.controls['title'].valid && addQualificationForm.controls['title'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addQualificationForm.controls['title'].errors?.required)\">Enter\r\n                                    \"Title\"</span>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addQualificationForm.controls['status'].valid && addQualificationForm.controls['status'].touched)|| \r\n                            (!addQualificationForm.controls['status'].valid && addQualificationForm.controls['status'].untouched && \r\n                            formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addQualificationForm.controls['status'].errors?.required)\">Enter\r\n                                    \"Status\"</span>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Code\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"4\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"code\" type=\"text\" placeholder=\"Code\" size=\"30\" pInputText [ngClass]=\"{'error':((!addQualificationForm.controls['code'].valid && addQualificationForm.controls['code'].touched) || \r\n                    (!addQualificationForm.controls['code'].valid && addQualificationForm.controls['code'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Title\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"title\" type=\"text\" placeholder=\"Title\" size=\"30\" pInputText [ngClass]=\"{'error':((!addQualificationForm.controls['title'].valid && addQualificationForm.controls['title'].touched) || \r\n                    (!addQualificationForm.controls['title'].valid && addQualificationForm.controls['title'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addQualificationForm.controls['status'].valid &&\r\n                    addQualificationForm.controls['status'].touched) || \r\n                (!addQualificationForm.controls['status'].valid && addQualificationForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>           \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Qualifications } from 'src/app/cts/shared/models/qualifications';\r\nimport { QualificationsService } from 'src/app/cts/shared/services/qualifications.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n\r\n@Component({\r\n  selector: 'app-qualifications',\r\n  templateUrl: './qualifications.component.html',\r\n  styleUrls: ['./qualifications.component.scss']\r\n})\r\nexport class QualificationsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Qualifications[];\r\n  qualifications: Qualifications[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  errorMessage:string=\"\";\r\n  successMessage:string=\"\";\r\n  display:boolean=false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  toBeDeletedId:any;\r\n  status: SelectItem[] = [];\r\n  users: any[]=[];\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private dropdownService: DropdownService,private QualificationsService: QualificationsService, private router: Router,private route:ActivatedRoute,private fb: FormBuilder) {\r\n    this.qualifications = [];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n\r\n    this.cols = [\r\n      { field: 'code', header: 'Code' },\r\n      { field: 'title', header: 'Title' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  }\r\n\r\n \r\n \r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n\r\n  //Api Integration Starts from here\r\n  onPageChange(event:LazyLoadEvent){\r\n    let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if(this.totalcount != 0){\r\n      this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }  \r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n\r\n  }\r\n\r\n  loadGrids(pagingData){\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.QualificationsService.getQualifications(pagingData)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n      this.qualifications= result.data;\r\n      //pagination starts from here\r\n      this.totalcount = parseInt(result.total);    \r\n\r\n      if(this.totalcount <= paging.pageSize){\r\n        this.noOfItems = this.totalcount;\r\n      }else{\r\n        this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n      }\r\n\r\n      if(this.qualifications != null && this.qualifications != undefined){\r\n        this.qualifications = this.qualifications.map(function(el,i){\r\n          var o = Object.assign({},el);\r\n          o.indexId = i;\r\n          return o;\r\n        });\r\n      }\r\n      let currentrows = (this.currentPage * this.numberOfPages);\r\n    }\r\n    });\r\n  }\r\n  //API Integration ends here\r\n\r\n //Crud events\r\n addNew($event: any) {\r\n  let id=\"0\";\r\n  this.router.navigate(['add-qualification'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n}\r\neditQualification(id):void{\r\n  this.router.navigate(['add-qualification'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n}\r\nviewQualification(id):void{\r\n  this.router.navigate(['add-qualification'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n}\r\n  deleteQualification(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  qualificationRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Qualifications();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.QualificationsService.AEDQualifications(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {   \r\n        this.DataTable.reset();    \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n\r\n  //Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'ttitle': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),    \r\n      'tusertype': new FormControl(''),     \r\n      'tstatus': new FormControl('') \r\n    });\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n   }\r\n\r\n   checkPermissions(permissionValue){\r\n    return  AuthorizationGuard.checkPermission(permissionValue);\r\n   }\r\n\r\n   getFilterFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Qualifications</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Qualification\"\r\n                    class=\"ui-button-secondary table-header-items\"  *ngIf=\"checkPermissions('ADD')\" (click)=\"addNew($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Title</span><br>\r\n                    <input id=\"title\" #tt class=\"w-100\" type=\"text\" formControlName=\"ttitle\" placeholder=\"Title\" size=\"30\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(tt.value,'title',''): ''\"\r\n                        pInputText>\r\n                </div>\r\n                \r\n                <div class=\"col-md-3\">\r\n                    <span>Created Date</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>User</span><br>\r\n                    <p-dropdown #ut [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n                    (onChange)=\"dt.filter(ut.value,'userid','')\"\r\n                        ></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <span>Status</span><br>\r\n                  <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n                  (onChange)=\"dt.filter(st.value,'status','')\"\r\n                      ></p-dropdown>\r\n              </div>\r\n                <div class=\"col-md-12 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"qualifications\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewQualification(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewQualification(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editQualification(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\"  *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteQualification(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n         <!-- pagination div starts from here -->\r\n         <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Qualification?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"qualificationRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { RoleAccessService } from 'src/app/cts/shared/services/role-access.service';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\n\r\n\r\n@Component({\r\n  selector: 'app-role-access',\r\n  templateUrl: './role-access.component.html',\r\n  styleUrls: ['./role-access.component.scss']\r\n})\r\nexport class RoleAccessComponent implements OnInit {\r\n  users: any;\r\n  rowGroupMetadata: any;\r\n  userFeatures:any;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  userid:string=\"\";\r\n  formSubmitAttempt: boolean = false;\r\n  checked: boolean = false;\r\n  loading: boolean = true;\r\n  private ngUnsubscribe = new Subject();\r\n  constructor(private dropdownService: DropdownService,private roleaccessService:RoleAccessService,private router: Router) {\r\n         //Get Dropdowns API call\r\n       var dropdowns = [\"users\"];\r\n       this.dropdownService.getDropdowns(dropdowns)\r\n       .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n         if (result.success) {\r\n          this.users = result.data.users;\r\n         }\r\n       });  \r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dropdownChange(event): void {\r\n    // alert(event.value);\r\n    this.userid = event.value;\r\n    this.getUserFeatures(event.value);\r\n    \r\n  }\r\n  getUserFeatures(id){\r\n    this.roleaccessService.UserFeatures(id)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      this.userFeatures= result;\r\n      console.log(this.userFeatures)\r\n      this.updateRowGroupMetaData();\r\n    })\r\n  }\r\n\r\n  onSort() {\r\n    this.updateRowGroupMetaData();\r\n}\r\n\r\nupdateRowGroupMetaData() {\r\n    this.rowGroupMetadata = {};\r\n    if (this.userFeatures) {\r\n        for (let i = 0; i < this.userFeatures.length; i++) {\r\n            let rowData = this.userFeatures[i];\r\n            let brand = rowData.featureTitle;\r\n            if (i == 0) {\r\n                this.rowGroupMetadata[brand] = { index: 0, size: 1 };\r\n            }\r\n            else {\r\n                let previousRowData = this.userFeatures[i - 1];\r\n                let previousRowGroup = previousRowData.featureTitle;\r\n                if (brand === previousRowGroup)\r\n                    this.rowGroupMetadata[brand].size++;\r\n                else\r\n                    this.rowGroupMetadata[brand] = { index: i, size: 1 };\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nonSubmit(permissionData){\r\n  this.errorMessage = \"\";\r\n  this.successMessage = \"\";\r\n  this.formSubmitAttempt = true;\r\n  if (this.userFeatures.length > 0) {\r\n    this.formSubmitAttempt = false;\r\n    //AED Branches API call\r\n    this.roleaccessService.AEDRoleAccess(this.userFeatures,this.userid)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {         \r\n          this.successMessage = AppConstants.Messages.successMessage;\r\n        }else{\r\n          this.errorMessage = \"Unable to perform request\";\r\n        }\r\n      },\r\n      error =>{  \r\n        this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n      });\r\n  }\r\n}\r\n\r\nfullControlCheck(event){\r\n  if(event){\r\n    this.userFeatures.forEach(element => {\r\n      element.status = 'Y';\r\n    });\r\n  }\r\n  else{\r\n    this.getUserFeatures(this.userid);\r\n  }\r\n}\r\n\r\ncheckPermissions(permissionValue){\r\n return  AuthorizationGuard.checkPermission(permissionValue);\r\n}\r\n\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"col-md-12 component-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-4\">\r\n        <span class=\"table-header-items\">Role Access</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n    <div class=\"col-md-12\">\r\n      <i class=\"fa fa-exclamation-circle\"></i>\r\n      <b>{{ errorMessage }}</b>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n    <div class=\"col-md-12\">\r\n      <i class=\"fa fa-check\"></i>\r\n      <b>{{ successMessage }}</b>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row search-box search-box-padding form-block\">\r\n      <div class=\"col-md-4\"></div>\r\n      <div class=\"col-md-4\">\r\n        <p-dropdown [options]=\"users\" filter=\"true\" (onChange)=\"dropdownChange($event)\" placeholder=\"Select User\">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4\"></div>\r\n      <br />\r\n      <br />\r\n      <div class=\"col-md-12 clienttable\" *ngIf=\"this.userFeatures\">\r\n        <div class=\"p-field-checkbox text-right\">\r\n          <p-checkbox (onChange)=\"fullControlCheck($event)\" [(ngModel)]=\"checked\" binary=\"true\" inputId=\"binary\">\r\n          </p-checkbox>&nbsp;&nbsp;\r\n          <label for=\"binary\">Full control to the selected user</label>\r\n        </div>\r\n        <p-table #dt [value]=\"userFeatures\" sortField=\"brand\" sortMode=\"single\" (onSort)=\"onSort()\" [rows]=\"10\"\r\n           styleClass=\"p-datatable-customers p-datatable-gridlines\" [paginator]=\"true\"\r\n          [globalFilterFields]=\"['featureTitle']\" currentPageReportTemplate=\"Showing {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of {{dt.totalRecords}} entries\" [showCurrentPageReport]=\"true\">\r\n          <ng-template pTemplate=\"caption\">\r\n            <div class=\"p-d-flex\">\r\n              <span class=\"p-input-icon-left p-ml-auto\">\r\n                <i class=\"pi pi-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                  placeholder=\"Search Feature\" />\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"header\">\r\n            <tr>\r\n              <th>Feature</th>\r\n              <th>Visibility</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\">\r\n            <tr class=\"ui-widget-header\" *ngIf=\"rowGroupMetadata[rowData.featureTitle].index === rowIndex\">\r\n              <td colspan=\"2\" style=\"background-color: #d3c9ee\">\r\n                <span style=\"font-weight: bold; font-size: 15px\">{{\r\n                  rowData.featureTitle\r\n                  }}</span>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{{ rowData.featureOption }}</td>\r\n              <td>\r\n                <p-radioButton label=\"Show\" value=\"Y\" class=\"p-2\" [(ngModel)]=\"rowData.status\"></p-radioButton>\r\n                <p-radioButton label=\"Hide\" value=\"N\" [(ngModel)]=\"rowData.status\"></p-radioButton>\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n\r\n      <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n          <i class=\"fa fa-exclamation-circle\"></i>\r\n          <b>{{ errorMessage }}</b>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n          <i class=\"fa fa-check\"></i>\r\n          <b>{{ successMessage }}</b>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-12 mt-3 text-right\" *ngIf=\"this.userFeatures\">\r\n        <button *ngIf=\"checkPermissions('ADD')\" pButton type=\"button\" icon=\"pi pi-check\" label=\"Submit\"\r\n          class=\"ui-button-secondary table-header-items\" (click)=\"onSubmit($event)\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-section',\r\n  templateUrl: './add-section.component.html',\r\n  styleUrls: ['./add-section.component.scss']\r\n})\r\nexport class AddSectionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-section works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sections',\r\n  templateUrl: './sections.component.html',\r\n  styleUrls: ['./sections.component.scss']\r\n})\r\nexport class SectionsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sections works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  sms: SelectItem[] = [];\r\n  email: SelectItem[] = [];\r\n  vendor: SelectItem[] = [];\r\n  settingsForm: FormGroup;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  formSubmitAttempt: boolean = false;\r\n  smsDiv: boolean = false;\r\n  emailDiv: boolean = false;\r\n  isRequired: boolean = true;\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.sms = [\r\n      { label: 'Yes', value: 'Y' },\r\n      { label: 'No', value: 'N' }\r\n    ];\r\n    this.email = [\r\n      { label: 'Yes', value: 'Y' },\r\n      { label: 'No', value: 'N' }\r\n    ];\r\n    this.vendor = [\r\n      { label: 'Test Local', value: 'text' },\r\n      { label: 'Web Sms', value: 'sms' }\r\n    ];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.settingsForm.get('sms').valueChanges.subscribe(\r\n      (sms: string) => {\r\n        if (sms === 'Y') {\r\n          this.settingsForm.get('vendor').setValidators([Validators.required]);\r\n          this.settingsForm.get('sender').setValidators([Validators.required]);\r\n          this.settingsForm.get('transkey').setValidators([Validators.required]);\r\n          this.settingsForm.get('promkey').setValidators([Validators.required]);\r\n        } else if (sms === 'N'){\r\n          this.settingsForm.get('vendor').setValidators(null);\r\n          this.settingsForm.get('sender').setValidators(null);\r\n          this.settingsForm.get('transkey').setValidators(null);\r\n          this.settingsForm.get('promkey').setValidators(null);\r\n        }\r\n        this.settingsForm.get('vendor').updateValueAndValidity();\r\n        this.settingsForm.get('sender').updateValueAndValidity();\r\n        this.settingsForm.get('transkey').updateValueAndValidity();\r\n        this.settingsForm.get('promkey').updateValueAndValidity();\r\n      })\r\n\r\n      this.settingsForm.get('email1').valueChanges.subscribe(\r\n        (email1: string) => {\r\n          if (email1 === 'Y') {\r\n            this.settingsForm.get('email2').setValidators([Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]);\r\n            this.settingsForm.get('password').setValidators([Validators.required, Validators.minLength(8), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]);\r\n          } else if (email1 === 'N') {\r\n            this.settingsForm.get('email2').setValidators(null);\r\n            this.settingsForm.get('password').setValidators(null);\r\n          }\r\n          this.settingsForm.get('email2').updateValueAndValidity();\r\n          this.settingsForm.get('password').updateValueAndValidity();\r\n        })\r\n  }\r\n\r\n  createForm() {\r\n    this.settingsForm = this.fb.group({\r\n      'sms': new FormControl('', { validators: [Validators.required] }),\r\n      'email1': new FormControl('', { validators: [Validators.required] }),\r\n      'vendor': new FormControl(''),\r\n      'sender': new FormControl(''),\r\n      'transkey': new FormControl(''),\r\n      'promkey': new FormControl(''),\r\n      'email2': new FormControl(''),\r\n      'password': new FormControl('')\r\n    });\r\n  }\r\n\r\n  settingsSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.settingsForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      console.log(this.settingsForm.value);\r\n      this.successMessage = \"Your changes have been successfully saved\";\r\n    }\r\n  }\r\n  dropdownChange(event, type): void {\r\n    if (type == 'sms') {\r\n      if (event.value == \"Y\")\r\n        this.smsDiv = true\r\n      else\r\n        this.smsDiv = false\r\n    }\r\n    else {\r\n      if (event.value == \"Y\")\r\n        this.emailDiv = true\r\n      else\r\n        this.emailDiv = false\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Settings</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"settingsForm\"  class=\"col-md-12\" (ngSubmit)=\"settingsSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!settingsForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!settingsForm.controls['sms'].valid && settingsForm.controls['sms'].touched)|| \r\n                                (!settingsForm.controls['sms'].valid && settingsForm.controls['sms'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['sms'].errors?.required)\">Enter \"SMS\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!settingsForm.controls['email1'].valid && settingsForm.controls['email1'].touched)|| \r\n                                (!settingsForm.controls['email1'].valid && settingsForm.controls['email1'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['email1'].errors?.required)\">Enter \"Email1\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!settingsForm.controls['vendor'].valid && settingsForm.controls['vendor'].touched)|| \r\n                                (!settingsForm.controls['vendor'].valid && settingsForm.controls['vendor'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['vendor'].errors?.required)\">Enter \"Vendor\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!settingsForm.controls['sender'].valid && settingsForm.controls['sender'].touched)|| \r\n                                (!settingsForm.controls['sender'].valid && settingsForm.controls['sender'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['sender'].errors?.required)\">Enter \"Sender\"</span>\r\n                            </div> \r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!settingsForm.controls['transkey'].valid && settingsForm.controls['transkey'].touched)|| \r\n                                (!settingsForm.controls['transkey'].valid && settingsForm.controls['transkey'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['transkey'].errors?.required)\">Enter \"Transactinal key\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!settingsForm.controls['promkey'].valid && settingsForm.controls['promkey'].touched)|| \r\n                                (!settingsForm.controls['promkey'].valid && settingsForm.controls['promkey'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['promkey'].errors?.required)\">Enter \"Promational Key\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!settingsForm.controls['email2'].valid && settingsForm.controls['email2'].touched)|| \r\n                                (!settingsForm.controls['email2'].valid && settingsForm.controls['email2'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['email2'].errors?.required)\">Enter \"Email2\"</span>\r\n                                <span *ngIf=\"(settingsForm.controls['email2'].errors?.pattern)\">Enter \"Valid Email2\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!settingsForm.controls['password'].valid && settingsForm.controls['password'].touched)|| \r\n                                (!settingsForm.controls['password'].valid && settingsForm.controls['password'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(settingsForm.controls['password'].errors?.required)\">Enter \"Password\"</span>\r\n                                <span *ngIf=\"(settingsForm.controls['password'].errors?.pattern)\">Enter \"Valid Password\"</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block \">\r\n            <div class=\"col-md-6\">\r\n                <span>SMS</span><br>\r\n                <p-dropdown [options]=\"sms\" filter=\"true\" class=\"required\" (onChange)=\"dropdownChange($event,'sms')\" placeholder=\"Select\"\r\n                    formControlName=\"sms\"  [ngClass]=\"{'error':((!settingsForm.controls['sms'].valid && settingsForm.controls['sms'].touched) || \r\n                    (!settingsForm.controls['sms'].valid && settingsForm.controls['sms'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\"></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <span>EMAIL</span><br>\r\n                <p-dropdown [options]=\"email\" filter=\"true\" class=\"required\" (onChange)=\"dropdownChange($event,'email')\" placeholder=\"Select\"\r\n                    formControlName=\"email1\" [ngClass]=\"{'error':((!settingsForm.controls['email1'].valid && settingsForm.controls['email1'].touched) || \r\n                    (!settingsForm.controls['email1'].valid && settingsForm.controls['email1'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\"></p-dropdown>\r\n            </div>\r\n            <div class=\"row col-md-12\" *ngIf=\"smsDiv\"><br>\r\n                <div class=\"col-md-12\">\r\n                    <span class=\"table-header-items\">SMS Notifications Settings</span>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span>Select SMS Vendor</span><br>\r\n                    <p-dropdown [options]=\"vendor\" class=\"required\" filter=\"true\" formControlName=\"vendor\" placeholder=\"Select a Vendor\" [ngClass]=\"{'error':((!settingsForm.controls['vendor'].valid && settingsForm.controls['vendor'].touched) || \r\n                    (!settingsForm.controls['vendor'].valid && settingsForm.controls['vendor'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span>Sender Name</span><br>\r\n                    <input id=\"input\" class=\"w-100\" class=\"required\" maxlength=\"45\" formControlName=\"sender\" type=\"text\"\r\n                        placeholder=\"Student Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!settingsForm.controls['sender'].valid && settingsForm.controls['sender'].touched) || \r\n                        (!settingsForm.controls['sender'].valid && settingsForm.controls['sender'].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span>Transactional Key</span><br>\r\n                    <input id=\"input\" class=\"w-100\" class=\"required\" maxlength=\"45\" formControlName=\"transkey\" type=\"text\"\r\n                        placeholder=\"Student Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!settingsForm.controls['transkey'].valid && settingsForm.controls['transkey'].touched) || \r\n                        (!settingsForm.controls['transkey'].valid && settingsForm.controls['transkey'].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span>Promational Key</span><br>\r\n                    <input id=\"input\" class=\"w-100\" class=\"required\" maxlength=\"45\" formControlName=\"promkey\" type=\"text\"\r\n                        placeholder=\"Student Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!settingsForm.controls['promkey'].valid && settingsForm.controls['promkey'].touched) || \r\n                        (!settingsForm.controls['promkey'].valid && settingsForm.controls['promkey'].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row col-md-12\" *ngIf=\"emailDiv\"><br>\r\n                <div class=\"col-md-12\">\r\n                    <span class=\"table-header-items\">Email Notification Settings</span>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span>Email</span><br>\r\n                    <input id=\"input\" class=\"w-100\" class=\"required\" maxlength=\"45\" formControlName=\"email2\" type=\"text\"\r\n                        placeholder=\"Student Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!settingsForm.controls['email2'].valid && settingsForm.controls['email2'].touched) || \r\n                        (!settingsForm.controls['email2'].valid && settingsForm.controls['email2'].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <span>Password</span><br>\r\n                    <input id=\"input\" class=\"w-100\" class=\"required\" maxlength=\"45\" formControlName=\"password\" type=\"text\"\r\n                        placeholder=\"Student Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!settingsForm.controls['password'].valid && settingsForm.controls['password'].touched) || \r\n                        (!settingsForm.controls['password'].valid && settingsForm.controls['password'].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6\"></div>\r\n            <div class=\"col-md-6 text-right\"><br>\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.scss']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>statistics works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Students } from 'src/app/cts/shared/models/students';\r\nimport * as moment from 'moment';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { StudentsService } from 'src/app/cts/shared/services/students.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.scss']\r\n})\r\nexport class AddStudentComponent implements OnInit {\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  studentId: string;\r\n  formType: string;\r\n  editData: any;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  addStudentForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  branches: SelectItem[] = [];\r\n  parents: SelectItem[] = [];\r\n  gender: SelectItem[] = [];\r\n  classes: SelectItem[] = [];\r\n  sections: SelectItem[] = [];\r\n  countries: SelectItem[] = [];\r\n  states: SelectItem[] = [];\r\n  cities: SelectItem[] = [];\r\n  status: SelectItem[] = [];\r\n  adm_categories: SelectItem[] = [];\r\n  blood_groups: SelectItem[] = [];\r\n\r\n  maxDate= new Date();\r\n\r\n  querytype:number;\r\n  constructor(private studentsService: StudentsService,private dropdownService: DropdownService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute,private location:Location,private inputpattern:InputPatternService) {\r\n    this.maxDate.setDate(this.maxDate.getDate()); \r\n \r\n    this.gender = [\r\n      { label: 'Male', value: 'M' },\r\n      { label: 'Female', value: 'F' }\r\n    ];\r\n    \r\n    this.status = [\r\n      { label: 'Active', value: 'AC' }, \r\n      { label: 'Not Active', value: 'NA' }\r\n    ];\r\n\r\n    this.adm_categories = [\r\n      { label: 'General', value: 'GEN' }, \r\n      { label: 'Payment', value: 'PMT' }\r\n    ];\r\n    this.blood_groups = [\r\n      { label: 'O Positive', value: 'o+' }, \r\n      { label: 'O Negative', value: 'o-' },\r\n      { label: 'A Positive', value: 'A+' }, \r\n      { label: 'A Negative', value: 'A-' },\r\n      { label: 'B Positive', value: 'B+' }, \r\n      { label: 'B Negative', value: 'B-' },\r\n      { label: 'AB Positive', value: 'AB+' }, \r\n      { label: 'AB Negative', value: 'AB-' }\r\n    ];\r\n\r\n     //Get Dropdowns API call\r\n     var dropdowns = [\"branches\",\"sections\",\"classes\",\"countries\",\"states\",\"cities\",\"parents\"];\r\n     this.dropdownService.getDropdowns(dropdowns)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {\r\n        this.classes = result.data.classes;\r\n        this.sections = result.data.sections;\r\n        this.branches = result.data.branches;\r\n        this.countries = result.data.countries;\r\n        this.states = result.data.states;\r\n        this.cities = result.data.cities;\r\n        this.parents = result.data.parents;\r\n       }      \r\n     });  \r\n  }\r\n\r\n  ngOnInit(): void {    \r\n   //to read url parameters\r\n   this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n    this.studentId = window.atob(params['id']);\r\n    this.formType = window.atob(params['type']);\r\n  });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Student\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Student\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.addStudentForm = this.fb.group({\r\n      'firstName': new FormControl('', { validators: [Validators.required] }),\r\n      'middleName': new FormControl(''),\r\n      'lastName': new FormControl('', { validators: [Validators.required] }),\r\n      'branch': new FormControl('', { validators: [Validators.required] }),\r\n      'parent': new FormControl('', { validators: [Validators.required] }),\r\n      'dateofbirth': new FormControl('', { validators: [Validators.required] }),\r\n      'gender': new FormControl('', { validators: [Validators.required] }),\r\n      'joineddate': new FormControl('', { validators: [Validators.required] }),\r\n      'email': new FormControl('',{ validators: [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")] }),\r\n      'class': new FormControl('', { validators: [Validators.required] }),\r\n      'section': new FormControl('', { validators: [Validators.required] }),\r\n      'd_noc': new FormControl(''),\r\n      'streetc': new FormControl(''),\r\n      'countryc': new FormControl('',{ validators: [Validators.required] }),\r\n      'statec': new FormControl('',{ validators: [Validators.required] }),\r\n      'villagec': new FormControl(''),\r\n      'cityc': new FormControl('',{ validators: [Validators.required] }),\r\n      'pincodec': new FormControl('',{ validators: [Validators.pattern('[0-9]{6}')] }),\r\n      'homephn': new FormControl(''),\r\n      'mblno':  new FormControl('', { validators: [Validators.required,Validators.pattern('[0-9]\\\\d{9}')] }),\r\n      'd_nop': new FormControl(''),\r\n      'streetp': new FormControl(''),\r\n      'countryp': new FormControl('',{ validators: [Validators.required] }),\r\n      'statep': new FormControl('',{ validators: [Validators.required] }),\r\n      'villagep': new FormControl(''),\r\n      'cityp': new FormControl('',{ validators: [Validators.required] }),\r\n      'pincodep': new FormControl('',{ validators: [Validators.pattern('[0-9]{6}')] }),\r\n     'e1fname': new FormControl(''),\r\n      'e1lname': new FormControl(''),\r\n      'e1mobile': new FormControl('', { validators: [Validators.pattern('[0-9]\\\\d{9}')] }),\r\n      'e1email':new FormControl('',{ validators: [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")] }),\r\n      'e2fname': new FormControl(''),\r\n      'e2lname': new FormControl(''),\r\n      'e2mobile': new FormControl('', { validators: [Validators.pattern('[0-9]\\\\d{9}')] }),\r\n      'e2email': new FormControl('',{ validators: [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")] }),\r\n      'status': new FormControl('',{ validators: [Validators.required] }),\r\n      'adm_category': new FormControl(''),\r\n      'religion': new FormControl(''),\r\n      'blood_group': new FormControl(''),\r\n      'languages_known': new FormControl('')\r\n    });\r\n  }\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Student\";\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditStudentDetails();\r\n  }\r\n\r\n  bindEditStudentDetails() {   \r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.studentId;\r\n    // pagingData.queryType = this.querytype;\r\n    //Get Branches API call\r\n    this.studentsService.getStudents(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addStudentForm.setValue({\r\n            'firstName': this.editData.ctcstudent_firstname,\r\n            'middleName': this.editData.ctcstudent_middlename,\r\n            'lastName': this.editData.ctcstudent_lastname,\r\n            'branch': this.editData.branch_id,\r\n            'parent':this.editData.ctcparent_id,\r\n            'dateofbirth': new Date(this.editData.ctcstudent_dob),\r\n            'gender': this.editData.ctcstudent_gender,\r\n            'joineddate':new Date(this.editData.ctcstudent_joindate),\r\n            'email': this.editData.ctcstudent_email,\r\n            'class': this.editData.ctcstudent_class,\r\n            'section': this.editData.ctcstudent_section,\r\n            'd_noc': this.editData.ctcstudent_dno_c,\r\n            'streetc': this.editData.ctcstudent_street_c,\r\n            'countryc': this.editData.ctcstudent_country_c,\r\n            'statec': this.editData.ctcstudent_state_c,\r\n            'villagec': this.editData.ctcstudent_village_c,\r\n            'cityc': this.editData.ctcstudent_city_c,\r\n            'pincodec': this.editData.ctcstudent_pincode_c,\r\n            'homephn': this.editData.ctcstduent_home_ph_c,\r\n            'mblno': this.editData.ctcstudent_mobile_ph_c,\r\n            'd_nop': this.editData.ctcstudent_country_p,\r\n            'streetp': this.editData.ctcstudent_street_p,\r\n            'countryp': this.editData.ctcstudent_country_p,\r\n            'statep': this.editData.ctcstudent_state_p,\r\n            'villagep': this.editData.ctcstudent_village_p,\r\n            'cityp': this.editData.ctcstudent_city_p,\r\n            'pincodep': this.editData.ctcstudent_pincode_p,           \r\n            'e1fname': this.editData.ctce1fname,\r\n            'e1lname': this.editData.ctce1lname,\r\n            'e1email': this.editData.ctce1email,\r\n            'e1mobile':this.editData.ctce1mobile,\r\n            'e2fname': this.editData.ctce2fname,\r\n            'e2lname': this.editData.ctce2lname,\r\n            'e2email': this.editData.ctce2email,\r\n            'e2mobile':this.editData.ctce2mobile,\r\n            'status':this.editData.ctcstudent_status,\r\n            'adm_category':this.editData.adm_category,\r\n            'religion':this.editData.religion,\r\n            'blood_group':this.editData.blood_group,\r\n            'languages_known':this.editData.languages_known\r\n          })\r\n        }\r\n      });   \r\n  }\r\n  addStudentSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addStudentForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Students();\r\n      customObj = this.addStudentForm.value;\r\n      customObj.dateofbirth = this.getFormat(customObj.dateofbirth);\r\n      customObj.joineddate = this.getFormat(customObj.joineddate);\r\n      customObj.id = this.studentId;\r\n      customObj.querytype = this.querytype;\r\n      customObj.classs = this.addStudentForm.controls['class'].value;\r\n      \r\n      //AED Students API call\r\n      this.studentsService.AEDStudents(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addStudentForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = AppConstants.Messages.errorMessage;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getServerSideDateFormat())\r\n   }\r\n  list(): void {\r\n    // this.router.navigateByUrl(\"Teachers\");\r\n    this.location.back();\r\n  }\r\n  resetForm(): void {\r\n    this.addStudentForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n  _keyPress(event: any) {\r\n    this.inputpattern.Integers(event);\r\n  }\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.Alphabet(event);\r\n  }\r\n  keyPressAlphanumeric(event)\r\n  {\r\n     this.inputpattern.AlphaNumeric(event);\r\n  }\r\n  keyPressAlphanumericwithcomas(event)\r\n  {\r\n     this.inputpattern.AlphaNumericwithcomma(event);\r\n  }\r\n  keyPressAlphanumericwithspecialchars(event)\r\n  {\r\n     this.inputpattern.AlphaNumericwithspecialsymbols(event);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"addStudentForm\" class=\"col-md-12\" (ngSubmit)=\"addStudentSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addStudentForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['firstName'].valid && \r\n                                addStudentForm.controls['firstName'].touched)|| \r\n                                (!addStudentForm.controls['firstName'].valid && addStudentForm.controls['firstName'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['firstName'].errors?.required)\">\r\n                                    Enter \"First Name\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['lastName'].valid && \r\n                                addStudentForm.controls['lastName'].touched)|| \r\n                                (!addStudentForm.controls['lastName'].valid && addStudentForm.controls['lastName'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['lastName'].errors?.required)\">\r\n                                    Enter \"Last Name\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addStudentForm.controls['branch'].valid && addStudentForm.controls['branch'].touched)|| (!addStudentForm.controls['branch'].valid && addStudentForm.controls['branch'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['branch'].errors?.required)\">Enter \"Branch\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addStudentForm.controls['parent'].valid && addStudentForm.controls['parent'].touched)|| (!addStudentForm.controls['parent'].valid && addStudentForm.controls['parent'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['parent'].errors?.required)\">Enter \"Parent\r\n                                    \"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['dateofbirth'].valid && \r\n                                addStudentForm.controls['dateofbirth'].touched)||\r\n                                 (!addStudentForm.controls['dateofbirth'].valid && addStudentForm.controls['dateofbirth'].untouched &&\r\n                                  formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['dateofbirth'].errors?.required)\">\r\n                                    Enter \"Date of Birth\"</span>\r\n                                <span *ngIf=\"(!addStudentForm.controls['dateofbirth'].errors?.required && \r\n                                    addStudentForm.controls['dateofbirth'].errors?.pattern)\">\r\n                                    Enter Valid \"Date Of Birth\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['gender'].valid && addStudentForm.controls['gender'].touched)||\r\n                                 (!addStudentForm.controls['gender'].valid && addStudentForm.controls['gender'].untouched &&\r\n                                  formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['gender'].errors?.required)\">Enter \"Gender\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['joineddate'].valid && addStudentForm.controls['joineddate'].touched)||\r\n                                 (!addStudentForm.controls['joineddate'].valid && addStudentForm.controls['joineddate'].untouched &&\r\n                                  formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['joineddate'].errors?.required)\">\r\n                                    Enter \"Joined Date\"</span>\r\n                                <span *ngIf=\"(!addStudentForm.controls['joineddate'].errors?.required && \r\n                                    addStudentForm.controls['joineddate'].errors?.pattern)\">\r\n                                    Enter Valid \"Joined Date\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['email'].valid && \r\n                                addStudentForm.controls['email'].touched)|| \r\n                                (!addStudentForm.controls['email'].valid && addStudentForm.controls['email'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['email'].errors?.pattern)\">\r\n                                    Enter \" Valid Email\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['class'].valid && \r\n                                addStudentForm.controls['class'].touched)|| \r\n                                (!addStudentForm.controls['class'].valid && addStudentForm.controls['class'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['class'].errors?.required)\">\r\n                                    Enter \"Class\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['section'].valid && \r\n                                addStudentForm.controls['section'].touched)|| \r\n                                (!addStudentForm.controls['section'].valid && addStudentForm.controls['section'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['section'].errors?.required)\">\r\n                                    Enter \"Section\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['status'].valid && \r\n                                addStudentForm.controls['status'].touched)|| \r\n                                (!addStudentForm.controls['status'].valid && addStudentForm.controls['status'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['status'].errors?.required)\">\r\n                                    Enter \"Status\"\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['mblno'].valid && addStudentForm.controls['mblno'].touched)||\r\n                                 (!addStudentForm.controls['mblno'].valid && addStudentForm.controls['mblno'].untouched &&\r\n                                  formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['mblno'].errors?.required)\">\r\n                                    Enter \"Mobile Number\"</span>\r\n                                <span *ngIf=\"(addStudentForm.controls['mblno'].errors?.pattern)\">\r\n                                    Enter \"Valid mobile number\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['countryc'].valid && addStudentForm.controls['countryc'].touched)||\r\n                            (!addStudentForm.controls['countryc'].valid && addStudentForm.controls['countryc'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['countryc'].errors?.required)\">\r\n                                    Enter \"Current Country\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['statec'].valid && addStudentForm.controls['statec'].touched)||\r\n                            (!addStudentForm.controls['statec'].valid && addStudentForm.controls['statec'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['statec'].errors?.required)\">\r\n                                    Enter \"Current State\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['cityc'].valid && addStudentForm.controls['cityc'].touched)||\r\n                            (!addStudentForm.controls['cityc'].valid && addStudentForm.controls['cityc'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['cityc'].errors?.required)\">\r\n                                    Enter \"Current City\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['pincodec'].valid && addStudentForm.controls['pincodec'].touched)||\r\n                            (!addStudentForm.controls['pincodec'].valid && addStudentForm.controls['pincodec'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['pincodec'].errors?.pattern)\">\r\n                                    Enter \"Valid Pincode-1\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['pincodep'].valid && addStudentForm.controls['pincodep'].touched)||\r\n                            (!addStudentForm.controls['pincodep'].valid && addStudentForm.controls['pincodep'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['pincodep'].errors?.pattern)\">\r\n                                    Enter \"Valid Pincode-2\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['countryp'].valid && addStudentForm.controls['countryp'].touched)||\r\n                            (!addStudentForm.controls['countryp'].valid && addStudentForm.controls['countryp'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['countryp'].errors?.required)\">\r\n                                    Enter \"Perminant Country\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['statep'].valid && addStudentForm.controls['statep'].touched)||\r\n                            (!addStudentForm.controls['statep'].valid && addStudentForm.controls['statep'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['statep'].errors?.required)\">\r\n                                    Enter \"Perminant State\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['cityp'].valid && addStudentForm.controls['cityp'].touched)||\r\n                            (!addStudentForm.controls['cityp'].valid && addStudentForm.controls['cityp'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['cityp'].errors?.required)\">\r\n                                    Enter \"Peminant City\"</span>\r\n                            </div>\r\n                           \r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['e1email'].valid && addStudentForm.controls['e1email'].touched)||\r\n                            (!addStudentForm.controls['e1email'].valid && addStudentForm.controls['e1email'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['e1email'].errors?.pattern)\">\r\n                                    Enter \" Valid Emergency email-1\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['e2email'].valid && addStudentForm.controls['e2email'].touched)||\r\n                            (!addStudentForm.controls['e2email'].valid && addStudentForm.controls['e2email'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['e2email'].errors?.pattern)\">\r\n                                    Enter \" Valid Emergency email-2\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['e1mobile'].valid && addStudentForm.controls['e1mobile'].touched)||\r\n                            (!addStudentForm.controls['e1mobile'].valid && addStudentForm.controls['e1mobile'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['e1mobile'].errors?.pattern)\">\r\n                                    Enter \" Valid Emergency Mobile number-1\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addStudentForm.controls['e2mobile'].valid && addStudentForm.controls['e2mobile'].touched)||\r\n                            (!addStudentForm.controls['e2mobile'].valid && addStudentForm.controls['e2mobile'].untouched &&\r\n                             formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addStudentForm.controls['e2mobile'].errors?.pattern)\">\r\n                                    Enter \" Valid Emergency Mobile number-2\"</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-12 header\" style=\"margin-top: 0px !important;\">\r\n                Basic Details\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>First Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"firstName\" type=\"text\" placeholder=\"First Name\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['firstName'].valid && \r\n                    addStudentForm.controls['firstName'].touched) || (!addStudentForm.controls['firstName'].valid && \r\n                    addStudentForm.controls['firstName'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Middle Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"middleName\" type=\"text\" placeholder=\"Middle Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['middleName'].valid && \r\n                        addStudentForm.controls['middleName'].touched) || (!addStudentForm.controls['middleName'].valid && \r\n                        addStudentForm.controls['middleName'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Last Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"lastName\" type=\"text\" placeholder=\"Last Name\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['lastName'].valid && \r\n                            addStudentForm.controls['lastName'].touched) || (!addStudentForm.controls['lastName'].valid && \r\n                            addStudentForm.controls['lastName'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Branch</span><br>\r\n                <p-dropdown [options]=\"branches\" filter=\"true\" formControlName=\"branch\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Branch\"\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['branch'].valid && addStudentForm.controls['branch'].touched) || (!addStudentForm.controls['branch'].valid && addStudentForm.controls['branch'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Parent</span><br>\r\n                <p-dropdown [options]=\"parents\" filter=\"true\" formControlName=\"parent\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Parent\"\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['parent'].valid && addStudentForm.controls['parent'].touched) || (!addStudentForm.controls['parent'].valid && addStudentForm.controls['parent'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Date Of Birth</span><br>\r\n                <p-calendar placeholder=\"Select Date\" [disabled]=\"isDisabled\" [maxDate]=\"maxDate\" [readonlyInput]=\"true\"\r\n                    formControlName=\"dateofbirth\" [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['dateofbirth'].valid && \r\n                    addStudentForm.controls['dateofbirth'].touched) || (!addStudentForm.controls['dateofbirth'].valid && \r\n                    addStudentForm.controls['dateofbirth'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-calendar>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <span>Gender</span><br>\r\n                <p-dropdown [options]=\"gender\" filter=\"true\" formControlName=\"gender\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Gender\" [ngClass]=\"{'error':((!addStudentForm.controls['gender'].valid &&\r\n                     addStudentForm.controls['gender'].touched) || \r\n                    (!addStudentForm.controls['gender'].valid && addStudentForm.controls['gender'].untouched && formSubmitAttempt)),\r\n                    'required':(isRequired == true )}\">\r\n\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Joined Date</span><br>\r\n                <p-calendar placeholder=\"Select Date\" [disabled]=\"isDisabled\" formControlName=\"joineddate\"\r\n                    [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['joineddate'].valid && \r\n                        addStudentForm.controls['joineddate'].touched) || (!addStudentForm.controls['joineddate'].valid && \r\n                        addStudentForm.controls['joineddate'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Email</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"email\" type=\"text\" placeholder=\"Enter Email\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['email'].valid && \r\n                    addStudentForm.controls['email'].touched) || (!addStudentForm.controls['email'].valid && \r\n                    addStudentForm.controls['email'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <span>Class</span><br>\r\n                <p-dropdown [options]=\"classes\" filter=\"true\" formControlName=\"class\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select class\" [ngClass]=\"{'error':((!addStudentForm.controls['class'].valid &&\r\n                     addStudentForm.controls['class'].touched) || \r\n                    (!addStudentForm.controls['class'].valid && addStudentForm.controls['class'].untouched && formSubmitAttempt)),\r\n                    'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Section</span><br>\r\n                <p-dropdown [options]=\"sections\" filter=\"true\" formControlName=\"section\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select section\" [ngClass]=\"{'error':((!addStudentForm.controls['section'].valid &&\r\n                     addStudentForm.controls['section'].touched) || \r\n                    (!addStudentForm.controls['section'].valid && addStudentForm.controls['section'].untouched && formSubmitAttempt)),\r\n                    'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addStudentForm.controls['status'].valid &&\r\n                    addStudentForm.controls['status'].touched) || \r\n                (!addStudentForm.controls['status'].valid && addStudentForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>  \r\n            <div class=\"col-md-4\">\r\n                <span>Admission Category</span><br>\r\n                <p-dropdown [options]=\"adm_categories\" filter=\"true\" formControlName=\"adm_category\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select admission category\">\r\n                </p-dropdown>\r\n            </div>  \r\n            <div class=\"col-md-4\">\r\n                <span>Religion</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                (keypress)=\"keyPressAlphabet($event)\" formControlName=\"religion\" type=\"text\" placeholder=\"Enter religion\" size=\"30\" pInputText>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Blood Group</span><br>\r\n                <p-dropdown [options]=\"blood_groups\" filter=\"true\" formControlName=\"blood_group\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Blood Group\">\r\n                </p-dropdown>\r\n            </div>  \r\n            <div class=\"col-md-4\">\r\n                <span>Languages knows</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                (keypress)=\"keyPressAlphabet($event)\"formControlName=\"languages_known\" type=\"text\" placeholder=\"Enter Languages\" size=\"30\" pInputText>\r\n            </div>\r\n            <div class=\"col-md-12 header\">\r\n                Address Details\r\n            </div>\r\n            <div class=\"col-md-12 sub-details-div\">\r\n                <div class=\"col-md-12\">\r\n                    <i class=\"fa fa-address-card-o\" aria-hidden=\"true\"></i> Current Address\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>D.No</span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphanumericwithspecialchars($event)\" formControlName=\"d_noc\" type=\"text\" placeholder=\"D.No\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['d_noc'].valid && \r\n                            addStudentForm.controls['d_noc'].touched) || (!addStudentForm.controls['d_noc'].valid && \r\n                            addStudentForm.controls['d_noc'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <span>Street</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphanumericwithspecialchars($event)\" formControlName=\"streetc\" type=\"text\" placeholder=\"Street\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['streetc'].valid && \r\n                            addStudentForm.controls['streetc'].touched) || (!addStudentForm.controls['streetc'].valid && \r\n                            addStudentForm.controls['streetc'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Village</span><br>\r\n                <input id=\"input\" maxlength=\"100\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphanumericwithspecialchars($event)\" formControlName=\"villagec\" type=\"text\" placeholder=\"Village\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['villagec'].valid && \r\n                            addStudentForm.controls['villagec'].touched) || (!addStudentForm.controls['villagec'].valid && \r\n                            addStudentForm.controls['villagec'].untouched && formSubmitAttempt))}\">\r\n\r\n\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Country</span><br>\r\n                <p-dropdown [options]=\"countries\" filter=\"true\" formControlName=\"countryc\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Country\"\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['countryc'].valid &&\r\n                             addStudentForm.controls['countryc'].touched) || \r\n                            (!addStudentForm.controls['countryc'].valid && addStudentForm.controls['countryc'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>State</span><br>\r\n                <p-dropdown [options]=\"states\" filter=\"true\" formControlName=\"statec\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select State\" [ngClass]=\"{'error':((!addStudentForm.controls['statec'].valid &&\r\n                             addStudentForm.controls['statec'].touched) || \r\n                            (!addStudentForm.controls['statec'].valid && addStudentForm.controls['statec'].untouched && formSubmitAttempt)),\r\n                            'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <span>City</span><br>\r\n                <p-dropdown [options]=\"cities\" filter=\"true\" formControlName=\"cityc\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select City\" [ngClass]=\"{'error':((!addStudentForm.controls['cityc'].valid &&\r\n                             addStudentForm.controls['cityc'].touched) || \r\n                            (!addStudentForm.controls['cityc'].valid && addStudentForm.controls['cityc'].untouched && formSubmitAttempt)),\r\n                            'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Pincode</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"6\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"pincodec\" type=\"text\"\r\n                    placeholder=\"Pincode\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['pincodec'].valid && \r\n                            addStudentForm.controls['pincodec'].touched) || (!addStudentForm.controls['pincodec'].valid && \r\n                            addStudentForm.controls['pincodec'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Home Phone Number</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"15\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"homephn\" type=\"text\" placeholder=\"Home Phone Number\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['homephn'].valid && \r\n                            addStudentForm.controls['homephn'].touched) || (!addStudentForm.controls['homephn'].valid && \r\n                            addStudentForm.controls['homephn'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Mobile Number</span><br>\r\n                <input id=\"input\" maxlength=\"10\" class=\"w-100\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"mblno\" type=\"text\"\r\n                    placeholder=\"Mobile Number\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['mblno'].valid && \r\n                            addStudentForm.controls['mblno'].touched) || (!addStudentForm.controls['mblno'].valid && \r\n                            addStudentForm.controls['mblno'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-12 sub-details-div\">\r\n                <div class=\"col-md-12\">\r\n                    <i class=\"fa fa-address-card-o\" aria-hidden=\"true\"></i> Perminant Address\r\n                    <p-checkbox name=\"SameAsAbove\" value=\"\" class=\"address-checkbox\" label=\"Same as above\"\r\n                        inputId=\"saa\"></p-checkbox>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>D.No</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"10\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphanumericwithspecialchars($event)\" formControlName=\"d_nop\" type=\"text\" placeholder=\"D.No\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['d_nop'].valid && \r\n                            addStudentForm.controls['d_nop'].touched) || (!addStudentForm.controls['d_nop'].valid && \r\n                            addStudentForm.controls['d_nop'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <span>Street</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphanumericwithspecialchars($event)\" formControlName=\"streetp\" type=\"text\" placeholder=\"Street\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['streetp'].valid && \r\n                            addStudentForm.controls['streetp'].touched) || (!addStudentForm.controls['streetp'].valid && \r\n                            addStudentForm.controls['streetp'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Village</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphanumericwithspecialchars($event)\" formControlName=\"villagep\" type=\"text\" placeholder=\"Village\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['villagep'].valid && \r\n                            addStudentForm.controls['villagep'].touched) || (!addStudentForm.controls['villagep'].valid && \r\n                            addStudentForm.controls['villagep'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Country</span><br>\r\n                <p-dropdown [options]=\"countries\" filter=\"true\" formControlName=\"countryp\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Country\"\r\n                    [ngClass]=\"{'error':((!addStudentForm.controls['countryp'].valid &&\r\n                             addStudentForm.controls['countryp'].touched) || \r\n                            (!addStudentForm.controls['countryp'].valid && addStudentForm.controls['countryp'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>State</span><br>\r\n                <p-dropdown [options]=\"states\" filter=\"true\" formControlName=\"statep\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select State\" [ngClass]=\"{'error':((!addStudentForm.controls['statep'].valid &&\r\n                             addStudentForm.controls['statep'].touched) || \r\n                            (!addStudentForm.controls['statep'].valid && addStudentForm.controls['statep'].untouched && formSubmitAttempt)),\r\n                            'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <span>City</span><br>\r\n                <p-dropdown [options]=\"cities\" filter=\"true\" formControlName=\"cityp\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select City\" [ngClass]=\"{'error':((!addStudentForm.controls['cityp'].valid &&\r\n                             addStudentForm.controls['cityp'].touched) || \r\n                            (!addStudentForm.controls['cityp'].valid && addStudentForm.controls['cityp'].untouched && formSubmitAttempt)),\r\n                            'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Pincode</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"6\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"pincodep\" type=\"text\"\r\n                    placeholder=\"Pincode\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['pincodep'].valid && \r\n                            addStudentForm.controls['pincodep'].touched) || (!addStudentForm.controls['pincodep'].valid && \r\n                            addStudentForm.controls['pincodep'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 header\">\r\n                Emergency Contact Details\r\n            </div>\r\n            <div class=\"col-md-12 sub-details-div\">\r\n                <div class=\"col-md-12\">\r\n                    <i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Contact1 Details\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>First Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"e1fname\" type=\"text\" placeholder=\"First Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e1fname'].valid && \r\n                    addStudentForm.controls['e1fname'].touched) || (!addStudentForm.controls['e1fname'].valid && \r\n                    addStudentForm.controls['e1fname'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Last Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"e1lname\" type=\"text\" placeholder=\"Last Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e1lname'].valid && \r\n                            addStudentForm.controls['e1lname'].touched) || (!addStudentForm.controls['e1lname'].valid && \r\n                            addStudentForm.controls['e1lname'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Mobile</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"10\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"e1mobile\" type=\"text\"\r\n                    placeholder=\"Enter Mobile\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e1mobile'].valid && \r\n                    addStudentForm.controls['e1mobile'].touched) || (!addStudentForm.controls['e1mobile'].valid && \r\n                    addStudentForm.controls['e1mobile'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Email</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"e1email\" type=\"text\" placeholder=\"Enter Email\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e1email'].valid && \r\n                    addStudentForm.controls['e1email'].touched) || (!addStudentForm.controls['e1email'].valid && \r\n                    addStudentForm.controls['e1email'].untouched && formSubmitAttempt))}\">\r\n            </div>             \r\n\r\n            <div class=\"col-md-12 sub-details-div\">\r\n                <div class=\"col-md-12\">\r\n                    <i class=\"fa fa-phone\" aria-hidden=\"true\"></i> Contact2 Details\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>First Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"e2fname\" type=\"text\" placeholder=\"First Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e2fname'].valid && \r\n                    addStudentForm.controls['e2fname'].touched) || (!addStudentForm.controls['e2fname'].valid && \r\n                    addStudentForm.controls['e2fname'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Last Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"e2lname\" type=\"text\" placeholder=\"Last Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e2lname'].valid && \r\n                            addStudentForm.controls['e2lname'].touched) || (!addStudentForm.controls['e2lname'].valid && \r\n                            addStudentForm.controls['e2lname'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Mobile</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"10\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"e2mobile\" type=\"text\"\r\n                    placeholder=\"Enter Mobile\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e2mobile'].valid && \r\n                    addStudentForm.controls['e2mobile'].touched) || (!addStudentForm.controls['e2mobile'].valid && \r\n                    addStudentForm.controls['e2mobile'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Email</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"e2email\" type=\"text\" placeholder=\"Enter Email\" size=\"30\" pInputText [ngClass]=\"{'error':((!addStudentForm.controls['e2email'].valid && \r\n                    addStudentForm.controls['e2email'].touched) || (!addStudentForm.controls['e2email'].valid && \r\n                    addStudentForm.controls['e2email'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-8\"></div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-studentedit',\r\n  templateUrl: './studentedit.component.html',\r\n  styleUrls: ['./studentedit.component.scss']\r\n})\r\nexport class StudenteditComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>studentedit works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-studentlayout',\r\n  templateUrl: './studentlayout.component.html',\r\n  styleUrls: ['./studentlayout.component.scss']\r\n})\r\nexport class StudentlayoutComponent implements OnInit {\r\n  urlPath : string;\r\n  private ngUnsubscribe = new Subject();\r\n  studentID:string;\r\n  constructor(private router:Router,private route:ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.urlPath='student-profile';\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {     \r\n      this.studentID = window.atob(params['id']);      \r\n    });    \r\n  }\r\n\r\n  routing(studentInfoURL){\r\n    this.urlPath = (studentInfoURL.split(':')[1]).slice(0,-1);\r\n     this.router.navigate([{ outlets: { detail: [this.urlPath] } }], {relativeTo: this.route,\r\n      queryParams: { \r\n        id: window.btoa(this.studentID) }});   \r\n  }\r\n}\r\n","<!-- <p>studentlayout works!</p>\r\n<router-outlet name=\"detail\"></router-outlet> -->\r\n<div class=\"student-layout-div\">\r\n    <div class=\"row\">\r\n    <div class=\"col-md-12 d-flex\">\r\n    <div class=\"col-md-2\">\r\n            <div class=\"d-flex\">\r\n            <div class=\"card  w-75\" (click)=\"routing('Students/student/(detail:student-profile)')\">\r\n                <div class=\"card-body\">                    \r\n                        <div class=\"card-body-content\">\r\n                            <i class=\"fa fa-user-o \" aria-hidden=\"true\"></i>\r\n                            <p class=\"card-title\">Profile</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-arrow \" [class]=\"(urlPath == 'student-profile') ? 'd-block' : 'd-none'\"></div>\r\n        </div>\r\n        \r\n        <!-- <div class=\"d-flex\">\r\n            <div class=\"card w-75\" (click)=\"routing('Students/student/(detail:student-edit)')\">\r\n                <div class=\"card-body\">\r\n                        <div class=\"card-body-content\"> \r\n                            <i class=\"fa fa-edit\" aria-hidden=\"true\"></i>\r\n                            <p class=\"card-title\">Edit</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-arrow\" [class]=\"urlPath == 'student-edit' ? 'd-block' : 'd-none'\"></div>\r\n        </div> -->\r\n        \r\n        <div class=\"d-flex\">\r\n            <div class=\"card w-75\" (click)=\"routing('Students/student/(detail:student-marks)')\">\r\n                <div class=\"card-body\">\r\n                        <div class=\"card-body-content\">\r\n                            <i class=\"fa fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                            <p class=\"card-title\">Marks</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-arrow\" [class]=\"urlPath == 'student-marks' ? 'd-block' : 'd-none'\"></div>\r\n        </div>\r\n        \r\n        <div class=\"d-flex\">\r\n            <div class=\"card w-75\" (click)=\"routing('Students/student/(detail:student-reports)')\">\r\n                <div class=\"card-body\">\r\n                        <div class=\"card-body-content\">\r\n                            <i class=\"fa fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                            <p class=\"card-title\">Reports</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-arrow\" [class]=\"urlPath == 'student-reports' ? 'd-block' : 'd-none'\"></div>\r\n        </div>\r\n        \r\n        <div class=\"d-flex\">\r\n            <div class=\"card w-75\" (click)=\"routing('Students/student/(detail:student-more)')\">\r\n                <div class=\"card-body\">\r\n                        <div class=\"card-body-content\">\r\n                            <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\r\n                            <p class=\"card-title\">More</p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-arrow\" [class]=\"urlPath == 'student-more' ? 'd-block' : 'd-none'\"></div>\r\n        </div>\r\n        \r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <router-outlet name=\"detail\"></router-outlet>\r\n    </div>\r\n</div>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { StudentsService } from 'src/app/cts/shared/services/students.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { examclasswisesubjectmarks } from 'src/app/cts/shared/models/exams';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-studentmarks',\r\n  templateUrl: './studentmarks.component.html',\r\n  styleUrls: ['./studentmarks.component.scss']\r\n})\r\nexport class StudentmarksComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  classes: any;\r\n  exams: any;\r\n  radioButtonValue: string;\r\n  disabled: boolean = true;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = true;\r\n  isRequired: boolean = true;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  classDropDownValue: any;\r\n  examDropDownValue: any;\r\n  studentID: any;\r\n  classID:any = 0;\r\n  formObj: any;\r\n  validateForm:boolean = false;\r\n  name = 'Angular';\r\n  fields: any[];\r\n\r\n  dynamicForm: FormGroup;\r\n  constructor(private studentsService: StudentsService,private route: ActivatedRoute) {    \r\n   \r\n  }\r\n  ngOnInit(): void {\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {     \r\n      this.studentID = window.atob(params['id']);      \r\n    });\r\n\r\n     //Get Dropdowns API call\r\n     let jsonData = JSON.stringify({\r\n      dropdownfor :\"classes\",\r\n      id: this.studentID,\r\n      classid:this.classID\r\n    })\r\n    this.studentsService.getDropdowns(jsonData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.classes = result.data.classes;\r\n        }\r\n      });\r\n    this.radioButtonValue = 'P';\r\n  }\r\n\r\n  editControls(): void {\r\n    this.isDisabled = false;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    let marksArray=[];\r\n    if (this.dynamicForm.valid) {\r\n      this.formSubmitAttempt = false;    \r\n       for(let object of this.fields){\r\n        var key = object.label;\r\n        var formObject = this.dynamicForm.value;\r\n        let customObj = new examclasswisesubjectmarks();\r\n        customObj.classId = this.classDropDownValue;\r\n        customObj.examId = this.examDropDownValue;\r\n        customObj.studentId=this.studentID;\r\n        customObj.subjectId =object.id;\r\n        customObj.marks = formObject[key];\r\n        marksArray.push(customObj);\r\n      }\r\n      this.studentsService.SubmitStudentClassWiseExamMarks(marksArray)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.successMessage = AppConstants.Messages.successMessage;\r\n        }else{\r\n          this.errorMessage = AppConstants.Messages.errorMessage;\r\n        }\r\n      });\r\n    }\r\n  }\r\n   \r\n  resetForm(): void {\r\n    this.dynamicForm.reset();\r\n    this.successMessage = \"\";\r\n    this.errorMessage = \"\";\r\n  }\r\n  _keyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    let inputChar = String.fromCharCode(event.charCode);\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  classesdropdownChange(event): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.classDropDownValue = event.value;\r\n     //Get Dropdowns API call\r\n     let jsonData = JSON.stringify({\r\n      dropdownfor :\"exams\",\r\n      id: this.studentID,\r\n      classid:this.classDropDownValue \r\n    })\r\n    this.studentsService.getDropdowns(jsonData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.exams = result.data.exams;\r\n        }\r\n      });\r\n    this.GetStudentClassWiseExamMarks(this.classDropDownValue, this.examDropDownValue);\r\n  }\r\n  examsdropdownChange(event): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.examDropDownValue = event.value;\r\n    this.GetStudentClassWiseExamMarks(this.classDropDownValue, this.examDropDownValue);\r\n  }\r\n  GetStudentClassWiseExamMarks(classvalue, examvalue) {\r\n    this.validateForm = false;\r\n    if (classvalue > 0 && examvalue > 0) {\r\n      let jsonData = JSON.stringify({\r\n        classid: classvalue,\r\n        examid: examvalue,\r\n        id: this.studentID,        \r\n        type:\"MARKS\"\r\n      })\r\n      this.studentsService.GetStudentClassWiseExamMarks(jsonData,\"MARKS\")\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            \r\n            if(result.data.length > 0){\r\n              this.validateForm= true;\r\n            this.fields = result.data;\r\n            const controls = {};\r\n            this.fields.forEach(res => {\r\n              const validationsArray = [];\r\n              validationsArray.push(\r\n                Validators.required\r\n              );\r\n\r\n              controls[res.label] = new FormControl('', validationsArray);\r\n            });\r\n            this.dynamicForm = new FormGroup(\r\n              controls\r\n            );\r\n            var object = {};\r\n            this.fields.forEach(function (value) {\r\n              object[value.label] = value.securedMarks;\r\n            });\r\n            this.dynamicForm.setValue(object)\r\n          }\r\n\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row student-marks-container info-container\">\r\n    <div class=\"col-md-12 profile-title\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h4><i class=\"fa fa-user\" aria-hidden=\"true\"></i> Student Marks</h4>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <p-dropdown [options]=\"classes\" class=\"w-100\" (onChange)=\"classesdropdownChange($event)\"\r\n                    placeholder=\"Select Class\" filter=\"true\"></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <p-dropdown [options]=\"exams\" filter=\"true\" (onChange)=\"examsdropdownChange($event)\" class=\"w-100\"\r\n                    placeholder=\"Select Exam\"></p-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-circle\"></i>\r\n                <b>{{errorMessage}}</b>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-check\"></i>\r\n                <b>{{successMessage}}</b>\r\n            </div>\r\n        </div>\r\n        <form [formGroup]=\"dynamicForm\" (ngSubmit)=\"onSubmit()\" novalidate *ngIf=\"validateForm\">\r\n            <div class=\"row search-box search-box-padding form-block\">\r\n                <ng-container *ngFor=\"let controls of fields\">\r\n                    <div class=\"col-md-4\">\r\n                        <span>\r\n                            {{controls.label}}\r\n                        </span><br>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-8\">\r\n                                <input maxlength=\"3\" class=\"w-100\" (keypress)=_keyPress($event)\r\n                                    [attr.disabled]=\"isDisabled ? 'disabled': null\" [type]=\"controls.type\"\r\n                                    [formControlName]=\"controls.label\" [placeholder]=\"controls.label\" pInputText\r\n                                    [ngClass]=\"{'error':((!dynamicForm.controls[controls.label].valid && dynamicForm.controls[controls.label].touched) || \r\n                        (!dynamicForm.controls[controls.label].valid && dynamicForm.controls[controls.label].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <p class=\"outofmarks\">Out of <b>{{controls.total}}</b></p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12 error-block\" *ngIf=\"((!dynamicForm.controls[controls.label].valid && dynamicForm.controls[controls.label].touched)|| \r\n                        (!dynamicForm.controls[controls.label].valid && dynamicForm.controls[controls.label].untouched && \r\n                        formSubmitAttempt))\">\r\n                            <div class=\"col-md-12 error-div\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(dynamicForm.controls[controls.label].errors?.required)\">Enter\r\n                                    \"{{controls.label}}\" Marks</span>\r\n                                <!-- {{dynamicForm.get[controls.label].value}}\r\n                                    {{controls.total}}\r\n                                    <span *ngIf=\"(dynamicForm.controls[controls.label].value > controls.total)\">\r\n                                        Secured Marks should not be greater than total</span> -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4  required-block\">\r\n                    <span class=\"required\">\r\n                        <span class=\"requirednote\">Required</span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"col-md-8 text-right\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-pencil\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                        (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                    <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                        (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div class=\"\" *ngIf=\"!validateForm\">\r\n            <div class=\"col-md-12 text-center p-4\">\r\n                <img class=\"img-fluid nav-school-logo\" src=\"./assets/images/no_data_found.png\">\r\n                <p><b>Looks there are no marks with the above criteria.</b></p>\r\n                <p><b>Please change the above criteria to update or view marks.</b></p>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-studentmore',\r\n  templateUrl: './studentmore.component.html',\r\n  styleUrls: ['./studentmore.component.scss']\r\n})\r\nexport class StudentmoreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-12 text-center\">\r\n    <img _ngcontent-vsp-c92=\"\" src=\"./assets/images/coming-soon.jpg\" class=\"img-fluid image-logo\">\r\n</div>","import { Component, OnInit, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { TabView } from 'primeng/tabview';\r\nimport { StudentsService } from 'src/app/cts/shared/services/students.service';\r\nimport { LazyLoadEvent } from 'primeng/api';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { SubjectWiseMarks } from 'src/app/cts/shared/models/students';\r\nimport { HttpEventType } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-studentprofile',\r\n  templateUrl: './studentprofile.component.html',\r\n  styleUrls: ['./studentprofile.component.scss']\r\n})\r\nexport class StudentprofileComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  basic: any;\r\n  personal: any;\r\n  academic: any[];\r\n  gaurdian: any;\r\n  address: any;\r\n  examwisesubjects:any[];\r\n  selectedIndex = 0;\r\n  //class variable\r\n  @ViewChild(TabView) tabView: TabView;\r\n\r\n  //pagination and api integration starts from here\r\n  numberOfPages: number = 10;\r\n  totalcount: number = 0;\r\n  noOfItems = 1;\r\n  advancedFilterValue: string = \"\";\r\n  currentPage: number = 1;\r\n  pageCount: number;\r\n  totalRecords: number;\r\n  cols: any[];\r\n  studentId:string;\r\n\r\n  public progress: number;\r\n  public message: string;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n  constructor(private studentsService: StudentsService,private route: ActivatedRoute) {\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cols = [\r\n      { field: 'classname', header: 'Class Name' },\r\n      { field: 'examtitle', header: 'Exam' },\r\n      { field: 'marks', header: 'Marks' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {     \r\n      this.studentId = window.atob(params['id']);      \r\n    });\r\n\r\n     //Get Student Profile Details\r\n     var studentProfileOptions = [\"Basic\", \"Personal\",\"Address\",\"Gaurdian\"];\r\n     this.studentsService.GetStudentProfile(studentProfileOptions,this.studentId)\r\n       .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n         if (result.success) {\r\n           this.basic = result.data.Basic[0];\r\n           this.personal = result.data.Personal[0];\r\n           this.address = result.data.Address[0];\r\n           this.gaurdian = result.data.Gaurdian[0];\r\n         }\r\n       });\r\n  }\r\n\r\n  tabChange($event) {\r\n    this.selectedIndex = $event.index;\r\n    this.GetPanelDetails(this.tabView.tabs[this.selectedIndex].header);\r\n    // this.GetPanelDetails(\"Academic\");\r\n  }\r\n\r\n  GetPanelDetails(tabPanel) {\r\n    //Get Dropdowns API call  \r\n    var tabPanels = [];\r\n    tabPanels.push(tabPanel)\r\n    this.studentsService.GetStudentProfile(tabPanels,this.studentId)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          if (tabPanel == \"Academic\") {\r\n            this.academic = result.data.Academic;\r\n          }\r\n          else if (tabPanel == \"Address\") {\r\n            this.address = result.data.Address[0];\r\n          }\r\n          else if (tabPanel == \"Gaurdian\") {\r\n            this.gaurdian = result.data.Gaurdian[0];\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  //API Integration ends here\r\n  rowExpand(event, data) {\r\n\r\n    let customObj = new SubjectWiseMarks();\r\n    customObj.id = event.data.id;\r\n    customObj.classid = event.data.classid;\r\n    customObj.examid = event.data.examid;\r\n    \r\n    this.studentsService.GetExamWiseSubjectMarks(customObj)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.examwisesubjects = result.data;\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  public uploadFile = (files) => {\r\n    if (files.length === 0) {\r\n      return;\r\n    }\r\n    let fileToUpload = <File>files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    this.studentsService.StudentProfilePicUpload(formData)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(\r\n      event => {\r\n        if (event.type === HttpEventType.UploadProgress)\r\n          this.progress = Math.round(100 * event.loaded / event.total);\r\n        else if (event.type === HttpEventType.Response) {\r\n          this.message = 'Upload success.';\r\n          this.onUploadFinished.emit(event.body);\r\n        }\r\n      }\r\n    );\r\n\r\n\r\n\r\n    // this.http.post('https://localhost:5001/api/upload', formData, {reportProgress: true, observe: 'events'})\r\n    //   .subscribe(event => {\r\n    //     if (event.type === HttpEventType.UploadProgress)\r\n    //       this.progress = Math.round(100 * event.loaded / event.total);\r\n    //     else if (event.type === HttpEventType.Response) {\r\n    //       this.message = 'Upload success.';\r\n    //       this.onUploadFinished.emit(event.body);\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"row student-profile-container info-container right-arrow\">\r\n  <div class=\"col-md-12 profile-title\">\r\n    <h4><i class=\"fa fa-user\" aria-hidden=\"true\"></i> Student Profile</h4>\r\n  </div>\r\n  <div class=\"col-md-3\">\r\n    <table class=\"table table-sm table-bordered table-striped \">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\" colspan=\"2\" class=\"image-div student-container\">            \r\n            <img _ngcontent-vsp-c92=\"\" src=\"./assets/images/avatar.png\" class=\"img-fluid image-logo\">\r\n            <input type=\"file\" #file placeholder=\"Choose file\" (change)=\"uploadFile(file.files)\" style=\"display:none;\">\r\n            <a download=\"new-filename\"><i class=\"pi pi-pencil\" (click)=\"file.click()\"></i></a>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"this.basic\">\r\n        <tr *ngIf=\"progress > 0 || message\">\r\n          <th>   \r\n            <span class=\"upload\">\r\n              {{progress}}%\r\n            </span>        \r\n          </th>\r\n          <td>\r\n            <span class=\"upload\">\r\n              {{message}}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Student Id</th>\r\n          <td>{{this.basic.id}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Name</th>\r\n          <td>{{this.basic.studentname}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Class</th>\r\n          <td>{{this.basic.classs}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Section</th>\r\n          <td>{{this.basic.section}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Email</th>\r\n          <td class=\"word-break\">{{this.basic.email}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Mobile</th>\r\n          <td>{{this.basic.mobile}}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"row\">Status</th>\r\n          <td>\r\n            <div class=\"\"  *ngIf=\"this.basic.status == 'AC'\">\r\n              <button class=\"btn btn-success\">Active</button>\r\n          </div>\r\n          <div class=\"\"  *ngIf=\"this.basic.status == 'NA'\">\r\n              <button class=\"btn btn-danger\">Not Active</button>\r\n          </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"col-md-9\">\r\n    <p-tabView (onChange)=\"tabChange($event)\">\r\n      <p-tabPanel header=\"Personal\" leftIcon=\"pi pi-user\">\r\n        <div class=\"col-md-12 profile-title\">\r\n          <h6><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Personal Details</h6>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <table class=\"table  table-bordered table-striped\">\r\n            <tbody *ngIf=\"this.personal\">\r\n              <tr>\r\n                <th scope=\"row\">First Name</th>\r\n                <td>{{this.personal.firstname}}</td>\r\n                <th scope=\"row\">Last Name</th>\r\n                <td>{{this.personal.lastname}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Middle Name</th>\r\n                <td>{{this.personal.middlename}}</td>\r\n                <th scope=\"row\">Gender</th>\r\n                <td>{{this.personal.gender}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date Of Birth</th>\r\n                <td>{{this.personal.dob}}</td>\r\n                <th scope=\"row\">Nationality</th>\r\n                <td>{{this.personal.nationality}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Admission Category</th>\r\n                <td>{{this.personal.admissioncategory}}</td>\r\n                <th scope=\"row\">Religion</th>\r\n                <td>{{this.personal.religion}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Blood Group</th>\r\n                <td>{{this.personal.bloodgroup}}</td>\r\n                <th scope=\"row\">Birth Place</th>\r\n                <td>{{this.personal.birthplace}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Languages</th>\r\n                <td colspan=\"3\">{{this.personal.languages}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"Academic\" leftIcon=\"pi pi-inbox\">\r\n        <div class=\"col-md-12 profile-title\">\r\n          <h6><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Academic Details</h6>\r\n        </div>\r\n        <div class=\"col-md-12 clienttable\">          \r\n          <p-table #dt [columns]=\"cols\" [value]=\"academic\" [lazy]=\"true\" rowExpandMode=\"single\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" [totalRecords]=\"totalcount\" [reorderableColumns]=\"true\"\r\n            dataKey=\"classname\" (onRowExpand)=\"rowExpand($event,dt)\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n              <tr>\r\n                <th style=\"width:2.5em\"></th>\r\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                  style=\"width: 20% !important;\">\r\n                  <div class=\"\">\r\n                    {{col.header}}\r\n                    <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowIndex=\"rowIndex\" let-rowData let-columns=\"columns\"\r\n              let-expanded=\"expanded\">\r\n              <tr>\r\n                <td>\r\n                  <a href=\"#\" [pRowToggler]=\"rowData\">\r\n                    <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                  </a>\r\n                </td>\r\n                <td *ngFor=\"let col of columns\">\r\n                  <a class=\"bold\">{{rowData[col.field]}}</a>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"rowexpansion\" let-rowData let-columns=\"columns\">\r\n              <tr class=\"expansion-div\">\r\n                <td [attr.colspan]=\"columns.length + 1\">\r\n                  <div class=\"ui-fluid\">\r\n                    <div class=\"row\">                    \r\n                     <div class=\"col-md-6\" *ngFor=\"let subject of examwisesubjects\">\r\n                      <fieldset class=\"fieldset\">\r\n                        <legend class=\"legend\">{{subject.subject}}:</legend>\r\n                        <div class=\"row col-md-12 labelstyles\">\r\n                          <div class=\"col-md-3\">\r\n                            Total\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            Cutoff\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            Secured\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            Status\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row col-md-12 marksstyles\">\r\n                          <div class=\"col-md-3\">\r\n                            <b>{{subject.totalmarks}}</b>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <b>{{subject.cutoffmarks}}</b>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <b>{{subject.obtainedmarks}}</b>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <div *ngIf=\"subject.status =='1'\">\r\n                              <button class=\"btn btn-danger\">Fail</button>\r\n                            </div>\r\n                            <div *ngIf=\"subject.status =='0'\">\r\n                              <button class=\"btn btn-success\">Pass</button>\r\n\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </fieldset>\r\n                     </div>     \r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-template>\r\n          </p-table>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"Gaurdian\" leftIcon=\"pi pi-user\">\r\n        <div class=\"col-md-12 profile-title\">\r\n          <h6><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Gaurdian Details</h6>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <table class=\"table  table-bordered table-striped\">\r\n            <tbody *ngIf=\"this.gaurdian\">\r\n              <tr>\r\n                <th scope=\"row\">First Name</th>\r\n                <td>{{ this.gaurdian.firstname}}</td>\r\n                <th scope=\"row\">Last Name</th>\r\n                <td>{{ this.gaurdian.lastname}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Middle Name</th>\r\n                <td>{{ this.gaurdian.middlename}}</td>\r\n                <th scope=\"row\">Gender</th>\r\n                <td>{{ this.gaurdian.gender}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Mobile Number</th>\r\n                <td>{{ this.gaurdian.mobile}}</td>\r\n                <th scope=\"row\">Email</th>\r\n                <td>{{ this.gaurdian.email}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"Address\" leftIcon=\"pi pi-id-card\">\r\n        <div class=\"col-md-12 profile-title\">\r\n          <h6><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Address</h6>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <table class=\"table  table-bordered table-striped\">\r\n            <thead>\r\n              <th colspan=\"4\" class=\"text-center\">Current Details</th>\r\n            </thead>\r\n            <tbody *ngIf=\"this.address\">\r\n              <tr>\r\n                <th scope=\"row\">D-no</th>\r\n                <td>{{this.address.ctcstudent_dno_c}}</td>\r\n                <th scope=\"row\">Street</th>\r\n                <td>{{this.address.ctcstudent_street_c}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Village</th>\r\n                <td>{{this.address.ctcstudent_village_c}}</td>\r\n                <th scope=\"row\">City</th>\r\n                <td>{{this.address.ctcstudent_city_c}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">State</th>\r\n                <td>{{this.address.ctcstudent_state_c}}</td>\r\n                <th scope=\"row\">Country</th>\r\n                <td>{{this.address.ctcstudent_country_c}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Pincode</th>\r\n                <td>{{this.address.ctcstudent_pincode_c}}</td>\r\n                <th scope=\"row\">Phone no</th>\r\n                <td>{{this.address.ctcstduent_home_ph_c}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table class=\"table  table-bordered table-striped\">\r\n            <thead>\r\n              <th colspan=\"4\" class=\"text-center\">Perminant Details</th>\r\n            </thead>\r\n            <tbody  *ngIf=\"this.address\">\r\n              <tr>\r\n                <th scope=\"row\">D-no</th>\r\n                <td>{{this.address.ctcstudent_dno_p}}</td>\r\n                <th scope=\"row\">Street</th>\r\n                <td>{{this.address.ctcstudent_street_p}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">City</th>\r\n                <td>{{this.address.ctcstudent_city_p}}</td>\r\n                <th scope=\"row\">Village</th>\r\n                <td>{{this.address.ctcstudent_village_p}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">State</th>\r\n                <td>{{this.address.ctcstudent_state_p}}</td>\r\n                <th scope=\"row\">Country</th>\r\n                <td>{{this.address.ctcstudent_country_p}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Pincode</th>\r\n                <td>{{this.address.ctcstudent_pincode_p}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"Documents\" leftIcon=\"pi pi-clone\">\r\n        <div class=\"col-md-12 profile-title\">\r\n          <h6><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Documents</h6>\r\n        </div>\r\n        <div class=\"col-md-12 text-center\">\r\n          <h5>Currently no documents found.</h5>\r\n        </div>\r\n      </p-tabPanel>\r\n      <p-tabPanel header=\"Fees\" leftIcon=\"pi pi-money-bill\">\r\n        <div class=\"col-md-12 profile-title\">\r\n          <h6><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Fee Details</h6>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <table class=\"table  table-bordered table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th rowspan=\"2\" class=\"text-center\">Year</th>\r\n                <th colspan=\"4\" class=\"text-center\">Fee for</th>\r\n                <th rowspan=\"2\" class=\"text-center\">Payble </th>\r\n                <th rowspan=\"2\" class=\"text-center\">Paid </th>\r\n              </tr>\r\n              <tr>\r\n                <th colspan=\"1\">Tution</th>\r\n                <th colspan=\"1\">Bus</th>\r\n                <th colspan=\"1\">Exams</th>\r\n                <th colspan=\"1\">Uniform</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>2019-20</td>\r\n                <td>15000</td>\r\n                <td>10000</td>\r\n                <td>1500</td>\r\n                <td>500</td>\r\n                <td>25000</td>\r\n                <td>25000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>2018-19</td>\r\n                <td>15000</td>\r\n                <td>10000</td>\r\n                <td>1500</td>\r\n                <td>500</td>\r\n                <td>25000</td>\r\n                <td>25000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>2017-18</td>\r\n                <td>15000</td>\r\n                <td>10000</td>\r\n                <td>1500</td>\r\n                <td>500</td>\r\n                <td>25000</td>\r\n                <td>25000</td>\r\n              </tr>\r\n              <tr>\r\n                <td>2016-17</td>\r\n                <td>15000</td>\r\n                <td>10000</td>\r\n                <td>1500</td>\r\n                <td>500</td>\r\n                <td>25000</td>\r\n                <td>25000</td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </p-tabPanel>\r\n    </p-tabView>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { StudentreportsService } from 'src/app/cts/shared/services/studentreports.service';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Studentreports } from 'src/app/cts/shared/models/studentreports';\r\nimport { StudentsService } from 'src/app/cts/shared/services/students.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-studentreports',\r\n  templateUrl: './studentreports.component.html',\r\n  styleUrls: ['./studentreports.component.scss']\r\n})\r\nexport class StudentreportsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  studentreports: Studentreports[];\r\n  classes: any;\r\n  exams: any;\r\n  cols: any[];\r\n  datasource: Studentreports[];\r\n  totalRecords: number;\r\n  loading: boolean;\r\n  studentID: any;\r\n  classID:any = 0;  \r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";  \r\n  classDropDownValue: any;\r\n  examDropDownValue: any;\r\n  reportsData:any;\r\n  subjects:any[]=[];\r\n  constructor(private route: ActivatedRoute,private fb: FormBuilder,private studentreportsService: StudentreportsService,private studentsService: StudentsService) {\r\n    \r\n\r\n   }\r\n\r\n  ngOnInit(): void {   \r\n    this.cols = [\r\n      { field: 'subject', header: 'Subject' },\r\n      { field: 'obtained', header: 'Marks Obtained' },\r\n      { field: 'cutoff', header: 'Cut Off' },\r\n      { field: 'total', header: 'Total Marks' },\r\n      { field: 'status', header: 'Status' }\r\n    ];    \r\n    this.loading = true;\r\n\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {     \r\n      this.studentID = window.atob(params['id']);      \r\n    });\r\n\r\n     //Get Dropdowns API call\r\n     let jsonData = JSON.stringify({\r\n      dropdownfor :\"classes\",\r\n      id: this.studentID,\r\n      classid:this.classID\r\n    })\r\n    this.studentsService.getDropdowns(jsonData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.classes = result.data.classes;\r\n        }\r\n      });\r\n  }\r\n\r\n  classesdropdownChange(event): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.classDropDownValue = event.value;\r\n     //Get Dropdowns API call\r\n     let jsonData = JSON.stringify({\r\n      dropdownfor :\"exams\",\r\n      id: this.studentID,\r\n      classid:this.classDropDownValue \r\n    })\r\n    this.studentsService.getDropdowns(jsonData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.exams = result.data.exams;\r\n        }\r\n      });\r\n    this.GetStudentClassWiseExamMarks(this.classDropDownValue, this.examDropDownValue);\r\n  }\r\n  examsdropdownChange(event): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.examDropDownValue = event.value;\r\n    this.GetStudentClassWiseExamMarks(this.classDropDownValue, this.examDropDownValue);\r\n  }\r\n  GetStudentClassWiseExamMarks(classvalue, examvalue) {\r\n    if (classvalue > 0 && examvalue > 0) {\r\n      let jsonData = JSON.stringify({\r\n        classid: classvalue,\r\n        examid: examvalue,\r\n        id: this.studentID,\r\n        type:\"REPTS\"\r\n      })\r\n      this.studentsService.GetStudentClassWiseExamMarks(jsonData,\"REPTS\")\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {         \r\n           this.reportsData = result.data[0];\r\n           this.subjects = result.data[0].subjects;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"row student-reports-container info-container\">\r\n    <div class=\"col-md-12 profile-title\">\r\n        <!-- <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h4><i class=\"fa fa-user\" aria-hidden=\"true\"></i> Student Reports</h4>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <p-dropdown [options]=\"years\" class=\"w-100\" placeholder=\"Select Class\" filter=\"true\"></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <p-dropdown [options]=\"exams\" filter=\"true\" class=\"w-100\" placeholder=\"Select Exam\"></p-dropdown>\r\n            </div>\r\n        </div> -->\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h4><i class=\"fa fa-user\" aria-hidden=\"true\"></i> Student Reports</h4>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <p-dropdown [options]=\"classes\" class=\"w-100\" (onChange)=\"classesdropdownChange($event)\"\r\n                    placeholder=\"Select Class\" filter=\"true\"></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <p-dropdown [options]=\"exams\" filter=\"true\" (onChange)=\"examsdropdownChange($event)\" class=\"w-100\"\r\n                    placeholder=\"Select Exam\"></p-dropdown>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n        <div class=\"report-card-div p-4\" *ngIf=\"subjects.length > 0\">\r\n            <div class=\"col-md-12\">\r\n                <h3 class=\"text-center font-weight-bold\">REPORT CARD</h3>\r\n                <button pButton type=\"button\" icon=\"pi pi-share-alt\" label=\"Share\"\r\n                class=\"ui-button-secondary table-header-items\" style=\"float: right;margin-top: -30px;\"></button>\r\n            </div>\r\n            <div class=\"col-md-12 row\">\r\n                <div class=\"col-md-9 \">\r\n                    <div class=\"row col-md-12 d-flex p-1\">\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"label\">Phone</div>\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\">: {{this.reportsData.mobile}}</div>\r\n                        </div>                        \r\n                    </div>\r\n                    <div class=\"row col-md-12 d-flex p-1\">\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"label\">Email</div>\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\">: {{this.reportsData.email}}</div>\r\n                        </div> \r\n                    </div>\r\n                    <div class=\"row col-md-12 p-1\">\r\n                        <div class=\"col-md-2\">\r\n                            <div class=\"label\">Address</div>\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\">: {{this.reportsData.d_no}},</div>\r\n                        </div> \r\n                        <div class=\"col-md-2\">\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\"> {{this.reportsData.street}},</div>\r\n                        </div> \r\n                        <div class=\"col-md-2\">\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\"> {{this.reportsData.village}},</div>\r\n                        </div> \r\n                        <div class=\"col-md-2\">\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\">{{this.reportsData.city}},</div>\r\n                        </div> \r\n\r\n                        <div class=\"col-md-2\">\r\n                        </div>\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"value\">{{this.reportsData.pincode}}.</div>\r\n                        </div> \r\n                        \r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                   \r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <img class=\"img-fluid nav-school-logo\" style=\"height: 170px;\" src=\"./assets/images/ssc.jpg\">\r\n\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <div class=\"col-md-12\">\r\n                <table class=\"table  table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\" colspan=\"2\">Name of the Student</th>\r\n                            <td colspan=\"4\">{{this.reportsData.studentname}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Date of Birth</th>\r\n                            <td>{{this.reportsData.dob}}</td>\r\n                            <th scope=\"row\">Class</th>\r\n                            <td>{{this.reportsData.classname}}</td>\r\n                            <th scope=\"row\">Attendance %</th>\r\n                            <td>89</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\" colspan=\"6\" class=\"text-center\">MARKS OF EACH SUBJECT </th>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <p-table #dt [columns]=\"cols\" [value]=\"subjects\" [rows]=\"10\" [totalRecords]=\"totalRecords\"\r\n                    [responsive]=\"true\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n                    <ng-template pTemplate=\"header\" let-columns>\r\n                        <tr>\r\n                            <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                                style=\"width: 20% !important;\">\r\n                                <div class=\"\">\r\n                                    {{col.header}}\r\n                                    <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                        <tr>\r\n                            <td *ngFor=\"let col of columns\">\r\n                                {{rowData[col.field]}}\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"\" *ngIf=\"subjects.length <= 0\">\r\n            <div class=\"col-md-12 text-center p-4\">\r\n                <img class=\"img-fluid nav-school-logo\" src=\"./assets/images/no_data_found.png\">\r\n                <p><b>Looks there are no reports with the above criteria.</b></p>\r\n                <p><b>Please change the above criteria to view report.</b></p>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n    </div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Students } from 'src/app/cts/shared/models/students';\r\nimport { StudentsService } from 'src/app/cts/shared/services/students.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';;\r\nimport { Gender, Class123 } from 'src/app/cts/shared/models/gender';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { Table } from 'primeng/table';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\n\r\n@Component({\r\n  selector: 'app-students',\r\n  templateUrl: './students.component.html',\r\n  styleUrls: ['./students.component.scss'],\r\n  animations: [\r\n    trigger('rowExpansionTrigger', [\r\n        state('void', style({\r\n            transform: 'translateX(-10%)',\r\n            opacity: 0\r\n        })),\r\n        state('active', style({\r\n            transform: 'translateX(0)',\r\n            opacity: 1\r\n        })),\r\n        transition('* <=> *', animate('1500ms cubic-bezier(0.1, 0, 0.07, 1)'))\r\n    ])\r\n]\r\n})\r\nexport class StudentsComponent implements OnInit {\r\n\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Students[];\r\n\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n\r\n  students: Students[];\r\n\r\n  totalRecords: number;\r\n\r\n  cols: any[];\r\n  sub: any;\r\n  selectedColumns: any[];\r\n\r\n  loading: boolean;\r\n  display: boolean = false;\r\n  position: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n\r\n  colors: SelectItem[];\r\n  gender: any[];\r\n  classes: any[];\r\n  toBeDeletedId:any;\r\n\r\n   //to create Teacher From \r\n   filtersForm: FormGroup;\r\n   //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private StudentsService: StudentsService, private router: Router, private route: ActivatedRoute, private fb: FormBuilder) {\r\n    this.gender = [\r\n      { label: 'Male', value: 'M' },\r\n      { label: 'Female', value: 'F' }\r\n    ];\r\n    this.classes = [\r\n      { label: '1st Class', value: '1' },\r\n      { label: '2nd Class', value: '2' },\r\n      { label: '3rd Class', value: '3' },\r\n      { label: '4th Class', value: '4' },\r\n      { label: '5th Class', value: '5' }\r\n    ];\r\n  }\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n  public ngOnInit() {\r\n  \r\n    this.cols = [\r\n      { field: 'id', header: 'ID' },\r\n      { field: 'firstname', header: 'Name' },\r\n      { field: 'gender', header: 'Gender' },\r\n      { field: 'dob', header: 'Date Of Birth' },\r\n      { field: 'email', header: 'Email' },\r\n      { field: 'classs', header: 'Class' },\r\n      { field: 'branch', header: 'Branch ' },\r\n      { field: 'createdby', header: 'Createdby' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n\r\n    this.colors = [\r\n      { label: 'White', value: 'White' },\r\n      { label: 'Green', value: 'Green' },\r\n      { label: 'Silver', value: 'Silver' },\r\n      { label: 'Black', value: 'Black' },\r\n      { label: 'Red', value: 'Red' },\r\n      { label: 'Maroon', value: 'Maroon' },\r\n      { label: 'Brown', value: 'Brown' },\r\n      { label: 'Orange', value: 'Orange' },\r\n      { label: 'Blue', value: 'Blue' }\r\n    ];\r\n   \r\n\r\n //to create form with validations\r\n this.createFilterForm()\r\n\r\n    // FilterUtils['custom'] = (value, filter): boolean => {\r\n    //     if (filter === undefined || filter === null || filter.trim() === '') {\r\n    //         return true;\r\n    //     }\r\n\r\n    //     if (value === undefined || value === null) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     return parseInt(filter) > value;\r\n    // }\r\n   \r\n  }\r\n//Api Integration Starts from here\r\nonPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  this.StudentsService.getStudents(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.students= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.students != null && this.students != undefined){\r\n      this.students = this.students.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n  rowExpand(event, data) {\r\n    // this.router.navigate(['student',{ outlets: { detail: ['student-profile'] } }], {relativeTo: this.route});\r\n    this.router.navigate(['student',{ outlets: { detail: ['student-profile'] } }], { relativeTo: this.route,\r\n      queryParams: { \r\n        id: window.btoa(event.data.id) }\r\n     });\r\n  }\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id=\"0\";\r\n    this.router.navigate(['add-student'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n  }\r\n  editStudent(id):void{\r\n    this.router.navigate(['add-student'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n  }\r\n  viewStudent(id):void{\r\n    this.router.navigate(['add-student'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n  }\r\n  deleteStudent(id): void {\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  studentRevoke(): void {\r\n    this.display=false;\r\n    let customObj = new Students();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.StudentsService.AEDStudents(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {  \r\n        this.DataTable.reset();     \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n //Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n   createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tname': new FormControl(''),\r\n      'tgender': new FormControl(''),\r\n      'tdateOfbirth': new FormControl(''),\r\n      'temail': new FormControl(''),\r\n      'tclass': new FormControl('')\r\n    });\r\n  }\r\n\r\n// Add Teacher method\r\n  filterSubmit(): void {\r\n    console.log(this.filtersForm.value);\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getAngularDateFormat())\r\n   }\r\n   checkPermissions(permissionValue){\r\n    return  AuthorizationGuard.checkPermission(permissionValue);\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Students</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Student\"\r\n                    class=\"ui-button-secondary table-header-items\" *ngIf=\"checkPermissions('ADD')\" (click)=\"addNew($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\"  (ngSubmit)=\"filterSubmit()\">\r\n    <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n        <div class=\"row search-box search-box-padding\">            \r\n            <div class=\"col-md-3\">\r\n                <span>Student Name</span><br>\r\n                <input id=\"name\" #nm class=\"w-100\" type=\"text\" formControlName=\"tname\" placeholder=\"Student Name\" size=\"30\"\r\n                (keydown)=\"$event.key === 'Enter' ? dt.filter(nm.value,'name',''): ''\"\r\n                pInputText>\r\n\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Gender</span><br>\r\n                <p-dropdown [options]=\"gender\" class=\"w-100\" formControlName=\"tgender\" placeholder=\"Select a Gender\" ></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Date Of Birth</span><br>\r\n                <p-calendar placeholder=\"Select Date\" formControlName=\"tdateOfbirth\" [inputStyle]=\"{'width':'100% !important'}\"  [showIcon]=\"true\"></p-calendar>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Email</span><br>\r\n                <input id=\"email\" #em class=\"w-100\" type=\"text\" formControlName=\"temail\" placeholder=\"Enter Email\" size=\"30\"\r\n                (keydown)=\"$event.key === 'Enter' ? dt.filter(em.value,'email',''): ''\"\r\n                pInputText>\r\n                \r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <span>Class</span><br>\r\n                <p-dropdown [options]=\"classes\" class=\"w-100\" formControlName=\"tclass\" placeholder=\"Select a Class\" ></p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-9 text-right search-buttons\">\r\n                <button pButton type=\"submit\" icon=\"pi pi-search\" label=\"Search\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"students\" [lazy]=\"true\" dataKey=\"id\" [paginator]=\"true\" rowExpandMode=\"single\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" (onRowExpand)=\"rowExpand($event,dt)\" >          \r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th style=\"width:2.5em\"></th>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>   \r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowIndex=\"rowIndex\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                \r\n                <tr>\r\n                    <td>\r\n                        <a href=\"#\" [pRowToggler]=\"rowData\">\r\n                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n                        </a>\r\n                    </td>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'dob'\">\r\n                            <a class=\"bold\" (click)=\"viewStudent(rowData.id)\">{{getFormat(rowData.dob)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'dob'&& col.field != 'gender'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewStudent(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <a class=\"bold\" (click)=\"viewStudent(rowData.id)\">{{rowData[col.field]}}</a> -->\r\n                        </div>   \r\n                        <div class=\"class\" *ngIf=\"col.field == 'gender'\">\r\n                            <div class=\"\" *ngIf=\"rowData.gender == 'M'\">\r\n                                Male\r\n                            </div>\r\n                            <div class=\"\" *ngIf=\"rowData.gender == 'F'\">\r\n                                Female\r\n                            </div>\r\n                        </div>                  \r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editStudent(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\"  *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteStudent(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"rowexpansion\"  let-rowData let-columns=\"columns\">\r\n                <tr class=\"expansion-div\">\r\n                    <td [attr.colspan]=\"columns.length + 2\">\r\n                        <div class=\"ui-fluid\" [@rowExpansionTrigger]=\"'active'\">\r\n                            <router-outlet></router-outlet>                            \r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n         <!-- pagination div starts from here -->\r\n         <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\" [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Student?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"studentRevoke()\" ></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>  ","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { SubjectsService } from 'src/app/cts/shared/services/subjects.service';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { Subjects } from 'src/app/cts/shared/models/subjects';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-subjects',\r\n  templateUrl: './add-subjects.component.html',\r\n  styleUrls: ['./add-subjects.component.scss']\r\n})\r\nexport class AddSubjectsComponent implements OnInit {\r\n\r\n  subjectId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addSubjectForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  querytype:number;\r\n  status: SelectItem[] = [];\r\n\r\n  \r\n  constructor(private SubjectsService: SubjectsService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute,private location: Location,private inputpattern:InputPatternService) {\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n   }\r\n\r\n  ngOnInit(): void {// On page load\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.subjectId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Subject\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Subject\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addSubjectForm = this.fb.group({\r\n      'code': new FormControl('', { validators: [Validators.required] }),\r\n      'name': new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditSubjectDetails();\r\n  }\r\n  bindEditSubjectDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.subjectId.toString();\r\n    //Get Branches API call\r\n    this.SubjectsService.getSubjects(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addSubjectForm.setValue({\r\n            'code': this.editData.code,\r\n            'name': this.editData.name,\r\n            'status': this.editData.status\r\n\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Subject\";\r\n  }\r\n\r\n  addSubjectSubmit(): void {\r\n    // this.errorMessage = \"\";\r\n    // this.successMessage = \"\";\r\n    // this.formSubmitAttempt = true;\r\n    // if (this.addSubjectForm.valid) {\r\n    //   this.formSubmitAttempt = false;\r\n    //   console.log(this.addSubjectForm.value);\r\n    //   this.addSubjectForm.reset();\r\n    //   this.successMessage = \"Your changes have been successfully saved\";\r\n    // }\r\n    \r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addSubjectForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Subjects();\r\n      customObj = this.addSubjectForm.value;\r\n      customObj.id = this.subjectId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.SubjectsService.AEDSubjects(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addSubjectForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Subject code or name already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addSubjectForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  keyPressAlphabet(event)\r\n  {\r\n     this.inputpattern.AlphaNumeric(event);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addSubjectForm\" class=\"col-md-12\" (ngSubmit)=\"addSubjectSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addSubjectForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addSubjectForm.controls['code'].valid && addSubjectForm.controls['code'].touched)|| \r\n                                (!addSubjectForm.controls['code'].valid && addSubjectForm.controls['code'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addSubjectForm.controls['code'].errors?.required)\">Enter \"Subject Code\"</span>\r\n                                \r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addSubjectForm.controls['name'].valid && addSubjectForm.controls['name'].touched)|| \r\n                                (!addSubjectForm.controls['name'].valid && addSubjectForm.controls['name'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addSubjectForm.controls['name'].errors?.required)\">Enter \"Subject Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                            *ngIf=\"((!addSubjectForm.controls['status'].valid && addSubjectForm.controls['status'].touched)|| \r\n                            (!addSubjectForm.controls['status'].valid && addSubjectForm.controls['status'].untouched && formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addSubjectForm.controls['status'].errors?.required)\">Enter \"Status\"</span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Code\r\n                </span><br>\r\n                <input id=\"input\" maxlength=\"4\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"code\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" type=\"text\" placeholder=\"Subject Code\" size=\"30\" pInputText [ngClass]=\"{'error':((!addSubjectForm.controls['code'].valid && addSubjectForm.controls['code'].touched) || \r\n                    (!addSubjectForm.controls['code'].valid && addSubjectForm.controls['code'].untouched && \r\n                    formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Name</span><br>\r\n                <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"name\"\r\n                (keypress)=\"keyPressAlphabet($event)\" type=\"text\" placeholder=\"Subject Name\" size=\"30\" pInputText [ngClass]=\"{'error':((!addSubjectForm.controls['name'].valid && addSubjectForm.controls['name'].touched) || \r\n                (!addSubjectForm.controls['name'].valid && addSubjectForm.controls['name'].untouched && \r\n                formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addSubjectForm.controls['status'].valid &&\r\n                    addSubjectForm.controls['status'].touched) || \r\n                (!addSubjectForm.controls['status'].valid && addSubjectForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>            \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Subjects } from 'src/app/cts/shared/models/subjects';\r\nimport { SubjectsService } from 'src/app/cts/shared/services/subjects.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n\r\n@Component({\r\n  selector: 'app-subjects',\r\n  templateUrl: './subjects.component.html',\r\n  styleUrls: ['./subjects.component.scss']\r\n})\r\nexport class SubjectsComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Subjects[];\r\n  subjects: Subjects[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  errorMessage:string=\"\";\r\n  successMessage:string=\"\";\r\n  display:boolean=false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  toBeDeletedId:any;\r\n  status: SelectItem[] = [];\r\n  users: any[]=[];\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private dropdownService: DropdownService,private SubjectsService: SubjectsService, private router: Router,private route:ActivatedRoute,private fb: FormBuilder) {\r\n    this.subjects = [];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"users\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.users = result.data.users;\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'code', header: 'Code' },\r\n      { field: 'name', header: 'Name' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  }\r\n\r\n \r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n\r\n  \r\n//Api Integration Starts from here\r\nonPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  this.SubjectsService.getSubjects(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.subjects= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.subjects != null && this.subjects != undefined){\r\n      this.subjects = this.subjects.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n\r\n //Crud events\r\n addNew($event: any) {\r\n  let id=\"0\";\r\n  this.router.navigate(['add-subject'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n}\r\neditSubject(id):void{\r\n  this.router.navigate(['add-subject'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n}\r\nviewSubject(id):void{\r\n  this.router.navigate(['add-subject'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n}\r\n  deleteSubject(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  subjectRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Subjects();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.SubjectsService.AEDSubjects(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {       \r\n        this.DataTable.reset();\r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n\r\n  //Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tcode': new FormControl(''),\r\n      'tname': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),    \r\n      'tusertype': new FormControl(''),     \r\n      'tstatus': new FormControl('') \r\n    });\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n   }\r\n   checkPermissions(permissionValue){\r\n    return  AuthorizationGuard.checkPermission(permissionValue);\r\n   }\r\n   getFilterFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Subjects</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Subject\"\r\n                    class=\"ui-button-secondary table-header-items\" *ngIf=\"checkPermissions('ADD')\" (click)=\"addNew($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Code</span><br>\r\n                    <input id=\"code\" #cd class=\"w-100\" type=\"text\" formControlName=\"tcode\" placeholder=\"Title\" size=\"30\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(cd.value,'code',''): ''\"\r\n                        pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Name</span><br>\r\n                    <input id=\"name\" #ne class=\"w-100\" type=\"text\" formControlName=\"tname\" placeholder=\"Title\" size=\"30\"\r\n                    (keydown)=\"$event.key === 'Enter' ? dt.filter(ne.value,'name',''): ''\"\r\n                        pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>User</span><br>\r\n                    <p-dropdown #ut [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n                    (onChange)=\"dt.filter(ut.value,'userid','')\"\r\n                        ></p-dropdown>\r\n                </div>\r\n              <div class=\"col-md-3\">\r\n                <span>Status</span><br>\r\n                <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n                (onChange)=\"dt.filter(st.value,'status','')\"\r\n                    ></p-dropdown>\r\n            </div>\r\n                <div class=\"col-md-9 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"subjects\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewSubject(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewSubject(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\"  *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editSubject(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\" *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteSubject(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n                <!-- pagination div starts from here -->\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"pagecount-dropdown\">\r\n                        <span class=\"pagecounting\">Items per page</span>\r\n                    </div>\r\n                    <div class=\"pagecount\">\r\n                        <div *ngIf=\"dt.totalRecords != 0\">\r\n                            {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                            {{dt.totalRecords}}\r\n                            Items\r\n                        </div>\r\n                        <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n                    </div>\r\n                </div>\r\n                <!-- pagination div ends here -->\r\n    </div>\r\n\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Subject?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"subjectRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { Gender } from 'src/app/cts/shared/models/gender';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { element } from 'protractor';\r\nimport { Location } from '@angular/common';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Teachers } from 'src/app/cts/shared/models/teachers';\r\nimport * as moment from 'moment';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { TeachersService } from 'src/app/cts/shared/services/teachers.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n@Component({\r\n  selector: 'app-add-teacher',\r\n  templateUrl: './add-teacher.component.html',\r\n  styleUrls: ['./add-teacher.component.scss']\r\n})\r\nexport class AddTeacherComponent implements OnInit {\r\n  branches: SelectItem[] = [];\r\n  gender: SelectItem[] = [];\r\n  qualification: SelectItem[] = [];\r\n  experience: SelectItem[] = [];\r\n  teacherId: string;\r\n  formType: string;\r\n  pageTitle: string;\r\n  editData: any;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  expertiseIn: SelectItem[] = [];\r\n  associatedClasses: SelectItem[] = [];\r\n  associatedSections: SelectItem[] = [];\r\n  private ngUnsubscribe = new Subject();\r\n  //to create Teacher From \r\n  addTeacherForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n\r\n  querytype:number;\r\n\r\n  \r\n\r\n  constructor(private teachersService:TeachersService, private dropdownService: DropdownService,private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n    \r\n       //Get Dropdowns API call\r\n       var dropdowns = [\"branches\",\"qualifications\",\"experiences\",\"sections\",\"subjects\",\"classes\"];\r\n       this.dropdownService.getDropdowns(dropdowns)\r\n       .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n         if (result.success) {\r\n          this.expertiseIn = result.data.subjects;\r\n          this.associatedClasses = result.data.classes;\r\n          this.qualification = result.data.qualifications;\r\n          this.associatedSections = result.data.sections;\r\n          this.experience = result.data.experiences;\r\n          this.branches = result.data.branches;\r\n         }\r\n        \r\n       });  \r\n\r\n       this.gender=[\r\n         {\"label\":\"Male\",\"value\":\"M\"},\r\n         {\"label\":\"Female\",\"value\":\"F\"}        \r\n       ]\r\n    \r\n  }\r\n\r\n  \r\n\r\n  ngOnInit(): void {\r\n    // On page load\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.teacherId = window.atob(params['id']);\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Teacher\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Teacher\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n    }\r\n\r\n  }\r\n  //Create form method to constuct a form with validations\r\n  createForm() {\r\n    this.addTeacherForm = this.fb.group({\r\n      'teacherName': new FormControl('', { validators: [Validators.required, Validators.pattern('^([A-Za-z0-9 _\\'-])*$')] }),\r\n      'branch': new FormControl('', { validators: [Validators.required] }),\r\n      'dateofbirth': new FormControl('', { validators: [Validators.required] }),\r\n      'gender': new FormControl('', { validators: [Validators.required] }),\r\n      'qualification': new FormControl('', { validators: [Validators.required] }),\r\n      'experience': new FormControl(''),\r\n      'mobile': new FormControl('', { validators: [Validators.required, Validators.pattern('[0-9]\\\\d{9}')] }),\r\n      'email': new FormControl('', { validators: [Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")] }),\r\n      'expertiseIn': new FormControl('', { validators: [Validators.required] }),\r\n      'associatedClasses': new FormControl('', { validators: [Validators.required] }),\r\n      'associatedSections': new FormControl('', { validators: [Validators.required] })\r\n    });\r\n  }\r\n  //to fetch data when edit teacher\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditTeacherDetails();\r\n  }\r\n  // loadGender(datalist:any){\r\n  //   this.gender=this.bindDropDownList(datalist,'gender');\r\n  // }\r\n  // bindDropDownList(datalist,type){   \r\n  //   let outputList:SelectItem[]=[];\r\n  //   outputList.push({label:\"select\",value:null})\r\n  //   if(datalist != null){\r\n  //     datalist.forEach(element=>{\r\n  //       let obj:SelectItem;\r\n  //       if(type==\"gender\"){\r\n  //         obj={label:element.label,value:element.value}\r\n  //       }\r\n  //       outputList.push(obj);\r\n  //     });\r\n  //   }\r\n  //   return outputList;\r\n  // }\r\n  //to bind data to controllers\r\n  bindEditTeacherDetails() {\r\n\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.teacherId.toString();\r\n    //Get Teachers API call\r\n    this.teachersService.getTeachers(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];          \r\n          this.addTeacherForm.setValue({\r\n            'teacherName': this.editData.teachername,\r\n            'branch': Number(this.editData.branch),\r\n            'dateofbirth': new Date(this.editData.dob),\r\n            'gender': this.editData.gender,\r\n            'qualification': this.editData.qualifications.map((el) => Number(el.value)),\r\n            'experience': Number(this.editData.experience),\r\n            'mobile': this.editData.mobilenumber,\r\n            'email': this.editData.email,\r\n            'expertiseIn': this.editData.subjects.map((el) => Number(el.value)),\r\n            'associatedClasses': this.editData.classes.map((el) => Number(el.value)),\r\n            'associatedSections': this.editData.sections.map((el) => Number(el.value))\r\n          })\r\n        }\r\n      });\r\n\r\n\r\n    // this.editData = {\r\n    //   'teacherName': 'Teja prasad',\r\n    //   'branch': '1',\r\n    //   'dateofbirth': '4/5/2020',\r\n    //   'gender': 'F',\r\n    //   'qualification': 'OTH',\r\n    //   'experience': '0-1',\r\n    //   'mobile': '9640938361',\r\n    //   'email': 'tejaprasadbehara@gmail.com',\r\n    //   'expertiseIn': ['T', 'M'],\r\n    //   'associatedClasses': ['1', '2'],\r\n    //   'associatedSections': ['A', 'B']\r\n    // }\r\n\r\n    // console.log(this.editData.gender)\r\n    // this.addTeacherForm.setValue({\r\n    //   'teacherName': this.editData.teacherName,\r\n    //   'branch': this.editData.branch,\r\n    //   'dateofbirth': this.editData.dateofbirth,\r\n    //   'gender': this.editData.gender,\r\n    //   'qualification': this.editData.qualification,\r\n    //   'experience': this.editData.experience,\r\n    //   'mobile': this.editData.mobile,\r\n    //   'email': this.editData.email,\r\n    //   'expertiseIn': this.editData.expertiseIn,\r\n    //   'associatedClasses': this.editData.associatedClasses,\r\n    //   'associatedSections': this.editData.associatedSections\r\n    // })\r\n  }\r\n\r\n \r\n  // Add Teacher method\r\n  addTeacherSubmit(): void {\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addTeacherForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Teachers();\r\n      customObj = this.addTeacherForm.value;\r\n      customObj.dateofbirth = this.getFormat(customObj.dateofbirth);\r\n      customObj.classes = customObj.associatedClasses.join();\r\n      customObj.sections = customObj.associatedSections.join();\r\n      customObj.subjects = customObj.expertiseIn.join();\r\n      customObj.qualifications = customObj.qualification.join();\r\n      customObj.id = Number(this.teacherId);\r\n      customObj.querytype = this.querytype;\r\n      \r\n      //AED Branches API call\r\n      this.teachersService.AEDTeachers(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addTeacherForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = AppConstants.Messages.errorMessage;\r\n          }\r\n        });\r\n    }\r\n  }\r\n  //Reset form method\r\n  resetForm(): void {\r\n    this.addTeacherForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n  //to make controllers from disable to edit mode\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Teacher\";\r\n    this.querytype=2;\r\n  }\r\n  //navigating to Teachers list page\r\n  list(): void {\r\n    // this.router.navigateByUrl(\"Teachers\");\r\n    this.location.back();\r\n    // this.router.navigate(['/Teachers'], {relativeTo: this.route});\r\n  }\r\n\r\n  //This is the method to clear all the form controllers\r\n  private reset() {\r\n    this.addTeacherForm = this.fb.group({\r\n      'teacherName': new FormControl(''),\r\n      'dateofbirth': new FormControl(''),\r\n      'gender': new FormControl(''),\r\n      'qualification': new FormControl(''),\r\n      'experience': new FormControl(''),\r\n      'mobile': new FormControl(''),\r\n      'email': new FormControl(''),\r\n      'expertiseIn': new FormControl(''),\r\n      'associatedClasses': new FormControl(''),\r\n      'associatedSections': new FormControl('')\r\n    })\r\n  }\r\n  _keyPress(event: any) {\r\n    this.inputpattern.Integers(event);\r\n    \r\n  }\r\n\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getServerSideDateFormat())\r\n   }\r\n\r\n   keyPressAlphabet(event)\r\n   {\r\n      this.inputpattern.Alphabet(event);\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"addTeacherForm\" class=\"col-md-12\" (ngSubmit)=\"addTeacherSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addTeacherForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['teacherName'].valid && addTeacherForm.controls['teacherName'].touched)|| (!addTeacherForm.controls['teacherName'].valid && addTeacherForm.controls['teacherName'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['teacherName'].errors?.required)\">Enter \"Teacher\r\n                                    Name\"</span>\r\n                                <span\r\n                                    *ngIf=\"(!addTeacherForm.controls['teacherName'].errors?.required && addTeacherForm.controls['teacherName'].errors?.pattern)\">Enter\r\n                                    Valid \"Teacher Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['branch'].valid && addTeacherForm.controls['branch'].touched)|| (!addTeacherForm.controls['branch'].valid && addTeacherForm.controls['branch'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['branch'].errors?.required)\">Enter \"Branch\r\n                                    Id\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['dateofbirth'].valid && addTeacherForm.controls['dateofbirth'].touched)|| (!addTeacherForm.controls['dateofbirth'].valid && addTeacherForm.controls['dateofbirth'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['dateofbirth'].errors?.required)\">Enter \"Date of\r\n                                    Birth\"</span>\r\n                                <span\r\n                                    *ngIf=\"(!addTeacherForm.controls['dateofbirth'].errors?.required && addTeacherForm.controls['dateofbirth'].errors?.pattern)\">Enter\r\n                                    Valid \"Date Of Birth\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['gender'].valid && addTeacherForm.controls['gender'].touched)|| (!addTeacherForm.controls['gender'].valid && addTeacherForm.controls['gender'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['gender'].errors?.required)\">Enter \"Gender\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['qualification'].valid && addTeacherForm.controls['qualification'].touched)|| (!addTeacherForm.controls['qualification'].valid && addTeacherForm.controls['qualification'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['qualification'].errors?.required)\">Enter\r\n                                    \"Qualification\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['mobile'].valid && addTeacherForm.controls['mobile'].touched)|| (!addTeacherForm.controls['mobile'].valid && addTeacherForm.controls['mobile'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['mobile'].errors?.required)\">Enter \"Mobile\r\n                                    Number\"</span>\r\n                                <span *ngIf=\"(addTeacherForm.controls['mobile'].errors?.pattern)\">Enter \" Valid Mobile\r\n                                    Number\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"(!addTeacherForm.controls['email'].valid)\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['email'].errors?.pattern)\">Enter \"valid\r\n                                    email\"</span>\r\n                            </div>\r\n\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['expertiseIn'].valid && addTeacherForm.controls['expertiseIn'].touched)|| (!addTeacherForm.controls['expertiseIn'].valid && addTeacherForm.controls['expertiseIn'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['expertiseIn'].errors?.required)\">Enter \"Expertise\r\n                                    In\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['associatedClasses'].valid && addTeacherForm.controls['associatedClasses'].touched)|| (!addTeacherForm.controls['associatedClasses'].valid && addTeacherForm.controls['associatedClasses'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['associatedClasses'].errors?.required)\">Enter\r\n                                    \"Associated Class\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTeacherForm.controls['associatedSections'].valid && addTeacherForm.controls['associatedSections'].touched)|| (!addTeacherForm.controls['associatedSections'].valid && addTeacherForm.controls['associatedSections'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTeacherForm.controls['associatedSections'].errors?.required)\">Enter\r\n                                    \"Associated Section\"</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>Name</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    (keypress)=\"keyPressAlphabet($event)\" formControlName=\"teacherName\" type=\"text\" placeholder=\"Teacher Name\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['teacherName'].valid && addTeacherForm.controls['teacherName'].touched) || (!addTeacherForm.controls['teacherName'].valid && addTeacherForm.controls['teacherName'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Branch Id</span><br>\r\n                <p-dropdown [options]=\"branches\" filter=\"true\" formControlName=\"branch\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Branch\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['branch'].valid && addTeacherForm.controls['branch'].touched) || (!addTeacherForm.controls['branch'].valid && addTeacherForm.controls['branch'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Date Of Birth</span><br>\r\n                <p-calendar placeholder=\"Select Date\" [disabled]=\"isDisabled\" formControlName=\"dateofbirth\"\r\n                    [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['dateofbirth'].valid && addTeacherForm.controls['dateofbirth'].touched) || (!addTeacherForm.controls['dateofbirth'].valid && addTeacherForm.controls['dateofbirth'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Gender</span><br>\r\n                <p-dropdown [options]=\"gender\" filter=\"true\" formControlName=\"gender\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Gender\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['gender'].valid && addTeacherForm.controls['gender'].touched) || (!addTeacherForm.controls['gender'].valid && addTeacherForm.controls['gender'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Qualification</span><br>\r\n                <!-- <p-dropdown [options]=\"qualification\" filter=\"true\" [disabled]=\"isDisabled\"\r\n                    formControlName=\"qualification\" class=\"w-100\" placeholder=\"Select Qualification\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['qualification'].valid && addTeacherForm.controls['qualification'].touched) || (!addTeacherForm.controls['qualification'].valid && addTeacherForm.controls['qualification'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown> -->\r\n\r\n                <p-multiSelect [options]=\"qualification\" [disabled]=\"isDisabled\" formControlName=\"qualification\"\r\n                class=\"w-100\"\r\n                [ngClass]=\"{'error':((!addTeacherForm.controls['qualification'].valid && addTeacherForm.controls['qualification'].touched) || (!addTeacherForm.controls['qualification'].valid && addTeacherForm.controls['qualification'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </p-multiSelect>\r\n\r\n\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Experience</span><br>\r\n                <p-dropdown [options]=\"experience\" filter=\"true\" [disabled]=\"isDisabled\" formControlName=\"experience\"\r\n                    class=\"w-100\" placeholder=\"Select Experience\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['experience'].valid && addTeacherForm.controls['experience'].touched) || (!addTeacherForm.controls['experience'].valid && addTeacherForm.controls['experience'].untouched && formSubmitAttempt))}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Mobile</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"10\" (keypress)=_keyPress($event)\r\n                    [attr.disabled]=\"isDisabled ? 'disabled': null\" formControlName=\"mobile\" type=\"text\"\r\n                    placeholder=\"Enter Mobile\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['mobile'].valid && addTeacherForm.controls['mobile'].touched) || (!addTeacherForm.controls['mobile'].valid && addTeacherForm.controls['mobile'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Email</span><br>\r\n                <input id=\"input\" class=\"w-100\" maxlength=\"45\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                    formControlName=\"email\" type=\"text\" placeholder=\"Enter Email\" size=\"30\" pInputText\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['email'].valid && addTeacherForm.controls['email'].touched) || (!addTeacherForm.controls['email'].valid && addTeacherForm.controls['email'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Expertise In</span><br>\r\n                <p-multiSelect [options]=\"expertiseIn\" [disabled]=\"isDisabled\" formControlName=\"expertiseIn\"\r\n                    class=\"w-100\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['expertiseIn'].valid && addTeacherForm.controls['expertiseIn'].touched) || (!addTeacherForm.controls['expertiseIn'].valid && addTeacherForm.controls['expertiseIn'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-multiSelect>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Associated Classes</span><br>\r\n                <p-multiSelect [options]=\"associatedClasses\" [disabled]=\"isDisabled\" formControlName=\"associatedClasses\"\r\n                    class=\"w-100\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['associatedClasses'].valid && addTeacherForm.controls['associatedClasses'].touched) || (!addTeacherForm.controls['associatedClasses'].valid && addTeacherForm.controls['associatedClasses'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-multiSelect>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Associated Sections</span><br>\r\n                <p-multiSelect [options]=\"associatedSections\" [disabled]=\"isDisabled\"\r\n                    formControlName=\"associatedSections\" class=\"w-100\"\r\n                    [ngClass]=\"{'error':((!addTeacherForm.controls['associatedSections'].valid && addTeacherForm.controls['associatedSections'].touched) || (!addTeacherForm.controls['associatedSections'].valid && addTeacherForm.controls['associatedSections'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-multiSelect>                \r\n            </div>\r\n            <div class=\"col-md-4\"></div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Teachers } from 'src/app/cts/shared/models/teachers';\r\nimport { TeachersService } from 'src/app/cts/shared/services/teachers.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { Table } from 'primeng/table';\r\nimport { multiselectObject } from 'src/app/cts/shared/models/multi-select-object';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\n\r\n// import * as angular from \"angular\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-teachers',\r\n  templateUrl: './teachers.component.html',\r\n  styleUrls: ['./teachers.component.scss']\r\n})\r\nexport class TeachersComponent implements OnInit {\r\n\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Teachers[];\r\n  teachers: Teachers[];\r\n  totalRecords: number;\r\n  display: boolean = false;\r\n  position: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  qualifications: any[];\r\n  experience: any[];\r\n  expertise: any[];\r\n  classes: any[];\r\n  sections: any[];\r\n\r\n  toBeDeletedId: any;\r\n\r\n  loading: boolean;\r\n  //to create Teacher From \r\n  filtersForm: FormGroup;\r\n\r\n  //pagination and api integration starts from here\r\n  numberOfPages: number = 10;\r\n  totalcount: number = 0;\r\n  noOfItems = 10;\r\n  multiSelectFilterValue: string = \"\";\r\n  currentPage: number = 1;\r\n  pageCount: number;\r\n  rowDataString: string = \"\";\r\n  qualArray: Array<multiselectObject> = [];\r\n  expArray: Array<multiselectObject> = [];\r\n  expeArray: Array<multiselectObject> = [];\r\n  classArray: Array<multiselectObject> = [];\r\n  secArray: Array<multiselectObject> = [];\r\n\r\n  qualMultiFilterValue:string =\"\";\r\n  expMultiFilterValue:string=\"\";\r\n  expeMultiFilterValue:string=\"\";\r\n  classMultiFilterValue:string=\"\";\r\n  secMultiFilterValue:string=\"\";\r\n\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n\r\n  constructor(private dropdownService: DropdownService, private TeachersService: TeachersService, private router: Router, private route: ActivatedRoute,\r\n    private fb: FormBuilder) {\r\n    //Get Dropdowns API call\r\n    var dropdowns = [\"subjects\", \"classes\", \"qualifications\", \"sections\", \"experiences\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.expertise = result.data.subjects;\r\n          this.classes = result.data.classes;\r\n          this.qualifications = result.data.qualifications;\r\n          this.sections = result.data.sections;\r\n          this.experience = result.data.experiences;\r\n        }\r\n      });\r\n\r\n\r\n    this.teachers = []\r\n  }\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'teachername', header: 'Name' },\r\n      { field: 'dob', header: 'DOB' },\r\n      { field: 'qualifications', header: 'Qualifications' },\r\n      { field: 'email', header: 'Email' },\r\n      { field: 'mobilenumber', header: 'Mobile ' },\r\n      { field: 'experience', header: 'Experience(Yrs)' },\r\n      { field: 'subjects', header: 'Subjects' },\r\n      { field: 'classes', header: 'Classes' },\r\n      { field: 'sections', header: 'Sections' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations   \r\n    this.createFilterForm();\r\n\r\n\r\n  }\r\n  //Search box toggling\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n  //Api Integration Starts from here\r\n  onPageChange(event: LazyLoadEvent) {\r\n    let pageObject = Paginationutil.getGridFilters(event, this.multiSelectFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if (this.totalcount != 0) {\r\n      this.noOfItems = (currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }\r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n  }\r\n\r\n  loadGrids(pagingData) {\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.TeachersService.getTeachers(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.teachers = result.data;\r\n          //pagination starts from here\r\n          this.totalcount = parseInt(result.total);\r\n\r\n          if (this.totalcount <= paging.pageSize) {\r\n            this.noOfItems = this.totalcount;\r\n          } else {\r\n            this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n          }\r\n\r\n          if (this.teachers != null && this.teachers != undefined) {\r\n            this.teachers = this.teachers.map(function (el, i) {\r\n              var o = Object.assign({}, el);\r\n              o.indexId = i;\r\n              return o;\r\n            });\r\n          }\r\n          let currentrows = (this.currentPage * this.numberOfPages);\r\n        }\r\n      });\r\n  }\r\n  //API Integration ends here\r\n  //Crud events\r\n  addNew($event: any) {\r\n    let id = \"0\";\r\n    this.router.navigate(['add-teacher'], { relativeTo: this.route, queryParams: { type: window.btoa('create'), id: window.btoa(id) } });\r\n  }\r\n  editTeacher(id): void {\r\n    this.router.navigate(['add-teacher'], { relativeTo: this.route, queryParams: { type: window.btoa('edit'), id: window.btoa(id) } });\r\n  }\r\n  viewTeacher(id): void {\r\n    this.router.navigate(['add-teacher'], { relativeTo: this.route, queryParams: { type: window.btoa('view'), id: window.btoa(id) } });\r\n  }\r\n  deleteTeacher(id): void {\r\n    this.position = \"top\";\r\n    this.display = true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  teacherRevoke(): void {\r\n    this.display = false;\r\n    let customObj = new Teachers();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n    //AED Branches API call\r\n    this.TeachersService.AEDTeachers(customObj)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.DataTable.reset();\r\n          this.successMessage = AppConstants.Messages.successMessage;\r\n        } else {\r\n          this.errorMessage = AppConstants.Messages.errorMessage;\r\n        }\r\n      });\r\n  }\r\n  //Filters code starts from here\r\n  //Create form method to constuct a form with validations\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tName': new FormControl(''),\r\n      'tQualification': new FormControl(''),\r\n      'tDateOfBirth': new FormControl(''),\r\n      'tEmail': new FormControl(''),\r\n      'tExperience': new FormControl(''),\r\n      'tMobile': new FormControl(''),\r\n      'tExpertise': new FormControl(''),\r\n      'tClasses': new FormControl(''),\r\n      'tSections': new FormControl('')\r\n    });\r\n  }\r\n\r\n  multiselectSearch(event, from) {\r\n    //creating new object   \r\n    let customObj = new multiselectObject();\r\n    customObj.key = from;\r\n    customObj.value = event.itemValue;\r\n\r\n    if (from === \"qualification_id\") {\r\n      // if object is exists in array then remove object from else push object into array\r\n      var find = false;\r\n      for (let item of this.qualArray) {\r\n        if (item.value === customObj.value && item.key === customObj.key) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        this.qualArray.push(customObj);\r\n      } else {\r\n        this.qualArray = this.qualArray.filter(obj => obj.value !== customObj.value)\r\n      }\r\n\r\n      // to create fileter stirng for multiselect\r\n      this.qualMultiFilterValue = this.qualArray.map(object => {\r\n        let comparison = `'${object.value}'`;\r\n        return `(${object.key}=${comparison})`\r\n      }).join(' OR ');\r\n\r\n    }\r\n    else if (from === \"experience\") {\r\n      // if object is exists in array then remove object from else push object into array\r\n      var find = false;\r\n      for (let item of this.expArray) {\r\n        if (item.value === customObj.value && item.key === customObj.key) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        this.expArray.push(customObj);\r\n      } else {\r\n        this.expArray = this.expArray.filter(obj => obj.value !== customObj.value)\r\n      }\r\n\r\n      // to create fileter stirng for multiselect\r\n      this.expMultiFilterValue = this.expArray.map(object => {\r\n        let comparison = `'${object.value}'`;\r\n        return `(${object.key}=${comparison})`\r\n      }).join(' OR ');\r\n\r\n    }\r\n\r\n    else if (from === \"subject_id\") {\r\n      // if object is exists in array then remove object from else push object into array\r\n      var find = false;\r\n      for (let item of this.expeArray) {\r\n        if (item.value === customObj.value && item.key === customObj.key) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        this.expeArray.push(customObj);\r\n      } else {\r\n        this.expeArray = this.expeArray.filter(obj => obj.value !== customObj.value)\r\n      }\r\n\r\n      // to create fileter stirng for multiselect\r\n      this.expeMultiFilterValue = this.expeArray.map(object => {\r\n        let comparison = `'${object.value}'`;\r\n        return `(${object.key}=${comparison})`\r\n      }).join(' OR ');\r\n      \r\n    }\r\n\r\n    else if (from === \"class_id\") {\r\n      // if object is exists in array then remove object from else push object into array\r\n      var find = false;\r\n      for (let item of this.classArray) {\r\n        if (item.value === customObj.value && item.key === customObj.key) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        this.classArray.push(customObj);\r\n      } else {\r\n        this.classArray = this.classArray.filter(obj => obj.value !== customObj.value)\r\n      }\r\n\r\n      // to create fileter stirng for multiselect\r\n      this.classMultiFilterValue = this.classArray.map(object => {\r\n        let comparison = `'${object.value}'`;\r\n        return `(${object.key}=${comparison})`\r\n      }).join(' OR ');\r\n      \r\n    }\r\n\r\n    else if (from === \"section_id\") {\r\n      // if object is exists in array then remove object from else push object into array\r\n      var find = false;\r\n      for (let item of this.secArray) {\r\n        if (item.value === customObj.value && item.key === customObj.key) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        this.secArray.push(customObj);\r\n      } else {\r\n        this.secArray = this.secArray.filter(obj => obj.value !== customObj.value)\r\n      }\r\n\r\n      // to create fileter stirng for multiselect\r\n      this.secMultiFilterValue = this.secArray.map(object => {\r\n        let comparison = `'${object.value}'`;\r\n        return `(${object.key}=${comparison})`\r\n      }).join(' OR ');\r\n      \r\n    }\r\n\r\n    this.multiSelectFilterValue = (this.qualMultiFilterValue == \"\" ? '(qualification_id > 0 ) AND ' : '('+this.qualMultiFilterValue +') AND ')   + \r\n                                  (this.expMultiFilterValue == \"\" ? '(experience > 0 ) AND ' : '('+this.expMultiFilterValue +') AND ')   + \r\n                                  (this.expeMultiFilterValue == \"\" ? '(subject_id > 0 ) AND ' : '('+this.expeMultiFilterValue +') AND ')   + \r\n                                  (this.classMultiFilterValue== \"\" ? '(class_id > 0 ) AND ' : '('+this.classMultiFilterValue +') AND ')   + \r\n                                  (this.secMultiFilterValue == \"\" ? '(section_id > 0 ) ' : '('+this.secMultiFilterValue+')')  \r\n    \r\n    //calling get method with multiselect filters\r\n    let totalFilter = Paginationutil.getGridFilters(this.DataTable, this.multiSelectFilterValue)\r\n    this.loadGrids(JSON.stringify(totalFilter));\r\n\r\n  }\r\n\r\n\r\n  \r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.multiSelectFilterValue=\"\";\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate): string {\r\n    return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n  }\r\n\r\n   //to get date format\r\ngetFilterFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Teachers</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Teacher\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Teacher Name</span><br>\r\n                    <input id=\"name\" #tt class=\"w-100\" type=\"text\" formControlName=\"tName\" placeholder=\"Teacher Name\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(tt.value,'teachername',''): ''\"\r\n                        pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Qualification</span><br>\r\n                    <p-multiSelect [options]=\"qualifications\" (onChange)=\"multiselectSearch($event,'qualification_id')\"\r\n                        formControlName=\"tQualification\" placeholder=\"Select Qualifications\" class=\"w-100\">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Date Of Birth</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tDateOfBirth\" (onSelect)=\"dt.filter(getFilterFormat(td.value),'dob','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Email</span><br>\r\n                    <input id=\"email\" #em class=\"w-100\" formControlName=\"tEmail\" type=\"text\" placeholder=\"Enter Email\"\r\n                        (keydown)=\"$event.key === 'Enter' ? dt.filter(em.value,'email',''): ''\" size=\"30\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Mobile</span><br>\r\n                    <input id=\"mobile\" #mb class=\"w-100\" formControlName=\"tMobile\" type=\"text\"\r\n                        (keydown)=\"$event.key === 'Enter' ? dt.filter(mb.value,'mobilenumber',''): ''\"\r\n                        placeholder=\"Enter MobileNumber\" size=\"30\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Experience</span><br>\r\n                    <p-multiSelect [options]=\"experience\" formControlName=\"tExperience\" placeholder=\"Select Experience\"\r\n                        (onChange)=\"multiselectSearch($event,'experience')\" class=\"w-100\">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Expertise</span><br>\r\n                    <p-multiSelect [options]=\"expertise\" formControlName=\"tExpertise\" placeholder=\"Select Subject\"\r\n                        (onChange)=\"multiselectSearch($event,'subject_id')\" class=\"w-100\">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Classes</span><br>\r\n                    <p-multiSelect [options]=\"classes\" formControlName=\"tClasses\" placeholder=\"Select Classes\"\r\n                        (onChange)=\"multiselectSearch($event,'class_id')\" class=\"w-100\">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Sections</span><br>\r\n                    <p-multiSelect [options]=\"sections\" formControlName=\"tSections\" placeholder=\"Select Sections\"\r\n                        (onChange)=\"multiselectSearch($event,'section_id')\" class=\"w-100\">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class=\"col-md-9 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n\r\n\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <!-- <p-table #dt [columns]=\"cols\" [value]=\"teachers\" [lazy]=\"true\" (onLazyLoad)=\"loadCarsLazy($event)\"\r\n            [paginator]=\"true\" [rows]=\"10\" [totalRecords]=\"totalRecords\" [loading]=\"loading\" [responsive]=\"true\"\r\n            [reorderableColumns]=\"true\" dataKey=\"firstname\"> -->\r\n        <p-table #dt [columns]=\"cols\" [resizableColumns]=\"true\" [value]=\"teachers\" [lazy]=\"true\" dataKey=\"indexId\"\r\n            [paginator]=\"true\" [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\"\r\n            [totalRecords]=\"totalcount\" [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\"\r\n            dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn>\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                        \r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div\r\n                            *ngIf=\"col.field != 'classes' && col.field != 'sections' && col.field != 'subjects' && col.field != 'qualifications'\">\r\n                            <!-- <a class=\"bold\" (click)=\"viewTeacher(rowData.id)\">   \r\n                                {{rowData[col.field]}}  \r\n                            </a> -->\r\n                            <div class=\"\" *ngIf=\"col.field == 'dob'\">\r\n                                <a class=\"bold\" (click)=\"viewTeacher(rowData.id)\">{{getFormat(rowData.dob)}}</a>\r\n                            </div>\r\n                            <div class=\"\" *ngIf=\"col.field != 'dob'\">\r\n                                <a class=\"bold\" (click)=\"viewTeacher(rowData.id)\">{{rowData[col.field]}}</a>\r\n                                <div class=\"teacher-container\" *ngIf=\"col.field == 'teachername'\">\r\n                                    <img class=\"img-fluid teacherlogo\" src=\"./assets/images/avatar.png\">\r\n                                    <a  download=\"new-filename\"><i class=\"pi pi-pencil\"></i></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            *ngIf=\"col.field == 'classes' || col.field == 'sections' || col.field == 'subjects' || col.field == 'qualifications'\">\r\n                            <span class=\"tableRowData\" *ngFor=\"let datavalue of rowData[col.field]\">\r\n                                <li>\r\n                                    {{datavalue.label}}\r\n                                </li>\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                            <i class=\"pi pi-pencil\" (click)=\"editTeacher(rowData.id)\"></i>&nbsp;\r\n                            <i class=\"pi pi-trash\" (click)=\"deleteTeacher(rowData.id)\"></i>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Teacher?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"teacherRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Tiles } from 'src/app/cts/shared/models/tiles';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-tiles',\r\n  templateUrl: './tiles.component.html',\r\n  styleUrls: ['./tiles.component.scss']\r\n})\r\nexport class TilesComponent implements OnInit {\r\n  MyTilesArray:Array<Tiles>;\r\n  tilesUrl:any;\r\n  tiles: any[];\r\n  responsiveOptions;\r\n  @ViewChild('cardBackGround') cardBackGround: ElementRef;\r\n  constructor(private router: Router,private route:ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.MyTilesArray = [\r\n      new Tiles(565, 'students','blue','fa-child'),\r\n      new Tiles(56, 'teachers','green','fa-graduation-cap'),\r\n      new Tiles(40, 'users','lightblue','fa-users'),\r\n      new Tiles(6, 'exams','yellow','fa-pencil'),\r\n      // new Tiles(10, 'classes','pink','fa-home'),\r\n      new Tiles(24, 'branches','blue','fa-puzzle-piece')\r\n    ];    \r\n\r\n    this.responsiveOptions = [\r\n      {\r\n          breakpoint: '1024px',\r\n          numVisible: 3,\r\n          numScroll: 3\r\n      },\r\n      {\r\n          breakpoint: '768px',\r\n          numVisible: 2,\r\n          numScroll: 2\r\n      },\r\n      {\r\n          breakpoint: '560px',\r\n          numVisible: 1,\r\n          numScroll: 1\r\n      }\r\n  ];\r\n  this.tiles=[\r\n    {\r\n      \"brand\": \"VW\",\r\n      \"year\": 2012,\r\n      \"color\": \"Orange\",\r\n      \"vin\": \"dsad231ff\"\r\n    },\r\n    {\r\n      \"brand\": \"Audi\",\r\n      \"year\": 2011,\r\n      \"color\": \"Black\",\r\n      \"vin\": \"gwregre345\"\r\n    },\r\n    {\r\n      \"brand\": \"Renault\",\r\n      \"year\": 2005,\r\n      \"color\": \"Gray\",\r\n      \"vin\": \"h354htr\"\r\n    },\r\n    {\r\n      \"brand\": \"BMW\",\r\n      \"year\": 2003,\r\n      \"color\": \"Blue\",\r\n      \"vin\": \"j6w54qgh\"\r\n    },\r\n    {\r\n      \"brand\": \"Mercedes\",\r\n      \"year\": 1995,\r\n      \"color\": \"Orange\",\r\n      \"vin\": \"hrtwy34\"\r\n    },\r\n    {\r\n      \"brand\": \"Volvo\",\r\n      \"year\": 2005,\r\n      \"color\": \"Black\",\r\n      \"vin\": \"jejtyj\"\r\n    },\r\n    {\r\n      \"brand\": \"Honda\",\r\n      \"year\": 2012,\r\n      \"color\": \"Yellow\",\r\n      \"vin\": \"g43gr\"\r\n    },\r\n    {\r\n      \"brand\": \"Jaguar\",\r\n      \"year\": 2013,\r\n      \"color\": \"Orange\",\r\n      \"vin\": \"greg34\"\r\n    },\r\n    {\r\n      \"brand\": \"Ford\",\r\n      \"year\": 2000,\r\n      \"color\": \"Black\",\r\n      \"vin\": \"h54hw5\"\r\n    },\r\n    {\r\n      \"brand\": \"Fiat\",\r\n      \"year\": 2013,\r\n      \"color\": \"Red\",\r\n      \"vin\": \"245t2s\"\r\n    }\r\n  ]\r\n  }\r\n\r\n  selectedTileName:string;\r\n  routing(tileObject){\r\n    // this.router.navigate(tileObject.name)   \r\n    this.router.navigate([tileObject.name], {relativeTo: this.route});   \r\n    this.selectedTileName = tileObject.name;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12 tiles-section\">\r\n        <p-carousel [value]=\"MyTilesArray\" [numVisible]=\"5\" [numScroll]=\"1\" [circular]=\"true\" [autoplayInterval]=\"20000\"\r\n            [responsiveOptions]=\"responsiveOptions\">\r\n            <ng-template let-tile pTemplate=\"item\">\r\n                <div class=\"card {{tile.color}}\" (click)=\"routing(tile)\" [ngClass]=\"tile.name == selectedTileName ? 'bg' : 'nobg'\">\r\n                    <div class=\"card-body\">\r\n                        <div style=\"display: inline-flex;\">\r\n                            <i class=\"fa {{tile.icon}} {{tile.color}}\" aria-hidden=\"true\"></i>\r\n                            <div>\r\n                                <h5 class=\"card-title\">{{tile.name}}</h5>\r\n                                <p class=\"card-text\">{{tile.count}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </p-carousel>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Location } from '@angular/common';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { TimetableService } from 'src/app/cts/shared/services/timetable.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { Timetable } from 'src/app/cts/shared/models/timetable';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\n\r\n@Component({\r\n  selector: 'app-add-timetable',\r\n  templateUrl: './add-timetable.component.html',\r\n  styleUrls: ['./add-timetable.component.scss']\r\n})\r\nexport class AddTimetableComponent implements OnInit {\r\n  timetableId: number;\r\n  formType: string;\r\n  pageTitle: string;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  private ngUnsubscribe = new Subject();\r\n  addTimetableForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  display: boolean = false;\r\n  editData: any;\r\n  classid: any[];\r\n  sections: any[];\r\n  subjectid: any[];\r\n  teacherid: any[];\r\n  status: any[];\r\n  querytype:number;\r\n\r\n\r\n  constructor(private dropdownService: DropdownService,private TimetableService: TimetableService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location) {\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"classes\",\"subjects\",\"teachers\",\"sections\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.classid = result.data.classes;\r\n          this.subjectid = result.data.subjects;\r\n          this.teacherid = result.data.teachers;\r\n          this.sections = result.data.sections;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {// On page load\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.timetableId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n    //to create form with validations\r\n    this.createForm();\r\n    //to check whether the form to be created or updated\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add Timetable\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype=1;\r\n\r\n    } else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit Timetable\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype=2;\r\n\r\n    } else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype=2;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.addTimetableForm = this.fb.group({\r\n      'classid': new FormControl('', { validators: [Validators.required] }),\r\n      'sectionid': new FormControl('', { validators: [Validators.required] }),\r\n      'subjectid': new FormControl('', { validators: [Validators.required] }),\r\n      'teacherid': new FormControl('', { validators: [Validators.required] }),\r\n      'periodfrom': new FormControl('', { validators: [Validators.required] }),\r\n      'periodto': new FormControl('', { validators: [Validators.required] }),\r\n      'status': new FormControl('', { validators: [Validators.required] })\r\n\r\n    });\r\n  }\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditTimetableDetails();\r\n  }\r\n  bindEditTimetableDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.timetableId.toString();\r\n    //Get Branches API call\r\n    this.TimetableService.getTimetable(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.addTimetableForm.setValue({\r\n            'classid': this.editData.class_id,\r\n            'sectionid': this.editData.section_id,\r\n            'subjectid': this.editData.subject_id,\r\n            'teacherid': this.editData.teacher_id,\r\n            'periodfrom': new Date(this.editData.periodfrom),\r\n            'periodto': new Date(this.editData.periodto),\r\n            'status': this.editData.status           \r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit Timetable\";\r\n  }\r\n\r\n  addTimetableSubmit(): void {\r\n    // this.errorMessage = \"\";\r\n    // this.successMessage = \"\";\r\n    // this.formSubmitAttempt = true;\r\n    // if (this.addTimetableForm.valid) {\r\n    //   this.formSubmitAttempt = false;\r\n    //   console.log(this.addTimetableForm.value);\r\n    //   this.addTimetableForm.reset();\r\n    //   this.successMessage = \"Your changes have been successfully saved\";\r\n    // }\r\n    \r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addTimetableForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Timetable();\r\n      customObj = this.addTimetableForm.value;\r\n      customObj.id = this.timetableId;\r\n      customObj.querytype = this.querytype;\r\n\r\n      //AED Branches API call\r\n      this.TimetableService.AEDTimetable(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n            this.addTimetableForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          }else{\r\n            this.errorMessage = \"Time table already exists\";\r\n          }\r\n        },\r\n        error =>{  \r\n          this.router.navigate(['/admin/app-error'], {  queryParams: { message: window.btoa(error.message)} });     \r\n        });\r\n    }\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.addTimetableForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n\r\n  list(): void {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Add TimeTable</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <form [formGroup]=\"addTimetableForm\" class=\"col-md-12\" (ngSubmit)=\"addTimetableSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addTimetableForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addTimetableForm.controls['classid'].valid && addTimetableForm.controls['classid'].touched)|| \r\n                                (!addTimetableForm.controls['classid'].valid && addTimetableForm.controls['classid'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTimetableForm.controls['classid'].errors?.required)\">Enter \"Class\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addTimetableForm.controls['sectionid'].valid && addTimetableForm.controls['sectionid'].touched)|| \r\n                            (!addTimetableForm.controls['sectionid'].valid && addTimetableForm.controls['sectionid'].untouched && \r\n                            formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addTimetableForm.controls['sectionid'].errors?.required)\">Enter \"Section\"</span>\r\n                        </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addTimetableForm.controls['subjectid'].valid && addTimetableForm.controls['subjectid'].touched)|| \r\n                                (!addTimetableForm.controls['subjectid'].valid && addTimetableForm.controls['subjectid'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTimetableForm.controls['subjectid'].errors?.required)\">Enter \"Subject\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addTimetableForm.controls['teacherid'].valid && addTimetableForm.controls['teacherid'].touched)|| \r\n                                (!addTimetableForm.controls['teacherid'].valid && addTimetableForm.controls['teacherid'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTimetableForm.controls['teacherid'].errors?.required)\">Enter \"Teacher\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addTimetableForm.controls['periodfrom'].valid && addTimetableForm.controls['periodfrom'].touched)|| \r\n                                (!addTimetableForm.controls['periodfrom'].valid && addTimetableForm.controls['periodfrom'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTimetableForm.controls['periodfrom'].errors?.required)\">Enter \"Period From\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addTimetableForm.controls['periodto'].valid && addTimetableForm.controls['periodto'].touched)|| \r\n                                (!addTimetableForm.controls['periodto'].valid && addTimetableForm.controls['periodto'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addTimetableForm.controls['periodto'].errors?.required)\">Enter \"Period To\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addTimetableForm.controls['status'].valid && addTimetableForm.controls['status'].touched)|| \r\n                            (!addTimetableForm.controls['status'].valid && addTimetableForm.controls['status'].untouched && \r\n                            formSubmitAttempt))\">\r\n                            <i class=\"fa fa-circle\"></i>\r\n                            <span *ngIf=\"(addTimetableForm.controls['status'].errors?.required)\">Enter \"Status\"</span>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <span>\r\n                    Class\r\n                </span><br>\r\n                <p-dropdown [options]=\"classid\" filter=\"true\" formControlName=\"classid\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Class\"\r\n                    [ngClass]=\"{'error':((!addTimetableForm.controls['classid'].valid && addTimetableForm.controls['classid'].touched) || (!addTimetableForm.controls['classid'].valid && addTimetableForm.controls['classid'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Section</span><br>\r\n                <p-dropdown [options]=\"sections\" filter=\"true\" formControlName=\"sectionid\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Section\"\r\n                    [ngClass]=\"{'error':((!addTimetableForm.controls['sectionid'].valid && addTimetableForm.controls['sectionid'].touched) || (!addTimetableForm.controls['sectionid'].valid && addTimetableForm.controls['sectionid'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Subject</span><br>\r\n                <p-dropdown [options]=\"subjectid\" filter=\"true\" formControlName=\"subjectid\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Subject\"\r\n                    [ngClass]=\"{'error':((!addTimetableForm.controls['subjectid'].valid && addTimetableForm.controls['subjectid'].touched) || (!addTimetableForm.controls['subjectid'].valid && addTimetableForm.controls['subjectid'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Teacher</span><br>\r\n                <p-dropdown [options]=\"teacherid\" filter=\"true\" formControlName=\"teacherid\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Teacher\"\r\n                    [ngClass]=\"{'error':((!addTimetableForm.controls['teacherid'].valid && addTimetableForm.controls['teacherid'].touched) || (!addTimetableForm.controls['teacherid'].valid && addTimetableForm.controls['teacherid'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Period From</span><br>\r\n                <p-calendar  [showTime]=\"true\" class=\"w-100\" formControlName=\"periodfrom\" [disabled]=\"isDisabled\"\r\n                placeholder=\"Select Time\" [ngClass]=\"{'error':((!addTimetableForm.controls['periodfrom'].valid && addTimetableForm.controls['periodfrom'].touched) || (!addTimetableForm.controls['periodfrom'].valid && addTimetableForm.controls['periodfrom'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\"></p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Period To</span><br>\r\n                <p-calendar  [showTime]=\"true\" class=\"w-100\" formControlName=\"periodto\" [disabled]=\"isDisabled\"\r\n                placeholder=\"Select Time\" [ngClass]=\"{'error':((!addTimetableForm.controls['periodto'].valid && addTimetableForm.controls['periodto'].touched) || (!addTimetableForm.controls['periodto'].valid && addTimetableForm.controls['periodto'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\"></p-calendar>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <span>Status</span><br>\r\n                <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"status\" [disabled]=\"isDisabled\"\r\n                    placeholder=\"Select Status\" [ngClass]=\"{'error':((!addTimetableForm.controls['status'].valid &&\r\n                    addTimetableForm.controls['status'].touched) || \r\n                (!addTimetableForm.controls['status'].valid && addTimetableForm.controls['status'].untouched && formSubmitAttempt)),\r\n                'required':(isRequired == true )}\">\r\n                </p-dropdown>\r\n            </div>     \r\n            <div class=\"col-md-8\"></div>       \r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <span class=\"required\" *ngIf=\"this.formType == 'create' || this.formType == 'edit'\">\r\n                    <span class=\"requirednote\">Required</span>\r\n                </span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Timetable } from 'src/app/cts/shared/models/timetable';\r\nimport { TimetableService } from 'src/app/cts/shared/services/timetable.service';\r\nimport { Subject } from 'rxjs';\r\nimport { map,takeUntil } from 'rxjs/operators';;\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\n\r\n@Component({\r\n  selector: 'app-timetable',\r\n  templateUrl: './timetable.component.html',\r\n  styleUrls: ['./timetable.component.scss']\r\n})\r\nexport class TimetableComponent implements OnInit {\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Timetable[];\r\n  timetable: Timetable[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  loading: boolean;\r\n  errorMessage:string=\"\";\r\n  successMessage:string=\"\";\r\n  display:boolean=false;\r\n  position: string;\r\n  filtersForm: FormGroup;\r\n  classid: any[]=[];\r\n  sections: any[]=[];\r\n  subjectid: any[]=[];\r\n  teacherid: any[]=[];\r\n  status: any[]=[];\r\n  users: any[]=[];\r\n  toBeDeletedId:any;\r\n\r\n   //pagination and api integration starts from here\r\n   numberOfPages:number =10;\r\n   totalcount:number=0;\r\n   noOfItems=10;\r\n   advancedFilterValue:string =\"\";\r\n   currentPage:number = 1;\r\n   pageCount:number;\r\n \r\n   @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private dropdownService: DropdownService,private TimetableService: TimetableService, private router: Router,private route:ActivatedRoute,private fb: FormBuilder) {\r\n    \r\n    this.timetable = [];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'InActive', value: 'NA' }\r\n    ];\r\n    var dropdowns = [\"classes\",\"subjects\",\"teachers\",\"users\",\"sections\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.classid = result.data.classes;\r\n          this.subjectid = result.data.subjects;\r\n          this.teacherid = result.data.teachers;\r\n          this.users = result.data.users;\r\n          this.sections = result.data.sections;\r\n        }\r\n      });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.cols = [\r\n      { field: 'class', header: 'Class' },\r\n      { field: 'section', header: 'Section' },\r\n      { field: 'subject', header: 'Subject' },\r\n      { field: 'teacher', header: 'Teacher' },\r\n      { field: 'periodfrom', header: 'Period From' },\r\n      { field: 'periodto', header: 'Period To' },\r\n      { field: 'createddate', header: 'Created Date' },\r\n      { field: 'createdby', header: 'Created By' },\r\n      { field: 'status', header: 'Status' }\r\n    ];\r\n    this.loading = true;\r\n    //to create form with validations\r\n    this.createFilterForm();\r\n  }\r\n \r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n\r\n//Api Integration Starts from here\r\nonPageChange(event:LazyLoadEvent){\r\n  let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n  this.currentPage = pageObject.currentPage;\r\n\r\n  let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n  this.pageCount = pageObject.pageCount;\r\n\r\n  let currentrows = event.rows * pageObject.pageNo;\r\n\r\n  if(this.totalcount != 0){\r\n    this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n  }\r\n\r\n  this.loadGrids(JSON.stringify(pageObject));\r\n\r\n}\r\n\r\nloadGrids(pagingData){\r\n  let paging = JSON.parse(pagingData);\r\n  //Get Branches API call\r\n  this.TimetableService.getTimetable(pagingData)\r\n  .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n    if(result.success){\r\n    this.timetable= result.data;\r\n    //pagination starts from here\r\n    this.totalcount = parseInt(result.total);    \r\n\r\n    if(this.totalcount <= paging.pageSize){\r\n      this.noOfItems = this.totalcount;\r\n    }else{\r\n      this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n    }\r\n\r\n    if(this.timetable != null && this.timetable != undefined){\r\n      this.timetable = this.timetable.map(function(el,i){\r\n        var o = Object.assign({},el);\r\n        o.indexId = i;\r\n        return o;\r\n      });\r\n    }\r\n    let currentrows = (this.currentPage * this.numberOfPages);\r\n  }\r\n  });\r\n}\r\n//API Integration ends here\r\n //Crud events\r\n addNew($event: any) {\r\n  let id=\"0\";\r\n  this.router.navigate(['add-timetable'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n}\r\neditTimetable(id):void{\r\n  this.router.navigate(['add-timetable'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n}\r\nviewTimetable(id):void{\r\n  this.router.navigate(['add-timetable'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n}\r\n  deleteTimetable(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  timetableRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Timetable();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.TimetableService.AEDTimetable(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) { \r\n        this.DataTable.reset();               \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n  }\r\n\r\n  //Filters code starts from here\r\n   //Create form method to constuct a form with validations\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tclassid': new FormControl(''),\r\n      'tsectionid': new FormControl(''),\r\n      'tsubjectid': new FormControl(''),\r\n      'tteaherid': new FormControl(''),\r\n      'tperiodfrom': new FormControl(''),\r\n      'tperiodto': new FormControl(''),\r\n      'tcreateddate': new FormControl(''),\r\n      'tusertype': new FormControl(''),\r\n      'tstatus': new FormControl(''),\r\n    });\r\n  }\r\n  filterSubmit(): void {\r\n    console.log(this.filtersForm.value);\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n  //to get date format\r\n  getFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n   }\r\n   checkPermissions(permissionValue){\r\n    return  AuthorizationGuard.checkPermission(permissionValue);\r\n   }\r\n   getFilterFormat(createddate):string{\r\n    return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n   }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">TimeTable</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"TimeTable\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"addNew($event)\" *ngIf=\"checkPermissions('ADD')\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>Class</span><br>\r\n                    <p-dropdown #cl [options]=\"classid\" class=\"w-100\" formControlName=\"tclassid\"\r\n                    (onChange)=\"dt.filter(cl.value,'class_id','')\"\r\n                    placeholder=\"Select Class\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Section</span><br>\r\n                    <p-dropdown #se [options]=\"sections\" class=\"w-100\" formControlName=\"tsectionid\"\r\n                    (onChange)=\"dt.filter(se.value,'section_id','')\"\r\n                        placeholder=\"Select Section\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Subject</span><br>\r\n                    <p-dropdown #sb [options]=\"subjectid\" class=\"w-100\" formControlName=\"tsubjectid\"\r\n                    (onChange)=\"dt.filter(sb.value,'subject_id','')\"\r\n                        placeholder=\"Select Subject\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Teacher</span><br>\r\n                    <p-dropdown #tc [options]=\"teacherid\" class=\"w-100\" formControlName=\"tteaherid\"\r\n                    (onChange)=\"dt.filter(tc.value,'teacher_id','')\"\r\n                        placeholder=\"Select Teacher\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Period From</span><br>\r\n                    <p-calendar [showTime]=\"true\" class=\"w-100\" formControlName=\"tperiodfrom\" placeholder=\"Select Time\">\r\n                    </p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Period To</span><br>\r\n                    <p-calendar [showTime]=\"true\" class=\"w-100\" formControlName=\"tperiodto\" placeholder=\"Select Time\">\r\n                    </p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #co placeholder=\"Select Date\" formControlName=\"tcreateddate\" \r\n                    (onSelect)=\"dt.filter(getFilterFormat(co.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <span>User</span><br>\r\n                  <p-dropdown #us [options]=\"users\" class=\"w-100\" formControlName=\"tusertype\" placeholder=\"Select User\" \r\n                  (onChange)=\"dt.filter(us.value,'userid','')\"\r\n                      ></p-dropdown>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <span>Status</span><br>\r\n                <p-dropdown #st [options]=\"status\" class=\"w-100\" formControlName=\"tstatus\" placeholder=\"Select Status\" \r\n                (onChange)=\"dt.filter(st.value,'status','')\"\r\n                    ></p-dropdown>\r\n            </div>\r\n                <div class=\"col-md-9 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"timetable\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewTimetable(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'status'\">\r\n                                <a class=\"bold\" (click)=\"viewTimetable(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'status'\">\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\" *ngIf=\"rowData.status == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field == 'date'\">\r\n                            <a class=\"bold\" (click)=\"viewTimetable(rowData.id)\">{{getFormat(rowData.date)}}</a>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                        <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\" (click)=\"editTimetable(rowData.id)\"></i>&nbsp;\r\n                        <i class=\"pi pi-trash\"  *ngIf=\"checkPermissions('DELETE')\" (click)=\"deleteTimetable(rowData.id)\"></i>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete Timetable?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"timetableRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationGuardService } from 'src/app/core/security/authentication-guard.service';\r\nimport { LocalstoragetokenService } from 'src/app/core/security/localstoragetoken.service';\r\nimport { LoginService } from 'src/app/cts/shared/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-topbar',\r\n  templateUrl: './topbar.component.html',\r\n  styleUrls: ['./topbar.component.scss']\r\n})\r\nexport class TopbarComponent implements OnInit {\r\n  userName:string;\r\n  constructor(private loginService:LoginService,private router: Router,private route:ActivatedRoute, public TokenProvider: LocalstoragetokenService) { \r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userName=this.TokenProvider.getUsername();\r\n  }\r\n  logout(){\r\n    this.loginService.logout();\r\n  }\r\n\r\n  navigateToUser():void{\r\n    let userId = this.TokenProvider.getUserId();\r\n    this.router.navigate(['users/add-user'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(userId) }});\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n        <img class=\"img-fluid nav-ctc-logo\" src=\"./assets/images/ctclogo.png\">\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <img class=\"img-fluid nav-school-logo\" src=\"./assets/images/ssc.jpg\">\r\n        </ul>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n            <div class=\"form-inline-dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    {{userName}}\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <a class=\"dropdown-item\"  (click)=\"navigateToUser()\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i>My Profile</a>\r\n                    <a class=\"dropdown-item\" href=\"/admin/changePassword\"><i class=\"fa fa-key\" aria-hidden=\"true\"\r\n                        ></i>Change Password</a>\r\n                    <a class=\"dropdown-item\" href=\"/login\" (click)=\"logout()\"><i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i>Log out</a>\r\n                </div>\r\n            </div>\r\n            <a class=\"navbar-brand\" href=\"\">\r\n                <img class=\"img-fluid nav-logo\" src=\"./assets/images/avatar.png\">\r\n            </a>\r\n\r\n\r\n        </form>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Users } from 'src/app/cts/shared/models/users';\r\n// import { SelectItem } from 'primeng/api/selectitem';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Location } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Utility } from 'src/app/cts/shared/models/utility';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport { UsersService } from 'src/app/cts/shared/services/users.service';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { InputPatternService } from 'src/app/cts/shared/services/input-pattern.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  user: Users[];\r\n  usertypes: any;\r\n  status: any;\r\n  branches: any[];\r\n  parents: any[];\r\n  teachers: any[];\r\n\r\n  private ngUnsubscribe = new Subject();\r\n  userId: number;\r\n  formType: string;\r\n  editData: any;\r\n  pageTitle: string;\r\n  isDisabled: boolean = false;\r\n  isRequired: boolean = false;\r\n  successMessage: string = \"\";\r\n  errorMessage: string = \"\";\r\n  querytype: number;\r\n  userType: string = \"\";\r\n  userData: any;\r\n\r\n  //to create Teacher From \r\n  addUserForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  constructor(private dropdownService: DropdownService, private UsersService: UsersService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute, private location: Location,private inputpattern:InputPatternService) {\r\n    this.usertypes = [\r\n      { label: 'Admin', value: 'ADMN' },\r\n      { label: 'Data Entry Operator', value: 'DEOP' },\r\n      { label: 'Teacher', value: 'TCHR' },\r\n      { label: 'Parent', value: 'PART' }\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'In Active', value: 'NA' },\r\n    ];\r\n\r\n    //Get Dropdowns API call\r\n    var dropdowns = [\"branches\", \"parents\", \"teachers\"];\r\n    this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.branches = result.data.branches;\r\n          this.parents = result.data.parents;\r\n          this.teachers = result.data.teachers;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //to read url parameters\r\n    this.route.queryParams.pipe(takeUntil(this.ngUnsubscribe)).subscribe(params => {\r\n      this.userId = Number(window.atob(params['id']));\r\n      this.formType = window.atob(params['type']);\r\n    });\r\n\r\n\r\n    if (this.formType == \"create\") {\r\n      this.pageTitle = \"Add User\";\r\n      this.isDisabled = false;\r\n      this.isRequired = true;\r\n      this.querytype = 1;\r\n    }\r\n    else if (this.formType == \"edit\") {\r\n      this.pageTitle = \"Edit User\";\r\n      this.editControls();\r\n      this.fetchData();\r\n      this.querytype = 2;\r\n    }\r\n    else {\r\n      this.pageTitle = \"View Details\";\r\n      this.isDisabled = true;\r\n      this.isRequired = false;\r\n      this.fetchData();\r\n      this.querytype = 2;\r\n    }\r\n    this.createForm();\r\n    this.addUserForm.get('usertype').valueChanges.subscribe(\r\n      (usertype1: string) => {\r\n        if (usertype1 === 'PART') {\r\n          this.addUserForm.get('parent').setValidators([Validators.required]);\r\n          this.addUserForm.get('teacher').setValidators(null);\r\n        } else if (usertype1 === 'TCHR') {\r\n          this.addUserForm.get('parent').setValidators(null);\r\n          this.addUserForm.get('teacher').setValidators([Validators.required]);\r\n        } else {\r\n          this.addUserForm.get('parent').setValidators(null);\r\n          this.addUserForm.get('teacher').setValidators(null);\r\n        }\r\n        this.addUserForm.get('parent').updateValueAndValidity();\r\n        this.addUserForm.get('teacher').updateValueAndValidity();\r\n      });\r\n  }\r\n\r\n  createForm() {\r\n    this.addUserForm = this.fb.group({\r\n      'usertype': new FormControl('', { validators: [Validators.required] }),\r\n      'branchid': new FormControl('', { validators: [Validators.required] }),\r\n      'teacher': new FormControl(''),\r\n      'parent': new FormControl(''),\r\n      'userName': new FormControl('', { validators: [Validators.required] }),\r\n      'userstatus': new FormControl('', { validators: [Validators.required] }),\r\n      'email': new FormControl('', { validators: [Validators.required, , Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")] }),\r\n      'dispName': new FormControl('', { validators: [Validators.required, Validators.pattern('^([A-Za-z0-9 _\\'-])*$')] }),\r\n      'password': new FormControl('', {\r\n        validators: [Validators.required, Validators.minLength(8), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')\r\n        ]\r\n      })\r\n\r\n    });\r\n  }\r\n\r\n\r\n  private fetchData() {\r\n    // this.loadGender(this.gender);\r\n    this.bindEditUserDetails();\r\n  }\r\n  bindEditUserDetails() {\r\n    let pagingData = new Utility();\r\n    pagingData = JSON.parse(Paginationutil.getDefaultFilter());\r\n    pagingData.idValue = this.userId.toString();\r\n    //Get Branches API call\r\n    this.UsersService.getUsers(pagingData)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {\r\n          this.editData = result.data[0];\r\n          this.userType = this.editData.usertype;\r\n          this.addUserForm.patchValue({\r\n            'usertype': this.editData.usertype,\r\n            'userName': this.editData.username,\r\n            'dispName': this.editData.displayname,\r\n            'branchid': this.editData.branchid,\r\n            'userstatus': this.editData.userstatus,\r\n            'password': this.editData.userpassword,\r\n            'email': this.editData.useremail,\r\n            'parent': this.editData.parentid,\r\n            'teacher': this.editData.teacherid\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  addUserSubmit(): void {\r\n    // this.formSubmitAttempt = true;\r\n    // this.successMessage=\"\";\r\n    // if(this.addUserForm.valid){\r\n    //   this.formSubmitAttempt=false;\r\n    // this.addUserForm.reset();     \r\n    //   this.successMessage=\"Your changes have been successfully saved\";\r\n    // }\r\n    this.errorMessage = \"\";\r\n    this.successMessage = \"\";\r\n    this.formSubmitAttempt = true;\r\n    if (this.addUserForm.valid) {\r\n      this.formSubmitAttempt = false;\r\n      let customObj = new Users();\r\n      customObj = this.addUserForm.value;\r\n      customObj.id = this.userId;\r\n      customObj.querytype = this.querytype;\r\n      // console.log(customObj)\r\n      //AED Branches API call\r\n      this.UsersService.AEDUsers(customObj)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n          \r\n          if (result.success) {\r\n            // this.branches= result.data;    \r\n            if (this.formType == \"create\") {\r\n              this.addUserForm.reset();\r\n            }\r\n            this.successMessage = AppConstants.Messages.successMessage;\r\n          } else {\r\n            this.errorMessage = \"User already exists\";\r\n          }\r\n        },\r\n          error => {\r\n            this.router.navigate(['/admin/app-error'], { queryParams: { message: window.btoa(error.message) } });\r\n        });\r\n    }\r\n  }\r\n  resetForm(): void {\r\n    this.addUserForm.reset();\r\n    this.successMessage = \"\";\r\n  }\r\n  editControls(): void {\r\n    this.isRequired = true;\r\n    this.isDisabled = false;\r\n    this.pageTitle = \"Edit User\";\r\n  }\r\n  list(): void {\r\n    // this.router.navigateByUrl(\"Teachers\");\r\n    this.location.back();\r\n    // this.router.navigate(['/Teachers'], {relativeTo: this.route});\r\n  }\r\n\r\n  dropdownChange(event): void {\r\n    // alert(event.value);\r\n    this.userType = event.value;\r\n    console.log(this.userType);\r\n    this.addUserForm.get('email').setValue(\"\");\r\n    this.addUserForm.get('dispName').setValue(\"\");\r\n    this.addUserForm.get('userName').setValue(\"\");\r\n  }\r\n\r\n  userDropDownChange(event, type): void {\r\n    // alert(event.value);    \r\n    if (type == 'T') {\r\n      this.userData = this.teachers.filter(teacher => teacher.value == event.value)[0];\r\n    } else if (type == 'P') {\r\n      this.userData = this.parents.filter(parent => parent.value == event.value)[0];\r\n    }\r\n    this.addUserForm.get('email').setValue(this.userData.email);\r\n    this.addUserForm.get('dispName').setValue(this.userData.name);\r\n    this.addUserForm.get('userName').setValue(this.userData.name);\r\n  }\r\n\r\n  \r\n keyPressAlphabet(event)\r\n {\r\n    this.inputpattern.Alphabet(event);\r\n }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">{{pageTitle}}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"addUserForm\" class=\"col-md-12\" (ngSubmit)=\"addUserSubmit()\">\r\n        <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"(!addUserForm.valid && formSubmitAttempt)\">\r\n            <div class=\"col-md-12\">\r\n                <i class=\"fa fa-exclamation-triangle\"></i>\r\n                <b>Please correct the following error(s):</b>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['usertype'].valid && addUserForm.controls['usertype'].touched)|| (!addUserForm.controls['usertype'].valid && addUserForm.controls['usertype'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['usertype'].errors?.required)\">Select\r\n                                    \"UserType\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['branchid'].valid && addUserForm.controls['branchid'].touched)|| (!addUserForm.controls['branchid'].valid && addUserForm.controls['branchid'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['branchid'].errors?.required)\">Select\r\n                                    \"Branch Id\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['userName'].valid && addUserForm.controls['userName'].touched)|| (!addUserForm.controls['userName'].valid && addUserForm.controls['userName'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['userName'].errors?.required)\">Enter \"User\r\n                                    Name\"</span>\r\n                                <span\r\n                                    *ngIf=\"(!addUserForm.controls['userName'].errors?.required && addUserForm.controls['userName'].errors?.pattern)\">Enter\r\n                                    Valid \"User Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['dispName'].valid && addUserForm.controls['dispName'].touched)|| (!addUserForm.controls['dispName'].valid && addUserForm.controls['dispName'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['dispName'].errors?.required)\">Enter \"Display\r\n                                    Name\"</span>\r\n                                <span\r\n                                    *ngIf=\"(!addUserForm.controls['dispName'].errors?.required && addUserForm.controls['dispName'].errors?.pattern)\">Enter\r\n                                    Valid \"Display Name\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\" *ngIf=\"((!addUserForm.controls['email'].valid && addUserForm.controls['email'].touched)|| \r\n                                (!addUserForm.controls['email'].valid && addUserForm.controls['email'].untouched && \r\n                                formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['email'].errors?.required)\">Enter \"Email\"</span>\r\n                                <span *ngIf=\"(addUserForm.controls['email'].errors?.pattern)\">Enter \"Valid Email\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['userstatus'].valid && addUserForm.controls['userstatus'].touched)|| (!addUserForm.controls['userstatus'].valid && addUserForm.controls['userstatus'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['userstatus'].errors?.required)\">Select\r\n                                    \"User Status\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['teacher'].valid && addUserForm.controls['teacher'].touched)|| (!addUserForm.controls['teacher'].valid && addUserForm.controls['teacher'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['teacher'].errors?.required)\">Select\r\n                                    \"Teacher\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['parent'].valid && addUserForm.controls['parent'].touched)|| (!addUserForm.controls['parent'].valid && addUserForm.controls['parent'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['parent'].errors?.required)\">Select\r\n                                    \"Parent\"</span>\r\n                            </div>\r\n                            <div class=\"col-md-3 error-div\"\r\n                                *ngIf=\"((!addUserForm.controls['password'].valid && addUserForm.controls['password'].touched)|| (!addUserForm.controls['password'].valid && addUserForm.controls['password'].untouched && formSubmitAttempt))\">\r\n                                <i class=\"fa fa-circle\"></i>\r\n                                <span *ngIf=\"(addUserForm.controls['password'].errors?.required)\">Enter\r\n                                    \"Password\"</span>\r\n                                <span *ngIf=\"(addUserForm.controls['password'].errors?.pattern)\">Enter \"Valid\r\n                                    Password\"</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row search-box search-box-padding form-block\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"col-md-12\">\r\n                    <span>User Type</span><br>\r\n                    <p-dropdown [options]=\"usertypes\" filter=\"true\" formControlName=\"usertype\"  (onChange)=\"dropdownChange($event)\"\r\n                        placeholder=\"Select usertype\" class=\"required\" [disabled]=\"isDisabled\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['usertype'].valid && addUserForm.controls['usertype'].touched) || (!addUserForm.controls['usertype'].valid && addUserForm.controls['usertype'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>User Name</span><br>\r\n                    <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\" \r\n                        (keypress)=\"keyPressAlphabet($event)\" \r\n                        formControlName=\"userName\" type=\"text\" placeholder=\"UserName\" size=\"30\" pInputText\r\n                        class=\"required\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['userName'].valid && addUserForm.controls['userName'].touched) || (!addUserForm.controls['userName'].valid && addUserForm.controls['userName'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>User Status</span><br>\r\n                    <p-dropdown [options]=\"status\" filter=\"true\" formControlName=\"userstatus\"\r\n                        placeholder=\"Select status\" class=\"required\" [disabled]=\"isDisabled\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['userstatus'].valid && addUserForm.controls['userstatus'].touched) || (!addUserForm.controls['userstatus'].valid && addUserForm.controls['userstatus'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>Email</span><br>\r\n                    <input id=\"input\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\" class=\"required\" maxlength=\"45\" formControlName=\"email\" type=\"text\"\r\n                        placeholder=\"User email\" size=\"30\" pInputText [ngClass]=\"{'error':((!addUserForm.controls['email'].valid && addUserForm.controls['email'].touched) || \r\n                        (!addUserForm.controls['email'].valid && addUserForm.controls['email'].untouched && \r\n                        formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <div class=\"col-md-12\" *ngIf=\"userType == 'TCHR'\">\r\n                    <span>Teachers</span><br>\r\n                    <p-dropdown [options]=\"teachers\" filter=\"true\" formControlName=\"teacher\" placeholder=\"Select Teacher\"\r\n                        class=\"required\" [disabled]=\"isDisabled\" (onChange)=\"userDropDownChange($event,'T')\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['teacher'].valid && addUserForm.controls['teacher'].touched) || (!addUserForm.controls['teacher'].valid && addUserForm.controls['teacher'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-12\" *ngIf=\"userType == 'PART'\">\r\n                    <span>Parents</span><br>\r\n                    <p-dropdown [options]=\"parents\" filter=\"true\" formControlName=\"parent\" placeholder=\"Select Parent\"\r\n                        class=\"required\" [disabled]=\"isDisabled\" (onChange)=\"userDropDownChange($event,'P')\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['parent'].valid && addUserForm.controls['parent'].touched) || (!addUserForm.controls['parent'].valid && addUserForm.controls['parent'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>Branch Id</span><br>\r\n                    <p-dropdown [options]=\"branches\" filter=\"true\" formControlName=\"branchid\" placeholder=\"Select BranchId\"\r\n                        class=\"required\" [disabled]=\"isDisabled\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['branchid'].valid && addUserForm.controls['branchid'].touched) || (!addUserForm.controls['branchid'].valid && addUserForm.controls['branchid'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                    </p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>DisplayName</span><br>\r\n                    <input id=\"input\" maxlength=\"45\" class=\"w-100\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                        (keypress)=\"keyPressAlphabet($event)\" \r\n                        formControlName=\"dispName\" type=\"text\" placeholder=\"DisplayName\" size=\"30\" pInputText\r\n                        class=\"required\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['dispName'].valid && addUserForm.controls['dispName'].touched) || (!addUserForm.controls['dispName'].valid && addUserForm.controls['dispName'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <span>Password</span><br>\r\n                    <input id=\"input\" class=\"w-100\" maxlength=\"10\" [attr.disabled]=\"isDisabled ? 'disabled': null\"\r\n                        formControlName=\"password\" type=\"password\" placeholder=\"Enter Password\" size=\"30\" pInputText\r\n                        class=\"required\"\r\n                        [ngClass]=\"{'error':((!addUserForm.controls['password'].valid && addUserForm.controls['password'].touched) || (!addUserForm.controls['password'].valid && addUserForm.controls['password'].untouched && formSubmitAttempt)),'required':(isRequired == true )}\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-4 pt-lg-3\">\r\n                <div class=\"col-md-12\">\r\n                    <h6 class=\"yellow\"><u>Minimum Password Requirements</u></h6>\r\n                    <p>Password must contain a minimum of eight(8) characters AND include each of the following:</p>\r\n                    <ul>\r\n                        <li>An upper case letter (A)</li>\r\n                        <li>A lower case letter (a)</li>\r\n                        <li>A number (0-9)</li>\r\n                        <li>A special character !@#$%^&*()_+</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <div class=\"col-md-4  required-block\">\r\n                <div class=\"col-md-12\">\r\n                    <span class=\"required\">\r\n                        <span class=\"requirednote\">Required</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-check\" label=\"Edit\" *ngIf=\"isDisabled\"\r\n                    (click)=\"editControls()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"submit\" icon=\"pi pi-check\" label=\"Submit\" *ngIf=\"!isDisabled\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" *ngIf=\"!isDisabled\"\r\n                    (click)=\"resetForm()\" class=\"ui-button-secondary table-header-items\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-times\" label=\"Cancel\" (click)=\"list()\"\r\n                    class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","// \r\n\r\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { LazyLoadEvent, SelectItem } from 'primeng/api/public_api';\r\nimport { Users } from 'src/app/cts/shared/models/users';\r\nimport { UsersService } from 'src/app/cts/shared/services/users.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Paginationutil } from 'src/app/cts/shared/models/paginationutil';\r\nimport * as moment from 'moment';\r\nimport { AppConstants } from 'src/app/cts/app-constants';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { DropdownService } from 'src/app/cts/shared/services/dropdown.service';\r\nimport { Table } from 'primeng/table';\r\n\r\nenum UserTypes {\r\n  'PART' = \"Parent\",\r\n  'TCHR' = \"Teacher\",\r\n  'DEOP' = \"Data Entry Operator\",\r\n  'ADMN' = \"Admin\"\r\n}\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  private ngUnsubscribe = new Subject();\r\n  datasource: Users[];\r\n  users: Users[];\r\n  totalRecords: number;\r\n  cols: any[];\r\n  display:boolean=false;\r\n  position: string;\r\n  @ViewChild('myFiltersDiv') myFiltersDiv: ElementRef;\r\n  usertypes: any[];\r\n  experience: any[];\r\n  loading: boolean;\r\n  status:any;\r\n  filtersForm: FormGroup;\r\n  toBeDeletedId:any;\r\n  errorMessage: string = \"\";\r\n  successMessage: string = \"\";\r\n  //pagination and api integration starts from here\r\n  numberOfPages:number =10;\r\n  totalcount:number=0;\r\n  noOfItems=10;\r\n  advancedFilterValue:string =\"\";\r\n  currentPage:number = 1;\r\n  pageCount:number;\r\n  branches: SelectItem[] = [];\r\n\r\n  @ViewChild(Table, { static: false }) DataTable: Table;\r\n\r\n  constructor(private UsersService: UsersService,private dropdownService: DropdownService, private router: Router,private route:ActivatedRoute, private fb: FormBuilder) {\r\n    this.usertypes = [\r\n      { label: 'Admin', value: 'ADMN' },\r\n      { label: 'DataEntryOperator', value: 'DEOP' },\r\n      { label: 'Teacher', value: 'TCHR' },\r\n      { label: 'Parent', value: 'PART' }\r\n    ];\r\n    this.status = [\r\n      { label: 'Active', value: 'AC' },\r\n      { label: 'In Active', value: 'NA' },\r\n    ];\r\n    this.users = [];\r\n      //Get Dropdowns API call\r\n      var dropdowns = [\"branches\"];\r\n      this.dropdownService.getDropdowns(dropdowns)\r\n      .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n        if (result.success) {     \r\n         this.branches = result.data.branches;        \r\n        }      \r\n      });\r\n\r\n  }\r\n\r\n  toggleClass($event: any) {\r\n    if (this.myFiltersDiv.nativeElement.classList.contains('transform-active'))\r\n      this.myFiltersDiv.nativeElement.classList.remove('transform-active')\r\n    else\r\n      this.myFiltersDiv.nativeElement.classList.add('transform-active')\r\n  }\r\n //Crud events\r\n addNew($event: any) {\r\n  let id=\"0\";\r\n  this.router.navigate(['add-user'], { relativeTo: this.route, queryParams: { type: window.btoa('create'),id: window.btoa(id) } });\r\n}\r\neditUser(id):void{\r\n  this.router.navigate(['add-user'],{relativeTo: this.route,queryParams: { type: window.btoa('edit'), id: window.btoa(id) }});\r\n}\r\nviewUser(id):void{\r\n  this.router.navigate(['add-user'],{relativeTo: this.route,queryParams: { type: window.btoa('view'), id: window.btoa(id) }});\r\n}\r\n  deleteUser(id):void{\r\n    this.position=\"top\";\r\n    this.display=true;\r\n    this.toBeDeletedId = id;\r\n  }\r\n  userRevoke():void{\r\n    this.display=false;\r\n    let customObj = new Users();\r\n    customObj.id = this.toBeDeletedId;\r\n    customObj.querytype = 3;\r\n     //AED Branches API call\r\n     this.UsersService.AEDUsers(customObj)\r\n     .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result => {\r\n       if (result.success) {    \r\n        this.DataTable.reset();   \r\n         this.successMessage = AppConstants.Messages.successMessage;\r\n       }else{\r\n         this.errorMessage = AppConstants.Messages.errorMessage;\r\n       }\r\n     }); \r\n    \r\n  }\r\n\r\n  public ngOnInit() {   \r\n    this.cols = [\r\n      { field: 'usertype', header: 'User Type' },\r\n      { field: 'username', header: 'User Name' },\r\n      { field: 'displayname', header: 'Display Name' },\r\n      { field: 'branchtitle', header: 'Branch' },\r\n      { field: 'createddate', header: 'Created On' },\r\n      { field: 'userstatus', header: 'User Status' }\r\n    ];\r\n    this.loading = true;\r\n     //to create form with validations\r\n    this.createFilterForm();\r\n  } \r\n\r\n  //Api Integration Starts from here\r\n  onPageChange(event:LazyLoadEvent){\r\n    let pageObject = Paginationutil.getGridFilters(event,this.advancedFilterValue);\r\n\r\n    this.currentPage = pageObject.currentPage;\r\n\r\n    let isinitialload = this.pageCount == undefined || this.pageCount == null;\r\n    this.pageCount = pageObject.pageCount;\r\n\r\n    let currentrows = event.rows * pageObject.pageNo;\r\n\r\n    if(this.totalcount != 0){\r\n      this.noOfItems =(currentrows < this.totalcount ? currentrows : this.totalcount);\r\n    }\r\n\r\n    this.loadGrids(JSON.stringify(pageObject));\r\n\r\n  }\r\n\r\n  loadGrids(pagingData){\r\n    let paging = JSON.parse(pagingData);\r\n    //Get Branches API call\r\n    this.UsersService.getUsers(pagingData)\r\n    .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n      if(result.success){\r\n      this.users= result.data;\r\n      //pagination starts from here\r\n      this.totalcount = parseInt(result.total);    \r\n\r\n      if(this.totalcount <= paging.pageSize){\r\n        this.noOfItems = this.totalcount;\r\n      }else{\r\n        this.noOfItems = (JSON.parse(pagingData)).pageSize;\r\n      }\r\n\r\n      if(this.users != null && this.users != undefined){\r\n        this.users = this.users.map(function(el,i){\r\n          var o = Object.assign({},el);\r\n          o.indexId = i;\r\n          return o;\r\n        });\r\n      }\r\n      let currentrows = (this.currentPage * this.numberOfPages);\r\n    }\r\n    });\r\n  }\r\n  //API Integration ends here\r\n\r\n  //filter code starts from here\r\n  createFilterForm() {\r\n    this.filtersForm = this.fb.group({\r\n      'tusertype': new FormControl(''),\r\n      'tuserName': new FormControl(''),\r\n      'tuserstatus':new FormControl(''),\r\n      'tbranch':new FormControl(''),\r\n      'tcreateddate':new FormControl('')\r\n\r\n    });\r\n  }\r\n  //Reset form method\r\n  resetFilterForm(): void {\r\n    this.filtersForm.reset();\r\n    this.DataTable.reset();\r\n  }\r\n//to get date format\r\ngetFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getDefaultFormat())\r\n }\r\n checkPermissions(permissionValue){\r\n  return  AuthorizationGuard.checkPermission(permissionValue);\r\n }\r\n\r\n   //to get date format\r\ngetFilterFormat(createddate):string{\r\n  return moment(createddate).format(Paginationutil.getFilterDateFormat())\r\n }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"col-md-12 component-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <span class=\"table-header-items\">Users</span>\r\n            </div>\r\n            <div class=\"col-md-8 text-right\">\r\n                <button pButton type=\"button\" icon=\"pi pi-filter\" label=\"Filters\"\r\n                    class=\"ui-button-secondary table-header-items\" (click)=\"toggleClass($event)\"></button>&nbsp;\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" label=\"Users\" (click)=\"addNew($event)\"\r\n                    *ngIf=\"checkPermissions('ADD')\" class=\"ui-button-secondary table-header-items\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"filtersForm\">\r\n        <div #myFiltersDiv class=\"col-md-12 box transform\">\r\n            <div class=\"row search-box search-box-padding\">\r\n                <div class=\"col-md-3\">\r\n                    <span>User Name</span><br>\r\n                    <input id=\"user\" #un class=\"w-100\" type=\"text\" formControlName=\"tuserName\" placeholder=\"User Name\"\r\n                        size=\"30\" (keydown)=\"$event.key === 'Enter' ? dt.filter(un.value,'username',''): ''\" pInputText>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>User Type</span><br>\r\n                    <p-dropdown #ut [options]=\"usertypes\" class=\"w-100\" formControlName=\"tusertype\"\r\n                    (onChange)=\"dt.filter(ut.value,'usertype','')\"\r\n                        placeholder=\"Select User Type\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>User Status</span><br>\r\n                    <p-dropdown #us [options]=\"status\" class=\"w-100\" formControlName=\"tuserstatus\"\r\n                    (onChange)=\"dt.filter(us.value,'userstatus','')\"\r\n                        placeholder=\"Select Status\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Branch Name</span><br>\r\n                    <p-dropdown #bn [options]=\"branches\" class=\"w-100\" formControlName=\"tbranch\"\r\n                    (onChange)=\"dt.filter(bn.value,'branchid','')\"\r\n                        placeholder=\"Select Branch Name\"></p-dropdown>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <span>Created On</span><br>\r\n                    <p-calendar #td placeholder=\"Select Date\" formControlName=\"tcreateddate\"\r\n                        (onSelect)=\"dt.filter(getFilterFormat(td.value),'createddate','')\"\r\n                        [inputStyle]=\"{'width':'100% !important'}\" [showIcon]=\"true\"></p-calendar>\r\n                </div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3\"></div>\r\n                <div class=\"col-md-3 text-right search-buttons\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-refresh\" label=\"Clear\" (click)=\"resetFilterForm()\"\r\n                        class=\"ui-button-secondary table-header-items\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"col-md-12 error-block animated fadeIn\" *ngIf=\"errorMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-exclamation-circle\"></i>\r\n            <b>{{errorMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 success-block animated fadeIn\" *ngIf=\"successMessage\">\r\n        <div class=\"col-md-12\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <b>{{successMessage}}</b>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-12 search-box\">\r\n        <p-table #dt [columns]=\"cols\" [value]=\"users\" [lazy]=\"true\" dataKey=\"indexId\" [paginator]=\"true\"\r\n            [responsive]=\"true\" [rows]=\"numberOfPages\" (onLazyLoad)=\"onPageChange($event)\" [totalRecords]=\"totalcount\"\r\n            [rowsPerPageOptions]=\"[10,20,30,40,50]\" [reorderableColumns]=\"true\" dataKey=\"firstname\">\r\n            <ng-template pTemplate=\"header\" let-columns>\r\n                <tr>\r\n                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pReorderableColumn\r\n                        style=\"width: 20% !important;\">\r\n                        <div class=\"\">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]=\"col.field\" style=\"float:right\"></p-sortIcon>\r\n                        </div>\r\n                    </th>\r\n                    <th style=\"width:5em\"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\" let-expanded=\"expanded\">\r\n                <tr>\r\n                    <td *ngFor=\"let col of columns\">\r\n                        <div class=\"\" *ngIf=\"col.field == 'createddate'\">\r\n                            <a class=\"bold\" (click)=\"viewUser(rowData.id)\">{{getFormat(rowData.createddate)}}</a>\r\n                        </div>\r\n                        <div class=\"\" *ngIf=\"col.field != 'createddate'\">\r\n                            <div class=\"class\" *ngIf=\"col.field != 'userstatus'\">\r\n                                <a class=\"bold\" (click)=\"viewUser(rowData.id)\">{{rowData[col.field]}}</a>\r\n                            </div>\r\n                            <div class=\"class\" *ngIf=\"col.field == 'userstatus'\">\r\n                                <div class=\"\" *ngIf=\"rowData.userstatus == 'AC'\">\r\n                                    <button class=\"btn btn-success\">Active</button>\r\n                                </div>\r\n                                <div class=\"\" *ngIf=\"rowData.userstatus == 'NA'\">\r\n                                    <button class=\"btn btn-danger\">Not Active</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div class=\"d-flex\">\r\n                            <i class=\"pi pi-pencil\" *ngIf=\"checkPermissions('EDIT')\"\r\n                                (click)=\"editUser(rowData.id)\"></i>&nbsp;\r\n                            <i class=\"pi pi-trash\" *ngIf=\"checkPermissions('DELETE')\"\r\n                                (click)=\"deleteUser(rowData.id)\"></i>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        <!-- pagination div starts from here -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"pagecount-dropdown\">\r\n                <span class=\"pagecounting\">Items per page</span>\r\n            </div>\r\n            <div class=\"pagecount\">\r\n                <div *ngIf=\"dt.totalRecords != 0\">\r\n                    {{dt.first+1}}-{{((dt.first+dt.rows)>dt.totalRecords)?dt.totalRecords:(dt.first+dt.rows)}} of\r\n                    {{dt.totalRecords}}\r\n                    Items\r\n                </div>\r\n                <div *ngIf=\"dt == undefined || dt.totalRecords==0\">No Items to Display</div>\r\n            </div>\r\n        </div>\r\n        <!-- pagination div ends here -->\r\n    </div>\r\n    <p-dialog header=\"Delete Confirmation\" [transitionOptions]=\"'500ms'\" [baseZIndex]=\"20000\" [(visible)]=\"display\"\r\n        [style]=\"{width: '30vw'}\" [responsive]=\"true\" [draggable]=\"true\" [position]=\"position\">\r\n        <p>Are you sure you want to delete User?</p>\r\n        <p-footer class=\"btm-buttons\">\r\n            <button type=\"button\" pButton icon=\"pi pi-check\" label=\"Yes\" (click)=\"userRevoke()\"></button>\r\n            <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"display=false\" label=\"No\"></button>\r\n        </p-footer>\r\n    </p-dialog>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StudentsComponent } from '../../home/components/students/students.component';\r\nimport { TeachersComponent } from '../../home/components/teachers/teachers.component';\r\nimport { UsersComponent } from '../../home/components/users/users.component';\r\nimport { ExamsComponent } from '../../home/components/exams/exams.component';\r\nimport { ClassesComponent } from '../../home/components/classes/classes.component';\r\nimport {SectionsComponent} from '../../home/components/sections/sections.component';\r\nimport { StudentlayoutComponent } from '../../home/components/students/studentlayout/studentlayout.component';\r\nimport { StudentdetailroutingModule } from '../../home/components/students/studentdetailrouting/studentdetailrouting.module';\r\nimport { AddTeacherComponent } from '../../home/components/teachers/add-teacher/add-teacher.component';\r\nimport { AddUserComponent } from '../../home/components/users/add-user/add-user.component';\r\nimport {AddExamComponent} from '../../home/components/exams/add-exam/add-exam.component';\r\nimport {ChangePasswordComponent} from '../../home/components/change-password/change-password.component';\r\nimport { DashboardComponent } from '../../home/components/dashboard/dashboard.component';\r\nimport { EventsComponent } from '../../home/components/events/events.component';\r\nimport { from } from 'rxjs';\r\nimport { AddEventComponent } from '../../home/components/events/add-event/add-event.component';\r\nimport { LayoutComponent } from '../components/layout/layout.component';\r\nimport { AddStudentComponent } from '../components/students/add-student/add-student.component';\r\nimport { AddClassComponent } from '../components/classes/add-class/add-class.component';\r\nimport { AuthenticationGuardService } from 'src/app/core/security/authentication-guard.service';\r\nimport { BranchesComponent } from '../components/branches/branches.component';\r\nimport { AddBranchComponent } from '../components/branches/add-branch/add-branch.component';\r\nimport { NewsComponent } from '../components/news/news.component';\r\nimport { AddNewsComponent } from '../components/news/add-news/add-news.component';\r\nimport { AddAchievementComponent } from '../components/achievements/add-achievement/add-achievement.component';\r\nimport { AchievementsComponent } from '../components/achievements/achievements.component';\r\nimport { RoleAccessComponent } from '../components/role-access/role-access.component';\r\nimport { AuditlogsComponent } from '../components/auditlogs/auditlogs.component';\r\nimport { AddAuditlogComponent } from '../components/auditlogs/add-auditlog/add-auditlog.component';\r\nimport { SettingsComponent } from '../components/settings/settings.component';\r\nimport { AddTimetableComponent } from '../components/timetable/add-timetable/add-timetable.component';\r\nimport { TimetableComponent } from '../components/timetable/timetable.component';\r\nimport { SubjectsComponent } from '../components/subjects/subjects.component';\r\nimport { AddSubjectsComponent } from '../components/subjects/add-subjects/add-subjects.component';\r\nimport { QualificationsComponent } from '../components/qualifications/qualifications.component';\r\nimport { AddQualificationComponent } from '../components/qualifications/addqualifications/addqualifications.component';\r\nimport { AddParentComponent } from '../components/parents/add-parent/add-parent.component';\r\nimport { ParentsComponent } from '../components/parents/parents.component';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { ErrorComponent } from '../components/error/error.component';\r\nimport { AccessDeniedComponent } from '../components/access-denied/access-denied.component';\r\n\r\n\r\n\r\n\r\nconst homeRoutes: Routes = [\r\n  {\r\n    path:'admin',\r\n    component:LayoutComponent,\r\n    children:[\r\n      {\r\n        path: 'students',\r\n        component: StudentsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Students List' },\r\n        children: [\r\n          {\r\n            path: 'student',\r\n            component: StudentlayoutComponent,\r\n            loadChildren: () => import('../components/students/studentdetailrouting/studentdetailrouting.module').then(m => m.StudentdetailroutingModule)\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'teachers',       \r\n        // loadChildren: () => import('../components/teachers/teachers.module').then(m => m.TeachersModule),\r\n        component: TeachersComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Teachers List' }\r\n      },\r\n      {\r\n        path: 'teachers/add-teacher',       \r\n        component: AddTeacherComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Teachers List' }\r\n      },\r\n      {\r\n        path: 'students/add-student',\r\n        component: AddStudentComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Student' }\r\n      },\r\n      {\r\n        path: 'events',\r\n        component: EventsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Events List' }\r\n      },\r\n      {\r\n        path: 'events/add-event',\r\n        component: AddEventComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Event' }\r\n      }, \r\n      {\r\n        path: 'users',\r\n        component: UsersComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Users List' }\r\n      },\r\n      {\r\n        path: 'users/add-user',\r\n        component: AddUserComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add User' }\r\n      },\r\n      {\r\n        path: 'branches',\r\n        component: BranchesComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Branches' }\r\n      },\r\n      {\r\n        path: 'branches/add-branch',\r\n        component: AddBranchComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Branch' }\r\n      },\r\n      {\r\n        path: 'subjects',\r\n        component: SubjectsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Subjects' }\r\n      },\r\n      {\r\n        path: 'subjects/add-subject',\r\n        component: AddSubjectsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Subject' }\r\n      },\r\n      {\r\n        path: 'news',\r\n        component: NewsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'News' }\r\n      },\r\n      {\r\n        path: 'news/add-news',\r\n        component: AddNewsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add News' }\r\n      },\r\n      {\r\n        path: 'achivements',\r\n        component: AchievementsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Achievement' }\r\n      },\r\n      {\r\n        path: 'achivements/add-achivement',\r\n        component: AddAchievementComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add achievement' }\r\n      },\r\n      {\r\n        path: 'timetable',\r\n        component: TimetableComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Timetable' }\r\n      },\r\n      {\r\n        path: 'timetable/add-timetable',\r\n        component: AddTimetableComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add timetable' }\r\n      },\r\n      {\r\n        path: 'exams',\r\n        component: ExamsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Exams List' }\r\n      },\r\n      {\r\n        path: 'exams/add-exam',\r\n        component: AddExamComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Exam' }\r\n      },\r\n      {\r\n        path: 'classes',\r\n        component: ClassesComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Classes List' }\r\n      },\r\n      {\r\n        path: 'classes/add-class',\r\n        component: AddClassComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Class' }\r\n      },\r\n      {\r\n        path: 'parents',\r\n        component: ParentsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Parents List' }\r\n      },\r\n      {\r\n        path: 'parents/add-parent',\r\n        component: AddParentComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Parent' }\r\n      },\r\n      {\r\n        path: 'qualifications',\r\n        component: QualificationsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Qualifications List' }\r\n      },\r\n      {\r\n        path: 'qualifications/add-qualification',\r\n        component: AddQualificationComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Add Qualification' }\r\n      },\r\n      {\r\n        path: 'roleaccess',\r\n        component: RoleAccessComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Role Access List' }\r\n      },\r\n      {\r\n        path: 'auditlogs',\r\n        component: AuditlogsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Audit logs List' },\r\n        children: [\r\n          {\r\n            path: 'add-auditlog',\r\n            component: AddAuditlogComponent,\r\n            canActivate:[AuthenticationGuardService,AuthorizationGuard]\r\n          }\r\n        ]\r\n      },     \r\n     \r\n      {\r\n        path: 'sections',\r\n        component: SectionsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Sections List' }\r\n      },\r\n      {\r\n        path: 'changePassword',\r\n        component: ChangePasswordComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Change Password' }\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        component: DashboardComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Dashboard' }\r\n      },\r\n      {\r\n        path: 'settings',\r\n        component: SettingsComponent,\r\n        canActivate:[AuthenticationGuardService,AuthorizationGuard],\r\n        data: { title: 'Settings' }\r\n      },\r\n      {\r\n        path:'app-error',\r\n        component:ErrorComponent\r\n      },\r\n      {\r\n        path:'access-denied',\r\n        component:AccessDeniedComponent\r\n      }\r\n    ]\r\n  } \r\n   \r\n];\r\n@NgModule({\r\n  imports:[\r\n    RouterModule.forChild(homeRoutes)\r\n  ],\r\n  exports:[\r\n    RouterModule\r\n  ]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule  } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {CommonModule } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from 'src/app/app-routing.module';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { SharedroutingModule } from '../../shared/sharedrouting/sharedrouting.module';\r\n\r\n\r\nimport { TopbarComponent } from '../../home/components/topbar/topbar.component';\r\nimport { MenubarComponent } from '../../home/components/menubar/menubar.component';\r\nimport { TilesComponent } from '../../home/components/tiles/tiles.component';\r\nimport { StudentsComponent } from '../../home/components/students/students.component';\r\nimport { TeachersComponent } from '../../home/components/teachers/teachers.component';\r\n\r\nimport { UsersComponent } from '../../home/components/users/users.component';\r\nimport { ExamsComponent } from '../../home/components/exams/exams.component';\r\nimport { ClassesComponent } from '../../home/components/classes/classes.component';\r\n\r\n\r\n\r\nimport { StudentlayoutComponent } from '../../home/components/students/studentlayout/studentlayout.component';\r\nimport { StudentprofileComponent } from '../../home/components/students/studentprofile/studentprofile.component';\r\nimport { StudenteditComponent } from '../../home/components/students/studentedit/studentedit.component';\r\nimport { StudentreportsComponent } from '../../home/components/students/studentreports/studentreports.component';\r\nimport { StudentmarksComponent } from '../../home/components/students/studentmarks/studentmarks.component';\r\nimport { StudentmoreComponent } from '../../home/components/students/studentmore/studentmore.component';\r\nimport { AddTeacherComponent } from '../../home/components/teachers/add-teacher/add-teacher.component';\r\nimport { AddUserComponent } from '../../home/components/users/add-user/add-user.component';\r\nimport { ChangePasswordComponent } from '../../home/components/change-password/change-password.component';\r\nimport { SectionsComponent } from '../../home/components/sections/sections.component';\r\nimport { DashboardComponent } from '../../home/components/dashboard/dashboard.component';\r\nimport { MyProfileComponent } from '../../home/components/my-profile/my-profile.component';\r\nimport { RoleAccessComponent } from '../../home/components/role-access/role-access.component';\r\nimport { SettingsComponent } from '../../home/components/settings/settings.component';\r\nimport { AboutUsComponent } from '../../home/components/about-us/about-us.component';\r\nimport { StatisticsComponent } from '../../home/components/statistics/statistics.component';\r\nimport { AddStudentComponent } from '../../home/components/students/add-student/add-student.component';\r\nimport { AddSectionComponent } from '../../home/components/sections/add-section/add-section.component';\r\nimport { AddExamComponent } from '../../home/components/exams/add-exam/add-exam.component';\r\nimport { AddClassComponent } from '../../home/components/classes/add-class/add-class.component';\r\nimport { FooterComponent } from '../../home/components/footer/footer.component';\r\nimport { EventsComponent } from '../../home/components/events/events.component';\r\nimport { FeesComponent } from '../../home/components/fees/fees.component';\r\nimport { NewsComponent } from '../../home/components/news/news.component';\r\nimport { AchievementsComponent } from '../../home/components/achievements/achievements.component';\r\nimport { AddAchievementComponent } from '../../home/components/achievements/add-achievement/add-achievement.component';\r\nimport { AddEventComponent } from '../../home/components/events/add-event/add-event.component';\r\nimport { AddFeeComponent } from '../../home/components/fees/add-fee/add-fee.component';\r\nimport { AddNewsComponent } from '../../home/components/news/add-news/add-news.component';\r\nimport { LayoutComponent } from '../components/layout/layout.component';\r\nimport { ErrorComponent } from '../components/error/error.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    TopbarComponent,\r\n    MenubarComponent,\r\n    TilesComponent,\r\n    StudentsComponent,\r\n    TeachersComponent,\r\n    UsersComponent,\r\n    ExamsComponent,\r\n    ClassesComponent,\r\n    StudentlayoutComponent,\r\n    StudentprofileComponent,\r\n    StudenteditComponent,\r\n    StudentreportsComponent,\r\n    StudentmarksComponent,\r\n    StudentmoreComponent,\r\n    AddTeacherComponent,\r\n    AddUserComponent,\r\n    ChangePasswordComponent,\r\n    SectionsComponent,\r\n    DashboardComponent,\r\n    MyProfileComponent,\r\n    RoleAccessComponent,\r\n    SettingsComponent,\r\n    AboutUsComponent,\r\n    StatisticsComponent,\r\n    AddStudentComponent,\r\n    AddSectionComponent,\r\n    AddExamComponent,\r\n    AddClassComponent,\r\n    FooterComponent,\r\n    EventsComponent,\r\n    FeesComponent,\r\n    NewsComponent,\r\n    AchievementsComponent,\r\n    AddAchievementComponent,\r\n    AddEventComponent,\r\n    AddFeeComponent,\r\n    AddNewsComponent,\r\n    ErrorComponent\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,  \r\n    HomeRoutingModule,    \r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedroutingModule,    \r\n  ],\r\n  exports:[\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    \r\n    LayoutComponent,\r\n    TopbarComponent,\r\n    MenubarComponent,\r\n    TilesComponent\r\n  ],\r\n  providers: []\r\n})\r\n\r\nexport class HomeModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from 'src/app/cts/shared/services/login.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  errorMessage:string = \"\";\r\n  addLoginForm: FormGroup;\r\n  formSubmitAttempt: boolean = false;\r\n  private ngUnsubscribe = new Subject();\r\n  constructor(private fb: FormBuilder, private router: Router,private route:ActivatedRoute,private loginService:LoginService) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.addLoginForm = this.fb.group({\r\n      'userName': new FormControl('', { validators: [Validators.required, Validators.pattern('^([A-Za-z0-9 _\\'-])*$')] }),\r\n      'password': new FormControl('', {\r\n        // validators: [Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')\r\n        validators: [Validators.required, Validators.pattern('^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$')\r\n        ]\r\n      }),    \r\n      // 'userName': new FormControl(''),\r\n      // 'password': new FormControl(''),\r\n    });\r\n  }\r\n  addLoginSubmit(): void {\r\n    this.errorMessage = \"\";\r\n     this.formSubmitAttempt = true;\r\n      if (this.addLoginForm.valid){     \r\n        this.formSubmitAttempt=false;\r\n        this.loginService.submitUserAccessDetails(this.addLoginForm.value)\r\n        .pipe(takeUntil(this.ngUnsubscribe)).subscribe(result =>{  \r\n          if(result.token){\r\n            this.router.navigate(['/admin/dashboard'], {relativeTo: this.route});\r\n          }else{\r\n            this.errorMessage=\"The login information you entered does not match our records. Please try again.\";\r\n          }\r\n        })\r\n        \r\n    }\r\n  \r\n\r\n  }\r\n  \r\n\r\n}\r\n","<form [formGroup]=\"addLoginForm\" class=\"col-md-12 login-parent-block\" (ngSubmit)=\"addLoginSubmit()\"\r\n\r\nstyle=\"  background: url(./assets/images/loginbg.jpg)  no-repeat center; background-size: cover;\">\r\n    <div class=\"row form-block login-child-block\">\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4 login-div\">\r\n            <div class=\"col-md-12\">\r\n                <h3 class=\"text-center\">\r\n                    <b>CTS APP</b>\r\n                </h3>\r\n            </div>\r\n            <div class=\"ui-inputgroup m-2\">\r\n                <span class=\"ui-inputgroup-addon\"><i class=\"fa fa-user \"></i></span>\r\n                <input id=\"input\" class=\"w-100\" class=\"form-control\" formControlName=\"userName\" type=\"text\" placeholder=\"User Name\" size=\"30\"\r\n                    pInputText \r\n                    [ngClass]=\"{'error':((!addLoginForm.controls['userName'].valid && addLoginForm.controls['userName'].touched) || (!addLoginForm.controls['userName'].valid && addLoginForm.controls['userName'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n            <div class=\"ui-inputgroup m-2\">\r\n                <span class=\"ui-inputgroup-addon\"><i class=\"fa fa-lock\"></i></span>\r\n\r\n                <input id=\"input\" class=\"w-100\" class=\"form-control\" formControlName=\"password\" type=\"password\" placeholder=\"Enter Password\"\r\n                    size=\"30\" pInputText \r\n                    [ngClass]=\"{'error':((!addLoginForm.controls['password'].valid && addLoginForm.controls['password'].touched) || (!addLoginForm.controls['password'].valid && addLoginForm.controls['password'].untouched && formSubmitAttempt))}\">\r\n            </div>\r\n           <div class=\"m-2 forgot\">\r\n                <a href=\"\" class=\"for text-center\">Forgot Password</a>\r\n            </div>\r\n            <div class=\"m-2 text-center\">\r\n                <button type=\"submit\" class=\"btn btn-default btn-block btn-login\">Log in</button> \r\n            </div>\r\n            <div class=\"col-md-12 errorMessage\" *ngIf=\"errorMessage\">\r\n                   <p>{{errorMessage}}</p>\r\n            </div>\r\n            \r\n            <div class=\"col-md-12\" *ngIf=\"(!addLoginForm.valid && formSubmitAttempt)\">\r\n                \r\n                <p *ngIf=\"((addLoginForm.controls['userName'].errors?.required) || (addLoginForm.controls['password'].errors?.required))\">Please Enter Username or Password</p>\r\n                <p *ngIf=\"((!addLoginForm.controls['userName'].errors?.required && addLoginForm.controls['userName'].errors?.pattern) || (!addLoginForm.controls['password'].errors?.required && addLoginForm.controls['password'].errors?.pattern))\">Please Enter Valid Username or Password</p>\r\n            </div> \r\n            <!-- <div class=\"col-md-12 mt-3 text-center\">\r\n                <img _ngcontent-mte-c109=\"\" src=\"./assets/images/ctclogo.png\" class=\"img-fluid login-logo\">\r\n            </div> -->\r\n        </div>\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4\"></div>\r\n        <div class=\"col-md-4 sup-div\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4 text-center li1\"><a href=\"#\"><b>Contact Us</b></a> </div>\r\n                <div class=\"col-md-4 text-center li2\"><a href=\"#\"><b>Privacy Policy</b></a></div>\r\n                <div class=\"col-md-4 text-center\"><a href=\"#\"><b>Terms of Use</b></a> </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\"></div>\r\n    </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from '../../public/components/login/login.component';\r\n\r\nconst publicRoutes: Routes = [\r\n  {\r\n    path: 'login', \r\n    component: LoginComponent, \r\n    pathMatch: 'full'\r\n  },\r\n  { path: 'test', loadChildren: () => import('../components/test/test.module').then(m => m.TestModule) },\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(publicRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PublicRoutingModule { }\r\n","//common imports\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule  } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {CommonModule } from '@angular/common';\r\n\r\n//other imports\r\nimport { PublicRoutingModule } from './public-routing.module';\r\nimport { LoginComponent } from '../../public/components/login/login.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PublicRoutingModule,\r\n    // InputTextModule\r\n  ]\r\n})\r\nexport class PublicModule { }\r\n","export class Achievements {\r\n    \r\n         id: number;\r\n         title: string;\r\n         date: string;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;\r\n         querytype:number;\r\n         status:string;\r\n    \r\n}\r\n\r\nexport class Events{\r\n    id: number;\r\n    querytype:number;\r\n    start:string;\r\n    end:string;\r\n}\r\n","export class Branches {    \r\n         id: number;\r\n         code: string;\r\n         title: string;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;  \r\n         querytype:number;  \r\n         status:string;\r\n}\r\n","export class Classes {\r\n\r\n         id: number;\r\n         name: string;\r\n         noofsections: string;\r\n         class:string;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;\r\n         querytype:number;\r\n         status:string;\r\n\r\n}\r\n","export class Exams {\r\n    id: number;\r\n    title: string;\r\n    year: string;\r\n    createddate: Date;\r\n    createdby: string;\r\n    indexId: number;\r\n    querytype: number;\r\n    status: string;\r\n    subject: string;\r\n    cutoff: string;\r\n    total: string;\r\n    examswisesubjects: examswisesubject[];\r\n    subjects :examclasswisesubjects[];\r\n}\r\n\r\nexport class examswisesubject {\r\n    subjectid: number;\r\n    subject: string;\r\n    cutoff: number;\r\n    total: number;\r\n}\r\n\r\nexport class examclasswisesubjectmarks {\r\n    studentId: string;\r\n    classId: number;\r\n    examId: number;\r\n    subjectId: number;\r\n    marks: string;\r\n}\r\n\r\nexport class examclasswisesubjects {\r\n    classid: number;\r\n    subjectid: number;\r\n    cutoff: number;\r\n    total: number;\r\n}\r\n","export class multiselectObject {\r\n    key: string;\r\n    value: string;\r\n  }\r\n","export class News {\r\n    \r\n         id: number;\r\n         title: string;\r\n         branchid: number;\r\n         description: string;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;\r\n         querytype:number;\r\n         status:string;\r\n    \r\n}\r\n","import { table } from 'console';\r\nimport { AppConstants } from '../../app-constants';\r\n\r\nexport class Paginationutil {\r\n    static getDefaultFilter() {\r\n        return JSON.stringify({\r\n            \"sort\": \"\",\r\n            \"pageNo\": 1,\r\n            \"pageSize\": 10,\r\n            \"group\": \"\",\r\n            \"filter\": \"\",\r\n            \"queryType\":0,\r\n            \"idValue\":\"\",\r\n            \"tablecode\":\"\"\r\n        })\r\n    }\r\n\r\n    static getGridFilters(Table: any, multiselectFilter: string, isReset = false) {\r\n        let currentPage = Table.first + 1;\r\n        let pageCount = (Table.first / Table.rows) + 1;\r\n        let pageNumber = 1;\r\n        if (Table.first != 0) {\r\n            pageNumber = (Table.first / Table.rows) + 1;\r\n        }\r\n        let currentrows = Table.row * pageNumber;\r\n        let sorts = (Table.sortField == undefined) ? '' : ((Table.sortField) + '' + (Table.sortOrder == -1 ? ' DESC' : ' ASC'));\r\n        let pageSize = Table.rows;\r\n\r\n       \r\n\r\n        let columnLevelFilter = Object.keys(Table.filters).map((key) => {\r\n            if((key != \"dob\" && key != \"createddate\"))    {     \r\n                if(typeof(Table.filters[key].value) != \"number\"){\r\n                    let comparison = `LIKE '%${Table.filters[key].value}%'`;\r\n                    return `(${key} ${comparison})`\r\n                }else{\r\n                    let comparison = `='${Table.filters[key].value}'`;\r\n                    return `(${key} ${comparison})`\r\n                }            \r\n            }\r\n            else{\r\n                let comparison = `< '${Table.filters[key].value}'`;\r\n                return `(${key} ${comparison})`\r\n            }\r\n           \r\n        }).join(' AND ')\r\n\r\n        \r\n\r\n        let finalFilterString = \"\";\r\n\r\n        if (columnLevelFilter.trim() != \"\" && multiselectFilter.trim() != \"\") {\r\n            finalFilterString = (columnLevelFilter + ' AND (' + '' + multiselectFilter + ')');\r\n        }\r\n        else if(multiselectFilter.trim() != \"\"){\r\n            finalFilterString = multiselectFilter;\r\n        }\r\n        else if(columnLevelFilter.trim() != \"\"){\r\n            finalFilterString = columnLevelFilter;\r\n        }\r\n\r\n        if (isReset) {\r\n            Table.first = 0;\r\n            finalFilterString=\"\";\r\n        }\r\n\r\n        return {\r\n            \"currentPage\": currentPage,\r\n            \"pageCount\": pageCount,\r\n            \"sorts\": sorts,\r\n            \"pageNo\": (isReset ? 1 : pageNumber),\r\n            \"pageSize\": pageSize,\r\n            \"group\": \"\",\r\n            \"queryType\":1,\r\n            \"idValue\":\"\",\r\n            \"tablecode\":\"\",\r\n            \"filter\": (finalFilterString.trim() != \"\" ? `(${finalFilterString})` : \"\")\r\n        };\r\n    }\r\n\r\n    static getDefaultFormat() {\r\n        return AppConstants.DateTimeFormat.datetimeformat;\r\n     }\r\n\r\n    static getServerSideDateFormat(){\r\n        return AppConstants.DateTimeFormat.serversidedateformat;\r\n    }\r\n\r\n    static getServerSideYearFormat(){\r\n        return AppConstants.DateTimeFormat.serversideyearformat;\r\n    }\r\n\r\n    static getAngularDateFormat(){\r\n        return AppConstants.DateTimeFormat.angulardateformat;\r\n    }\r\n\r\n    static getFilterDateFormat(){\r\n        return AppConstants.DateTimeFormat.filterdateformat;\r\n    }\r\n\r\n    static getAngularMonthFormat(){\r\n        return AppConstants.DateTimeFormat.angularmonthformat;\r\n    }\r\n}\r\n","export class Parents {\r\n\r\n    id: number;\r\n    fname: string;\r\n    lname: string;\r\n    mobile: string;\r\n    gender: string;\r\n    email: string;    \r\n    createddate: Date;\r\n    createdby: string;\r\n    indexId:number;\r\n    querytype:number;\r\n    status:string;\r\n\r\n}\r\n","export class Qualifications {\r\n    \r\n         id: number;\r\n         code: string;\r\n         title: string;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;\r\n         querytype:number;\r\n         status:string;\r\n   \r\n}\r\n","export class Students {\r\n\r\n     id:string;\r\n     firstName:string;\r\n     middleName:string;\r\n     lastName:string;\r\n     branch:number;\r\n     dateofbirth:string;\r\n     gender:string;\r\n     joineddate:string;\r\n     email:string;\r\n     classs:number;\r\n     section:number;\r\n\r\n     d_noc:string;\r\n     streetc:string;\r\n     villagec:string;\r\n     countryc:string;\r\n     statec:string;\r\n     cityc:string;\r\n     pincodec:string;\r\n     homephn:string;\r\n     mblno:string;\r\n\r\n     d_nop:string;\r\n     streetp:string;\r\n     villagep:string;\r\n     countryp:string;\r\n     statep:string;\r\n     cityp:string;\r\n     pincodep:string;\r\n\r\n     pfname:string;\r\n     plname:string;\r\n     pmobile:string;\r\n     pemail:string;\r\n\r\n     e1fname:string;\r\n     e1lname:string;\r\n     e1mobile:string;\r\n     e1email:string;\r\n\r\n     e2fname:string;\r\n     e2lname:string;\r\n     e2mobile:string;\r\n     e2email:string;\r\n\r\n     indexId:number;\r\n     querytype:number;\r\n     status:string;\r\n}\r\n\r\nexport class SubjectWiseMarks{\r\n     id:string;\r\n     classid:number;\r\n     examid:number;\r\n}\r\n","export class Subjects {\r\n    \r\n         id: number;\r\n         code: string;\r\n         name: string;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;\r\n         querytype:number;\r\n         status:string;\r\n    \r\n}\r\n","export class Teachers {    \r\n     id:number;\r\n     teacherName:string;\r\n     dateofbirth:string;\r\n     qualification:any[];\r\n     qualifications:string;\r\n     email:string;\r\n     mobile:string;\r\n     image:string;\r\n     experience:string;\r\n     expertiseIn:any[];\r\n     associatedClasses:any[];\r\n     associatedSections:any[];\r\n     subjects:string;\r\n     classes:string;\r\n     sections:string;\r\n     branch:number;\r\n     gender:string;\r\n     indexId:number; \r\n     status:string;\r\n     querytype:number;\r\n     // teacherclasssections:TeacherClassSections;\r\n}\r\n\r\n// export class TeacherClassSections{\r\n//      class:string;\r\n//      sections:string;\r\n// }","\r\nexport class Tiles {\r\n    constructor(\r\n      public count: number,\r\n      public name: string,\r\n      public color:string,\r\n      public icon:string) { }\r\n  }","export class Timetable {\r\n\r\n         id: number;\r\n         classid: number;\r\n         subjectid: number;\r\n         teacherid: number;\r\n         periodfrom: Date;\r\n         periodto: Date;\r\n         createddate: Date;\r\n         createdby: string;\r\n         indexId:number;\r\n        querytype:number;\r\n        status:string;\r\n    \r\n}\r\n","export class Users {\r\n    \r\n\r\n     id:number;\r\n     username:string;\r\n     displayname:string;\r\n     usertype:string;\r\n     userstatus:string;\r\n     indexId:number;\r\n     querytype:number;\r\n    \r\n\r\n}\r\n","export class Utility {\r\n    \"sort\": string;\r\n    \"pageNo\": number;\r\n    \"pageSize\": number;\r\n    \"group\": string;\r\n    \"filter\":string;\r\n    \"queryType\":number;\r\n    \"idValue\":string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Achievements } from '../models/achievements';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AchievementsService { \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getAchievements(pagingData) {\r\n        // this.achievementsJsonData.next(this.achievements);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Achievement/GetAchievements\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDAchievements(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Achievement/AEDAchievements\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n\r\n    public getEvents(pagingData) {\r\n        // this.achievementsJsonData.next(this.achievements);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Events/GetEvents\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n\r\n    public AEDEvents(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Events/AEDEvents\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Addauditlog } from '../models/addauditlog';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddauditlogService {\r\n\r\n  constructor() { }\r\n\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Auditlogs } from '../models/auditlogs';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuditlogsService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  public getAuditlogs(pagingData) {\r\n    // this.auditlogsJsonData.next(this.auditlogs);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"AuditLogs/GetAuditLogTables\"\r\n\r\n    return this.httpClient.post\r\n      (loginUrl, pagingData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n  public AuditlogTableDetails(pagingData) {\r\n    // this.auditlogsJsonData.next(this.auditlogs);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"AuditLogs/AuditlogTableDetails\"\r\n\r\n    return this.httpClient.post\r\n      (loginUrl, pagingData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthorizationServiceBase, AuthorizationResult } from 'src/app/core/security/authorization.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthorizationService extends AuthorizationServiceBase {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n   }\r\n\r\n   authorizeRouteAccess(route:string): Observable<AuthorizationResult>{\r\n     const url= AppConstants.Api.AdminApp + 'Users/authorizeroute/';\r\n     return this.httpClient.post(url,{routeUrl:route}).pipe(\r\n       map((response:AuthorizationResult) => {\r\n         return response;\r\n       })\r\n     )\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Branches } from '../models/branches';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BranchesService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getBranches(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Branches/GetBranches\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n\r\n    public AEDBranches(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Branches/AEDBranches\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Classes } from '../models/classes';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ClassesService {\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getClasses(pagingData) {\r\n        // this.classesJsonData.next(this.classes);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Classes/GetClasses\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDClasses(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Classes/AEDClasses\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { AppConstants } from '../../app-constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  public getDashBoard(reqObj) {\r\n      const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n      var loginUrl: string = AppConstants.Api.AdminApp + \"Dashboard/GetDashboard\"\r\n      return this.httpClient.post\r\n          (loginUrl, reqObj, { headers: headers}).pipe(\r\n              map((response: any) => {\r\n                  return response;\r\n              }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DropdownService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  public getDropdowns(requestData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var Url: string = AppConstants.Api.AdminApp + \"Dropdown/GetDropdowns\"\r\n\r\n    return this.httpClient.post\r\n      (Url, requestData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public getMenuOptions() {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var Url: string = AppConstants.Api.AdminApp + \"Dropdown/GetMenuOptions\"\r\n\r\n    return this.httpClient.post\r\n      (Url, \"\", { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Exams } from '../models/exams';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ExamsService { \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getExams(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Exams/GetExams\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDExams(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Exams/AEDExams\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InputPatternService {\r\n\r\n  constructor() { }\r\n\r\n  // Only Integer Numbers\r\n  Integers(event) {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    // Only Numbers 0-9\r\n    if ((charCode < 48 || charCode > 57)) {\r\n      event.preventDefault();\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Only Numbers with Decimals\r\n  Decimals(event) {\r\n    var charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode != 46 && charCode > 31\r\n      && (charCode < 48 || charCode > 57)) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Only AlphaNumeric\r\n  AlphaNumeric(event) {\r\n\r\n    var inp = String.fromCharCode(event.keyCode);\r\n\r\n    if (/[a-zA-Z0-9 ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n  // Only AlphaNumeric with comma\r\n  AlphaNumericwithcomma(event) {\r\n\r\n    var inp = String.fromCharCode(event.keyCode);\r\n\r\n    if (/[a-zA-Z0-9 ,]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n   // Only Alphabet\r\n   Alphabet(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z ]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n   AlphaNumericwithspecialsymbols(event) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[a-zA-Z0-9 ;_/,:*&.-]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import{HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { SessionTimeoutService } from 'src/app/core/security/session-timeout.service';\r\nimport { AppConstants } from '../../app-constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  public static Token:string;\r\n\r\n  constructor(private httpClient : HttpClient,private sessionTimeOutService : SessionTimeoutService) { }\r\n\r\n  submitUserAccessDetails(loginUserData){\r\n    const headers = new HttpHeaders().set(\"Content-Type\",\"application/json\");\r\n    let data=JSON.stringify({\r\n      UserName:loginUserData.userName,\r\n      Password:loginUserData.password\r\n    });\r\n    var  loginUrl:string = AppConstants.Api.security+\"AccessToken/ValidateUser\"\r\n    return this.httpClient.post\r\n    (loginUrl,data,{headers:headers}).pipe(\r\n    map((response:any)=> {\r\n      //login successful if there's a jwt token in the response\r\n      var token =  response.token;\r\n      if(token){\r\n        //set token property\r\n        LoginService.Token = token;\r\n        var userInformationString = JSON.stringify({UserName:loginUserData.userName,token:token,userId:response.userId});\r\n\r\n        //store username and jwt token in local storage to keep user logged in between page refreshes\r\n        sessionStorage.setItem('currentUser',userInformationString);\r\n\r\n        this.sessionTimeOutService.startTimer(response.timeoutMinutes,response.warningMinutes);\r\n\r\n        return response;\r\n      }else{\r\n        return response;\r\n      }\r\n    }),\r\n    catchError(e => {\r\n      if(e.status === 401){\r\n        return \"Invalid Credintials\";\r\n      }else{\r\n        return \"Unknown Credintials\";\r\n      }\r\n    }));    \r\n  }\r\n\r\n  logout():void{\r\n    LoginService.Token = null;\r\n    this.sessionTimeOutService.cancelTimer();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { News } from '../models/news';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NewsService {\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getNews(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"News/GetNews\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDNews(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"News/AEDNews\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Parents } from '../models/parents';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ParentsService {\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getParents(pagingData) {\r\n        // this.classesJsonData.next(this.classes);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Parents/GetParents\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDParents(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Parents/AEDParents\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Qualifications } from '../models/qualifications';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class QualificationsService {  \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getQualifications(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Qualifications/GetQualifications\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDQualifications(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Qualifications/AEDQualifications\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }   \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { AppConstants } from \"../../app-constants\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RoleAccessService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  UserFeatures(id) {\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string =\r\n      AppConstants.Api.AdminApp + \"RoleAccess/UserFeatures\";\r\n\r\n    return this.httpClient\r\n      .post(loginUrl,id, { headers: headers})\r\n      .pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n\r\n  public AEDRoleAccess(pagingData,ID) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"RoleAccess/AEDRoleAccess\";\r\n    let data=JSON.stringify({\r\n      listData:pagingData,\r\n      id:ID\r\n    });\r\n\r\n    return this.httpClient\r\n      .post(loginUrl, data, { headers: headers})\r\n      .pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Studentreports } from '../models/studentreports';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentreportsService {\r\n  public teachers: Studentreports[]= \r\n  [\r\n    {\r\n      \"id\": 1,     \r\n      \"subject\": \"Telugu\",\r\n      \"marksobtained\": 45,\r\n      \"totalmarks\": 50,\r\n      \"status\": \"Pass\"   \r\n    },\r\n    {\r\n      \"id\": 1,     \r\n      \"subject\": \"Hindi\",\r\n      \"marksobtained\": 35,\r\n      \"totalmarks\": 50,\r\n      \"status\": \"Pass\"   \r\n    },\r\n    {\r\n      \"id\": 1,     \r\n      \"subject\": \"English\",\r\n      \"marksobtained\": 10,\r\n      \"totalmarks\": 50,\r\n      \"status\": \"Fail\"   \r\n    },\r\n    {\r\n      \"id\": 1,     \r\n      \"subject\": \"Mathematics\",\r\n      \"marksobtained\": 48,\r\n      \"totalmarks\": 50,\r\n      \"status\": \"Pass\"   \r\n    },\r\n    {\r\n      \"id\": 1,     \r\n      \"subject\": \"Science\",\r\n      \"marksobtained\": 35,\r\n      \"totalmarks\": 50,\r\n      \"status\": \"Pass\"   \r\n    },\r\n    {\r\n      \"id\": 1,     \r\n      \"subject\": \"Social\",\r\n      \"marksobtained\": 45,\r\n      \"totalmarks\": 50,\r\n      \"status\": \"Pass\"   \r\n    }\r\n  ];\r\n  private studentreportsJsonData = new BehaviorSubject<any>(null);\r\n  public studentreportsJson = this.studentreportsJsonData.asObservable();\r\n\r\n  constructor() { }\r\n  public  getStudentreports() {    \r\n    this.studentreportsJsonData.next(this.teachers);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Students } from '../models/students';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentsService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  public getStudents(pagingData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"Students/GetStudents\"\r\n\r\n    return this.httpClient.post\r\n      (loginUrl, pagingData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public AEDStudents(pagingData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"Students/AEDStudents\"\r\n\r\n    return this.httpClient.post\r\n      (loginUrl, pagingData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public GetStudentProfile(pagingData,studentId) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"Students/GetStudentProfile\";\r\n    let requestData=JSON.stringify({\r\n      data:pagingData,\r\n      stduentid:studentId\r\n    });\r\n\r\n    return this.httpClient.post\r\n      (loginUrl, requestData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public GetExamWiseSubjectMarks(pagingData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"Students/GetExamWiseSubjectMarks\"\r\n\r\n    return this.httpClient.post\r\n      (loginUrl, pagingData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public getDropdowns(jsonData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var Url: string = AppConstants.Api.AdminApp + \"Students/GetExamWiseClassesDropdowns\"\r\n\r\n    return this.httpClient.post\r\n      (Url, jsonData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public GetStudentClassWiseExamMarks(requestData, type) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    \r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n    if (type == \"MARKS\") {\r\n      var Url: string = AppConstants.Api.AdminApp + \"Students/GetStudentClassWiseExamMarks\"\r\n    }\r\n    else {\r\n      var Url: string = AppConstants.Api.AdminApp + \"Students/GetStudentClassWiseExamReports\"\r\n    }\r\n\r\n    return this.httpClient.post\r\n      (Url, requestData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public StudentProfilePicUpload(requestData) {\r\n    // const headers = new HttpHeaders().set(\"Content-Type\", 'multipart/form-data');\r\n\r\n    const headers:HttpHeaders = new HttpHeaders();\r\n    headers.append(\"Content-Type\", 'multipart/form-data');\r\n    headers.append(\"Redirect-On-Request-Failure\", 'true');\r\n\r\n    var Url: string = AppConstants.Api.AdminApp + \"Upload/UploadStudentProfilePic\"\r\n\r\n    return this.httpClient.post\r\n      (Url, requestData,\r\n        {\r\n          headers: headers, \r\n          reportProgress: true, observe: 'events'\r\n        }\r\n      ).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public SubmitStudentClassWiseExamMarks(requestData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var Url: string = AppConstants.Api.AdminApp + \"Students/SubmitStudentClassWiseExamMarks\"\r\n\r\n    return this.httpClient.post\r\n      (Url, requestData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subjects } from '../models/subjects';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SubjectsService {  \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getSubjects(pagingData) {\r\n        // this.subjectsJsonData.next(this.subjects);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Subjects/GetSubjects\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    public AEDSubjects(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Subjects/AEDSubjects\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Teachers } from '../models/teachers';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TeachersService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n  public getTeachers(pagingData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var Url: string = AppConstants.Api.AdminApp + \"Teachers/GetTeachers\"\r\n\r\n    return this.httpClient.post\r\n      (Url, pagingData, { headers: headers}).pipe(\r\n        map((response: any) => {\r\n          return response;\r\n        }));\r\n  }\r\n\r\n  public AEDTeachers(pagingData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"Teachers/AEDTeachers\"\r\n\r\n    return this.httpClient.post\r\n        (loginUrl, pagingData, { headers: headers}).pipe(\r\n            map((response: any) => {\r\n                return response;\r\n            }));\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Timetable } from '../models/timetable';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TimetableService { \r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n    public getTimetable(pagingData) {\r\n        // this.timetableJsonData.next(this.timetable);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Timetable/GetTimetable\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n\r\n    public AEDTimetable(pagingData) {\r\n        // this.branchesJsonData.next(this.branches);\r\n        const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n        var loginUrl: string = AppConstants.Api.AdminApp + \"Timetable/AEDTimetable\"\r\n\r\n        return this.httpClient.post\r\n            (loginUrl, pagingData, { headers: headers}).pipe(\r\n                map((response: any) => {\r\n                    return response;\r\n                }));\r\n    }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Users } from '../models/users';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AppConstants } from '../../app-constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  constructor(private httpClient: HttpClient) { }\r\n  public getUsers(pagingData) {\r\n    // this.branchesJsonData.next(this.branches);\r\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n    var loginUrl: string = AppConstants.Api.AdminApp + \"Users/GetUsers\"\r\n\r\n    return this.httpClient.post\r\n        (loginUrl, pagingData, { headers: headers}).pipe(\r\n            map((response: any) => {\r\n                return response;\r\n            }));\r\n}\r\npublic AEDUsers(pagingData) {\r\n  // this.branchesJsonData.next(this.branches);\r\n  const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\r\n\r\n  var loginUrl: string = AppConstants.Api.AdminApp + \"Users/AEDUsers\"\r\n\r\n  return this.httpClient.post\r\n      (loginUrl, pagingData, { headers: headers}).pipe(\r\n          map((response: any) => {\r\n              return response;\r\n          }));\r\n}\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SharedroutingComponent } from './sharedrouting.component';\r\n\r\nconst routes: Routes = [{ path: '', component: SharedroutingComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SharedroutingRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sharedrouting',\r\n  templateUrl: './sharedrouting.component.html',\r\n  styleUrls: ['./sharedrouting.component.scss']\r\n})\r\nexport class SharedroutingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sharedrouting works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedroutingRoutingModule } from './sharedrouting-routing.module';\r\nimport { SharedroutingComponent } from './sharedrouting.component';\r\n\r\n\r\n\r\n// primeng module div section\r\n//Teja Prasad Section Starts\r\nimport {MegaMenuModule} from 'primeng/megamenu';\r\nimport {ChartModule} from 'primeng/chart';\r\nimport {FullCalendarModule} from 'primeng/fullcalendar';\r\nimport {CarouselModule} from 'primeng/carousel';\r\nimport {ProgressSpinnerModule} from 'primeng/progressspinner';\r\n\r\n\r\n//Teja Prasad Section Ends\r\nimport {CardModule} from 'primeng/card';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {TableModule} from 'primeng/table';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {CalendarModule} from 'primeng/calendar';\r\nimport {TabViewModule} from 'primeng/tabview';\r\n//Sindhu Section Starts\r\n\r\n//Sindhu Section Ends\r\nimport {AccordionModule} from 'primeng/accordion';\r\nimport {MultiSelectModule} from 'primeng/multiselect';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {RadioButtonModule} from 'primeng/radiobutton';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {PasswordModule} from 'primeng/password'\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport { AuthorizationGuard } from 'src/app/core/security/authorization-guard';\r\nimport { AUTHZ_SERVICE } from 'src/app/core/security/authorization.service';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\n//Chaitanya Section Starts\r\n\r\n//Chaitanya Section Ends\r\n\r\n\r\n@NgModule({\r\n  declarations: [SharedroutingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedroutingRoutingModule,\r\n    InputTextModule,\r\n    MegaMenuModule,\r\n    ChartModule,\r\n    FullCalendarModule,\r\n    CarouselModule,\r\n    CardModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    MultiSelectModule, DropdownModule,\r\n    CalendarModule,\r\n    TabViewModule,\r\n    AccordionModule,\r\n    CheckboxModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    PasswordModule,\r\n    DialogModule,\r\n    ProgressSpinnerModule\r\n  ],\r\n  exports:[\r\n    InputTextModule,\r\n    MegaMenuModule,\r\n    ChartModule,\r\n    FullCalendarModule,\r\n    CarouselModule,\r\n    CardModule,\r\n    ButtonModule,\r\n    TableModule,\r\n    MultiSelectModule, DropdownModule,\r\n    CalendarModule,\r\n    TabViewModule,\r\n    AccordionModule,\r\n    CheckboxModule,\r\n    RadioButtonModule,\r\n    InputTextareaModule,\r\n    PasswordModule,\r\n    DialogModule,\r\n    ProgressSpinnerModule\r\n  ],\r\n  providers:[\r\n    AuthorizationGuard,\r\n    {provide:AUTHZ_SERVICE,useClass:AuthorizationService}\r\n  ]\r\n})\r\nexport class SharedroutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagenotfound',\r\n  templateUrl: './pagenotfound.component.html',\r\n  styleUrls: ['./pagenotfound.component.scss']\r\n})\r\nexport class PagenotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>pagenotfound works!</p>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { LoadingHttpInterceptor } from '../core/loading-http-interceptor/loading-http-interceptor.component';\r\nimport { Subscription, observable, Observable, timer } from 'rxjs';\r\n\r\nimport { debounce } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  private subsription: Subscription;\r\n  public visible: boolean;\r\n  private debounceDelay = 0;\r\n\r\n\r\n  constructor(private loadingHttpInterceptor: LoadingHttpInterceptor) {\r\n    this.subsription = this.loadingHttpInterceptor\r\n      .anyRequestsLoading\r\n      .pipe(debounce(this.handleDebounce.bind(this)))\r\n      .subscribe(anyRequestLoading => {\r\n        this.visible = anyRequestLoading;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log(this.visible);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsription.unsubscribe();\r\n  }\r\n  private handleDebounce(anyRequestLoading: boolean): Observable<number> {\r\n    if (anyRequestLoading) {\r\n      return timer(this.debounceDelay)\r\n    }\r\n    return timer(0);\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"loading-container\" id=\"spinner\" *ngIf=\"visible\">\r\n    <div class=\"loading-progress\">\r\n        <!-- <div class=\"rotator\">\r\n            <div class=\"rotator\">\r\n                <div class=\"rotator colored\">\r\n                        <div class=\"rotator\">\r\n                            <div class=\"rotator colored\">\r\n                                <div class=\"rotator colored\"></div>\r\n                                <div class=\"rotator\">uyt</div>\r\n                            </div>\r\n                            <div class=\"rotator colored\"></div>\r\n                        </div>\r\n                        <div class=\"rotator\"></div>\r\n                </div>\r\n                <div class=\"rotator\"></div>\r\n            </div>\r\n            <div class=\"rotator\"></div>\r\n        </div>\r\n        <div class=\"rotator\"></div> -->\r\n        <!-- <p-progressSpinner></p-progressSpinner> -->\r\n        <p-progressSpinner \r\n        [style]=\"{width: '100px', height: '100px'}\" \r\n        styleClass=\"custom-spinner\" \r\n        strokeWidth=\"8\" \r\n         animationDuration=\".5s\"></p-progressSpinner>\r\n\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}